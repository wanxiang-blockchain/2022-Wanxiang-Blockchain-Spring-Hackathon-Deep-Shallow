{"version":3,"sources":["assets/Script/Common/Light/Obstacle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Quadtree, { Bound } from \"../Components/QuadTree\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Obstacle extends cc.Component {\n\n    private _quadtree: Quadtree = null;\n    private _polygons: {[key: string]: cc.Vec2[]} = cc.js.createMap();\n\n\n    onLoad() {\n        let size = cc.view.getVisibleSize();\n        this._quadtree = new Quadtree({x: 0, y: 0, width: size.width, height: size.height});\n    }\n\n    public addPolygon(uid: string, points: cc.Vec2[]) {\n        this._polygons[uid] = points;\n        let bound = this._getBound(points);\n        bound.uid = uid;\n        this._quadtree.insert(bound);\n    }\n\n    public removePolygon(uid: string) {\n        // todo...\n    }\n\n    public getPolygons(bound: Bound) {\n        let bounds = this._quadtree.retrieve(bound);\n        let polygons: cc.Vec2[][] = [];\n        for(const e of bounds) {\n            polygons.push(this._polygons[e.uid]);\n        }\n        return polygons;\n    }\n\n    private _getBound(points: cc.Vec2[]) {\n        let point = points[0];\n        let xMin = point.x;\n        let xMax = point.x;\n        let yMin = point.y;\n        let yMax = point.y;\n        for(let i=0; i<points.length; i++) {\n            if(points[i].x < xMin) xMin = points[i].x;\n            if(points[i].x > xMax) xMax = points[i].x;\n            if(points[i].y < yMin) yMin = points[i].y;\n            if(points[i].y > yMax) yMax = points[i].y;\n        }\n        return new Bound(xMin, yMin, xMax - xMin, yMax - yMin);\n    }\n\n    public clear() {\n        this._quadtree.clear();\n        this._polygons = {};\n    }\n\n}"]}