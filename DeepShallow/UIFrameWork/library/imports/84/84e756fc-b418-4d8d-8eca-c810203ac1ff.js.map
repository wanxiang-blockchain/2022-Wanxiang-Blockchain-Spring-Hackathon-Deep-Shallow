{"version":3,"sources":["assets/Script/Common/Utils/DebugWindowUtils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["declare const __modular;\n\nfunction hookCtor(func: Function) {\n    return function (...params) {\n        let result = func.call(this, ...params) || this;\n        func['___ins'] = result;\n        return result;\n    };\n}\nexport default class DebugWindowUtil {\n    private static getModuleName(modules: string) {\n        if (typeof modules !== 'string') {\n            return modules;\n        }\n        return modules.split('/').pop().split('.')[0];\n    }\n    public static init() {\n        const require = typeof __modular !== 'undefined' ? __modular : {};\n        if (!require || !require.modules) {\n            return;\n        }\n        const installedModules = require.modules;\n        let allExports = {};\n        function addExports(k, obj, modName) {\n            let name = k;\n            if(obj && obj.name) {\n                name = obj.name;\n            }\n            if (allExports[k]) {\n                return addExports(k + modName, obj, modName);\n            }\n            let wraped = obj;\n            // if(obj.prototype && Object.keys(obj).length > 1 && !wraped.__origin){\n            //     wraped = hookCtor(obj);\n            //     wraped.__origin = obj;\n            //     Object.setPrototypeOf(wraped, obj);\n            // }\n            allExports[name] = wraped;\n            return wraped;\n        }\n\n        for (let k in installedModules) {\n            const module = installedModules[k];\n            const file = module.file;\n            const exports = module.module ? module.module.exports : {};\n            const modName = this.getModuleName(file);\n            for (let k in exports) {\n                if (k === '__esModule') {\n                    continue;\n                } else if (k === 'default') {\n                    exports[k] = addExports(modName, exports[k], modName);\n                    if (!exports[modName]) {\n                        exports[modName] = exports[k];\n                    }\n                } else {\n                    exports[k] = addExports(k, exports[k], modName);\n                }\n            }\n\n            window[`${modName}_mod`] = exports;\n        }\n        for (let k in allExports) {\n            if (window[k]) { continue; }\n            window[k] = allExports[k];\n        }\n    }\n}"]}