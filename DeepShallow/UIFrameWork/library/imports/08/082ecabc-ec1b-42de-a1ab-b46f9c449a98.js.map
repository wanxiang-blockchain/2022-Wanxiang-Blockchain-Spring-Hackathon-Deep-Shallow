{"version":3,"sources":["assets/Script/Common/Utils/BroadCast.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nexport class Broadcast<T> {\n\n    private bindings: ListenerBinding<T>[] = [];\n\n    on(listener: (...params: T[]) => void, target: any): ListenerBinding<T> {\n        var binding = new ListenerBinding(listener, target, false, this);\n        this.bindings.push(binding);\n        return binding;\n    }\n\n    once(listener: (...params: T[]) => void, target: any): ListenerBinding<T> {\n        var binding = new ListenerBinding(listener, target, true, this);\n        this.bindings.push(binding);\n        return binding;\n    }\n\n    dispatch(...params: T[]) {\n        var flag = false;\n        for (let item of this.bindings) {\n            if (!item.hasDestroyed) {\n                item.execute.apply(item, params);\n            } else {\n                flag = true;\n            }\n        }\n        if (flag) {\n            for (let i = 0; i < this.bindings.length; i++) {\n                if (this.bindings[i].hasDestroyed) {\n                    this.bindings.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n\n    get(listener: (...params: T[]) => void, target: any): ListenerBinding<T> {\n        for (let item of this.bindings) {\n            if (item.listener == listener && item.target == target && !item.hasDestroyed) return item;\n        }\n        return null;\n    }\n\n    has(listener: (...params: T[]) => void, target: any): boolean {\n        for (let item of this.bindings) {\n            if (item.listener == listener && item.target == target && !item.hasDestroyed) return true;\n        }\n        return false;\n    }\n\n    remove(listener: (...params: T[]) => void, target: any) {\n        for (let item of this.bindings) {\n            if (item.listener == listener && item.target == target && !item.hasDestroyed) {\n                return item.destroy();\n            }\n        }\n    }\n\n    removeAll() {\n        while (this.bindings.length) {\n            this.bindings.pop().destroy();\n        }\n    }\n}\n\nexport class ListenerBinding<T> {\n\n    constructor(listener: (...params: T[]) => void, target: any, once: boolean, boradcast: Broadcast<T>) {\n        this.listener = listener;\n        this.target = target;\n        this.once = once;\n        this.broadcast = boradcast;\n        this.hasDestroyed = false;\n    }\n\n    readonly listener: (...params: T[]) => void;\n\n    readonly target: any;\n\n    readonly once: boolean;\n\n    readonly broadcast: Broadcast<T>;\n\n    readonly hasDestroyed: boolean;\n\n    execute(...params: T[]): any {\n        if (!this.hasDestroyed) {\n            let result = this.listener.apply(this.target, params);\n            if (this.once) {\n                this.destroy();\n            }\n            return result;\n        }\n        return null;\n    }\n\n    destroySelf = () => {\n        this.destroy();\n    }\n\n    destroy(): void {\n        (this.listener as any) = null;\n        (this.target as any) = null;\n        (this.once as any) = null;\n        (this.broadcast as any) = null;\n        (this.hasDestroyed as any) = true;\n    }\n}\n\n"]}