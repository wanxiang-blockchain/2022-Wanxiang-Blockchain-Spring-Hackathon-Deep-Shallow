{"version":3,"sources":["assets/Script/UIFrame/UIBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIManager from \"./UIManager\";\nimport { FormType } from \"./config/SysDefine\";\nimport { ECloseType, IFormData } from \"./Struct\";\nimport AdapterMgr from \"./AdapterMgr\";\nimport ResMgr from \"./ResMgr\";\nimport FormMgr from \"./FormMgr\";\n\nexport default class UIBase extends cc.Component {\n    /** 窗体id,该窗体的唯一标示(请不要对这个值进行赋值操作, 内部已经实现了对应的赋值) */\n    public fid: string = '';\n    /** 窗体数据 */\n    public formData: IFormData | null = null;\n    /** 窗体类型 */\n    public formType: FormType | null = null;\n    /** 关闭类型, 关闭窗口后销毁, 会将其依赖的资源一并销毁, 采用了引用计数的管理, 不用担心会影响其他窗体 */\n    public closeType: ECloseType | null = null;;\n    /** 是否已经调用过preinit方法 */\n    private _inited = false;\n\n    public view: cc.Component = null;\n\n    public static open(param?: any, formData?: IFormData) {\n        let uiconfig = this['UIConfig'];\n        if(!uiconfig) {\n            cc.warn(`sorry UIConfig is null, please check UIConfig`);\n            return ;\n        }\n        FormMgr.open(uiconfig, param, formData);\n    }\n    public static close() {\n        FormMgr.close(this['UIConfig']);\n    }\n\n    /** 预先初始化 */\n    public async _preInit(params: any) {\n        if(this._inited) return ;\n        this._inited = true;\n        this.view = this.getComponent(`${this.node.name}_Auto`);\n        // 加载这个UI依赖的其他资源\n        let errorMsg = await this.load(params);\n        if(errorMsg) {\n            cc.error(errorMsg);\n            this.closeSelf();\n            return ;\n        }\n        this.onInit(params);\n    }\n\n    model: any = null; \n\n    /** 可以在这里进行一些资源的加载, 具体实现可以看test下的代码 */\n    public async load(params: any): Promise<string> {\n        return null;\n    }\n\n    /** 初始化, 只调用一次 */\n    public onInit(params: any) {}\n    // 显示回调\n    public onShow(params: any) {}\n    // 在显示动画结束后回调\n    public onAfterShow(params: any) {}\n    // 隐藏回调\n    public onHide() {}    \n    // 在隐藏动画结束后回调\n    public onAfterHide() {}\n\n    // 关闭自己\n    public async closeSelf(): Promise<boolean> {\n       return await UIManager.getInstance().closeForm(this.fid);\n    }\n\n    /**\n     * 弹窗动画\n     */\n    public async showEffect() {}\n    public async hideEffect() {}\n\n    /** 设置是否挡住触摸事件 */\n    private _blocker: cc.BlockInputEvents = null;\n    public setBlockInput(block: boolean) {\n        if(!this._blocker)  {\n            let node = new cc.Node('block_input_events');\n            this._blocker = node.addComponent(cc.BlockInputEvents);\n            this._blocker.node.setContentSize(AdapterMgr.inst.visibleSize);\n            this.node.addChild(this._blocker.node, cc.macro.MAX_ZINDEX);\n        }\n        this._blocker.node.active = block;\n    }\n\n    public async loadRes(url: string, type?: typeof cc.Asset) {\n        return await ResMgr.inst.loadDynamicRes(url, type, this.fid);\n    }\n}\n\n//@ts-ignore\ncc.UIBase = UIBase;"]}