{"version":3,"sources":["assets/Script/Common/Utils/Measure.ts"],"names":[],"mappings":";;;;;;;AAAO,IAAM,OAAO,GAAG,UACrB,MAAc,EACd,WAAmB,EACnB,UAA8B;IAE9B,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IAExC,UAAU,CAAC,KAAK,GAAG;QAAU,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QAClC,IAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAChC,IAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChD,IAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QACjC,OAAO,CAAC,GAAG,CAAI,WAAW,yBAAoB,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAe,CAAC,CAAC;QAC1F,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAhBW,QAAA,OAAO,WAgBlB","file":"","sourceRoot":"/","sourcesContent":["export const measure = (\n  target: Object,\n  propertyKey: string,\n  descriptor: PropertyDescriptor\n) => {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = function (...args) {\n    const start = performance.now();\n    const result = originalMethod.apply(this, args);\n    const finish = performance.now();\n    console.log(`${propertyKey} Execution time: ${(finish - start).toFixed(2)} milliseconds`);\n    return result;\n  };\n\n  return descriptor;\n};"]}