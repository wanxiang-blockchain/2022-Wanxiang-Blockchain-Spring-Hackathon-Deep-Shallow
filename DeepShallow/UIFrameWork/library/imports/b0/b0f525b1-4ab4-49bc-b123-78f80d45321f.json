{
  "__type__": "cc.TextAsset",
  "_name": "StateMachine.d",
  "_objFlags": 0,
  "_native": "",
  "text": "// Type definitions for Finite State Machine 2.4\n// Project: https://github.com/jakesgordon/javascript-state-machine\n// Definitions by: Boris Yankov <https://github.com/borisyankov/>,\n// \t\t\t\t\tMaarten Docter <https://github.com/mdocter>,\n// \t\t\t\t\tWilliam Sears <https://github.com/MrBigDog2U>,\n// \t\t\t\t\tsamael <https://github.com/samael65535>,\n// \t\t\t\t\ttaoqf <https://github.com/taoqf>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\nexport type StateMachineErrorCallback = (\n\teventName?: string,\n\tfrom?: string,\n\tto?: string,\n\targs?: any[],\n\terrorCode?: number,\n\terrorMessage?: string,\n\tex?: Error\n) => void; // NB. errorCode? See: StateMachine.Error\n\nexport interface StateMachineEventDef {\n\tname: string;\n\tfrom: any;    // string or string[]\n\tto: string;\n}\n\nexport type StateMachineEvent = (...args: any[]) => void;\n\nexport interface StateMachineConfig {\n\tinitial?: any; // string or { state: 'foo', event: 'setup', defer: true|false }\n\tevents?: StateMachineEventDef[];\n\tcallbacks?: {\n\t\t[s: string]: (event?: string, from?: string, to?: string, ...args: any[]) => any;\n\t};\n\ttarget?: StateMachine;\n\terror?: StateMachineErrorCallback;\n}\n\nexport type StateMachineIsFinished = (state: string) => boolean;\n\nexport const VERSION: string; \t\t        // = \"2.4.0\"\nexport const WILDCARD: string;\t\t        // = '*'\nexport const ASYNC: string;\t\t\t        // = 'async'\n\nexport const Result: {\n\tSUCCEEDED: number;\t        // = 1, the event transitioned successfully from one state to another\n\tNOTRANSITION: number;\t    // = 2, the event was successfull but no state transition was necessary\n\tCANCELLED: number;\t        // = 3, the event was cancelled by the caller in a beforeEvent callback\n\tPENDING: number;\t\t        // = 4, the event is asynchronous and the caller is in control of when the transition occurs\n};\n\nexport const Error: {\n\tINVALID_TRANSITION: number;\t// = 100, caller tried to fire an event that was innapropriate in the current state\n\tPENDING_TRANSITION: number;\t// = 200, caller tried to fire an event while an async transition was still pending\n\tINVALID_CALLBACK: number;\t// = 300, caller provided callback function threw an exception\n};\n\nexport function create(config: StateMachineConfig, target?: StateMachine): StateMachine;\n\nexport interface StateMachineTransition {\n\t(): void;\n\tcancel(): void;\n}\n\nexport type StateMachineIs = (state: string) => boolean;\n\nexport type StateMachineCan = (evt: string) => boolean;\n\nexport type StateMachineTransitions = () => string[];\n\nexport interface StateMachine {\n\tcurrent: string;\n\tis: StateMachineIs;\n\tcan: StateMachineCan;\n\tcannot: StateMachineCan;\n\terror: StateMachineErrorCallback;\n\tisFinished: StateMachineIsFinished;\n\t/*  transition - only available when performing async state transitions; otherwise null. Can be a:\n\t\t[1] fsm.transition(); // called from async callback\n\t\t[2] fsm.transition.cancel();\n\t*/\n\ttransition: StateMachineTransition;\n\ttransitions: StateMachineTransitions;\n}\n\nexport namespace StateMachine {\n\tconst VERSION: string; \t\t        // = \"2.4.0\"\n\tconst WILDCARD: string;\t\t        // = '*'\n\tconst ASYNC: string;\t\t\t        // = 'async'\n\n\tconst Result: {\n\t\tSUCCEEDED: number;\t        // = 1, the event transitioned successfully from one state to another\n\t\tNOTRANSITION: number;\t    // = 2, the event was successfull but no state transition was necessary\n\t\tCANCELLED: number;\t        // = 3, the event was cancelled by the caller in a beforeEvent callback\n\t\tPENDING: number;\t\t        // = 4, the event is asynchronous and the caller is in control of when the transition occurs\n\t};\n\n\tconst Error: {\n\t\tINVALID_TRANSITION: number;\t// = 100, caller tried to fire an event that was innapropriate in the current state\n\t\tPENDING_TRANSITION: number;\t// = 200, caller tried to fire an event while an async transition was still pending\n\t\tINVALID_CALLBACK: number;\t// = 300, caller provided callback function threw an exception\n\t};\n\tfunction create(config: StateMachineConfig, target?: StateMachine): StateMachine;\n}"
}