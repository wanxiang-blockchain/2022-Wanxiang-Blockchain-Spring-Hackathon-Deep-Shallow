{"version":3,"sources":["assets/Script/UIFrame/SoundMgr.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AACxC,gDAA+C;AAEzC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEAoGC;QAlGW,gBAAU,GAAkC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;QAU9D,kBAAY,GAAW,CAAC,CAAC,CAAC;QAC1B,iBAAW,GAAW,CAAC,CAAC,CAAC;QAmBjC,aAAa;QACL,YAAM,GAAW,IAAI,MAAM,EAAE,CAAC;;QAkEtC,iBAAiB;IACrB,CAAC;IA/FG,sBAAkB,gBAAI;aAAtB;YACI,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAS,CAAC,eAAe,CAAC,CAAC,YAAY,CAAW,IAAI,CAAC,CAAC;aAChF;YACD,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAKD,yBAAM,GAAN;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACrC,IAAG,MAAM,EAAE;YACP,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;aAAK;YACF,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;YAC3B,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;YAC3B,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAGD,4BAAS,GAAT;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,wBAAK,GAAL;IAEA,CAAC;IACD,OAAO;IACA,iCAAc,GAArB,UAAsB,WAAmB;QACrC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IACM,kCAAe,GAAtB,UAAuB,YAAoB;QACvC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;QACxC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IACD,aAAa;IACA,4BAAS,GAAtB,UAAuB,GAAW,EAAE,IAAW;QAAX,qBAAA,EAAA,WAAW;;;;;;wBAC3C,IAAG,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE;4BAAE,sBAAQ;wBAE/B,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;4BACrB,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;4BACrD,sBAAQ;yBACX;wBACW,qBAAM,qBAAW,CAAC,WAAW,CAAe,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,EAAA;;wBAAtE,KAAK,GAAG,SAA8D;wBAC1E,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;;;;KAC5D;IACD,WAAW;IACE,6BAAU,GAAvB,UAAwB,GAAW,EAAE,IAAY;QAAZ,qBAAA,EAAA,YAAY;;;;;;wBAC7C,IAAG,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE;4BAAE,sBAAQ;wBAE/B,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;4BACrB,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;4BACtD,sBAAQ;yBACX;wBACW,qBAAM,qBAAW,CAAC,WAAW,CAAe,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,EAAA;;wBAAtE,KAAK,GAAG,SAA8D;wBAC1E,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;;;;KAC9D;IAED,YAAY;IACJ,mCAAgB,GAAxB;QACI,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC/D,IAAG,CAAC,MAAM,EAAE;YACR,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,WAAW;IACH,mCAAgB,GAAxB;QACI,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACvD,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAE1D,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,kCAAe,GAAtB,UAAuB,MAAe,EAAE,EAAe;QAAf,mBAAA,EAAA,MAAc,CAAC;QACnD,IAAG,MAAM,EAAE;YACP,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACxD;aAAK;YACF,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC1D;IACL,CAAC;IA7Fc,cAAK,GAAa,IAAI,CAAC,CAAqB,KAAK;IAJ/C,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAoG5B;IAAD,eAAC;CApGD,AAoGC,CApGqC,EAAE,CAAC,SAAS,GAoGjD;kBApGoB,QAAQ;AAsG7B;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAHA,AAGC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import CocosHelper from \"./CocosHelper\";\nimport { SysDefine } from \"./config/SysDefine\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class SoundMgr extends cc.Component {\n\n    private audioCache: {[key: string]: cc.AudioClip} = cc.js.createMap();\n\n    private static _inst: SoundMgr = null;                     // 单例\n    public static get inst(): SoundMgr {\n        if(this._inst == null) {\n            this._inst = cc.find(SysDefine.SYS_UIROOT_NAME).addComponent<SoundMgr>(this);\n        }\n        return this._inst;\n    }\n\n    private currEffectId: number = -1;\n    private currMusicId: number = -1;\n\n    onLoad () {\n        let volume = this.getVolumeToLocal();\n        if(volume) {\n            this.volume = volume;\n        }else {\n            this.volume.musicVolume = 1;\n            this.volume.effectVolume = 1;\n        }\n        this.setVolumeToLocal();\n\n        cc.game.on(cc.game.EVENT_HIDE, () => {\n            cc.audioEngine.pauseAll();\n        }, this);\n        cc.game.on(cc.game.EVENT_SHOW, () => {\n            cc.audioEngine.resumeAll();\n        }, this);\n    }\n    /** volume */\n    private volume: Volume = new Volume();\n    getVolume() {\n        return this.volume;\n    }\n\n    start () {\n\n    }\n    /**  */\n    public setMusicVolume(musicVolume: number) {\n        this.volume.musicVolume = musicVolume;\n        this.setVolumeToLocal();\n    }\n    public setEffectVolume(effectVolume: number) {\n        this.volume.effectVolume = effectVolume;\n        this.setVolumeToLocal();\n    }\n    /** 播放背景音乐 */\n    public async playMusic(url: string, loop = true) {\n        if(!url || url === '') return ;\n        \n        if(this.audioCache[url]) {\n            cc.audioEngine.playMusic(this.audioCache[url], loop);\n            return ;\n        }\n        let sound = await CocosHelper.loadResSync<cc.AudioClip>(url, cc.AudioClip);\n        this.audioCache[url] = sound;\n        this.currMusicId = cc.audioEngine.playMusic(sound, loop);\n    }\n    /** 播放音效 */\n    public async playEffect(url: string, loop = false) {\n        if(!url || url === '') return ;\n        \n        if(this.audioCache[url]) {\n            cc.audioEngine.playEffect(this.audioCache[url], loop);\n            return ;\n        }\n        let sound = await CocosHelper.loadResSync<cc.AudioClip>(url, cc.AudioClip);\n        this.audioCache[url] = sound;\n        this.currEffectId = cc.audioEngine.playEffect(sound, loop);\n    }\n\n    /** 从本地读取 */\n    private getVolumeToLocal() {\n        let objStr = cc.sys.localStorage.getItem(\"Volume_For_Creator\");\n        if(!objStr) {\n            return null;\n        }\n        return JSON.parse(objStr);\n    }\n    /** 设置音量 */\n    private setVolumeToLocal() {\n        cc.audioEngine.setMusicVolume(this.volume.musicVolume);\n        cc.audioEngine.setEffectsVolume(this.volume.effectVolume);\n\n        cc.sys.localStorage.setItem(\"Volume_For_Creator\", JSON.stringify(this.volume));\n    }\n\n    public setEffectActive(active: boolean, id: number = -1) {\n        if(active) {\n            cc.audioEngine.stop(id < 0 ? this.currEffectId : id);\n        }else {\n            cc.audioEngine.resume(id < 0 ? this.currEffectId : id);\n        }\n    }\n\n    // update (dt) {}\n}\n\nclass Volume {\n    musicVolume: number;\n    effectVolume: number;\n}"]}