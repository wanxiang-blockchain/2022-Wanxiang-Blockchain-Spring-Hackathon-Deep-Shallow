{
  "__type__": "cc.TextAsset",
  "_name": "object-api.d",
  "_objFlags": 0,
  "_native": "",
  "text": "import { IObservableArray, ObservableMap, ObservableSet } from \"../mobx\";\r\nexport declare function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>;\r\nexport declare function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>;\r\nexport declare function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>;\r\nexport declare function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>;\r\nexport declare function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>;\r\nexport declare function values<T>(set: ObservableSet<T>): ReadonlyArray<T>;\r\nexport declare function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>;\r\nexport declare function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>;\r\nexport declare function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>;\r\nexport declare function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>;\r\nexport declare function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>;\r\nexport declare function entries<T = any>(obj: T): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>;\r\nexport declare function set<V>(obj: ObservableMap<PropertyKey, V>, values: {\r\n    [key: string]: V;\r\n}): any;\r\nexport declare function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V): any;\r\nexport declare function set<T>(obj: ObservableSet<T>, value: T): any;\r\nexport declare function set<T>(obj: IObservableArray<T>, index: number, value: T): any;\r\nexport declare function set<T extends Object>(obj: T, values: {\r\n    [key: string]: any;\r\n}): any;\r\nexport declare function set<T extends Object>(obj: T, key: PropertyKey, value: any): any;\r\nexport declare function remove<K, V>(obj: ObservableMap<K, V>, key: K): any;\r\nexport declare function remove<T>(obj: ObservableSet<T>, key: T): any;\r\nexport declare function remove<T>(obj: IObservableArray<T>, index: number): any;\r\nexport declare function remove<T extends Object>(obj: T, key: string): any;\r\nexport declare function has<K>(obj: ObservableMap<K, any>, key: K): boolean;\r\nexport declare function has<T>(obj: ObservableSet<T>, key: T): boolean;\r\nexport declare function has<T>(obj: IObservableArray<T>, index: number): boolean;\r\nexport declare function has<T extends Object>(obj: T, key: string): boolean;\r\nexport declare function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined;\r\nexport declare function get<T>(obj: IObservableArray<T>, index: number): T | undefined;\r\nexport declare function get<T extends Object>(obj: T, key: string): any;\r\nexport declare function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor): any;\r\nexport declare function apiOwnKeys(obj: Object): any;\r\n"
}