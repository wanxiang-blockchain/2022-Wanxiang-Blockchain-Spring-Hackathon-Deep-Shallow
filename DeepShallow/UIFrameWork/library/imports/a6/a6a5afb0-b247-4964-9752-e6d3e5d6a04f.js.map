{"version":3,"sources":["assets/Script/UIFrame/UIModalScript.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import UIManager from \"./UIManager\";\nimport { ModalOpacity, SysDefine } from \"./config/SysDefine\";\nimport CocosHelper from \"./CocosHelper\";\nimport { UIWindow } from \"./UIForm\";\nimport WindowMgr from \"./WindowMgr\";\n\nconst BAN_FALG = (cc.RenderFlow.FLAG_RENDER | cc.RenderFlow.FLAG_POST_RENDER);\n\n/**\n * @Author: 邓朗 \n * @Describe: \n * @Date: 2019-05-30 23:35:26  \n * @Last Modified time: 2019-05-30 23:35:26 \n */\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UIModalScript extends cc.Component {\n\n    public fid: string;\n    private sprite: cc.Sprite = null;\n    private camera: cc.Camera = null;\n    /**\n     * 初始化\n     */\n    public init() {\n        let size = cc.view.getVisibleSize();\n        this.node.height = size.height;\n        this.node.width = size.width;\n\n        this.node.addComponent(cc.Button);\n        this.node.on('click', this.clickMaskWindow, this);\n        \n        this.sprite = this.node.addComponent(cc.Sprite)\n        this.useNormalSprite(this.sprite);\n\n        this.node.color = new cc.Color(255, 255, 255);\n        this.node.opacity = 0;\n        this.node.active = false;\n\n        let node = new cc.Node(\"BlurCamera\");\n        this.camera = node.addComponent(cc.Camera);\n        cc.find('Canvas').addChild(node);        \n    }\n\n\n    // \n    public async showModal(lucenyType: number, time: number = 0.6, isEasing: boolean = true, dualBlur = false) {\n        if(dualBlur) {\n            this.useDualBlurSprite(this.camera);\n            this.node.color = cc.Color.WHITE;\n        } else {\n            this.useNormalSprite(this.sprite);\n            this.node.color = cc.Color.BLACK;\n        }\n\n        let o = 0;\n        switch (lucenyType) {\n            case ModalOpacity.None:    \n                this.node.active = false;\n            break;        \n            case ModalOpacity.OpacityZero:   \n                o = 0;\n            break;\n            case ModalOpacity.OpacityLow:    \n                o = 63;\n            break;\n            case ModalOpacity.OpacityHalf:   \n                o = 126;\n            break;\n            case ModalOpacity.OpacityHigh:\n                o = 189;\n            break;\n            case ModalOpacity.OpacityFull:\n                o = 255;\n            break;\n        }\n        if(!this.node.active) return ;\n        if(isEasing) {\n            await CocosHelper.runTweenSync(this.node, cc.tween().to(time, {opacity: o}));\n        }else {\n            this.node.opacity = o;\n        }\n    }\n\n    public async clickMaskWindow() {\n        let com = UIManager.getInstance().getForm(this.fid) as UIWindow;\n        if(com && com.modalType.clickMaskClose) {\n            await WindowMgr.close(this.fid);\n        }\n    }\n\n    /** 代码创建一个单色texture */\n    private _texture: cc.Texture2D = null;\n    private getSingleTexture() {\n        if(this._texture) return this._texture;\n        let data: any = new Uint8Array(2 * 2 * 4);\n        for(let i=0; i<2; i++) {\n            for(let j=0; j<2; j++) {\n                data[i*2*4 + j*4+0] = 255;\n                data[i*2*4 + j*4+1] = 255;\n                data[i*2*4 + j*4+2] = 255;\n                data[i*2*4 + j*4+3] = 255;\n            }\n        }\n        let texture = new cc.Texture2D();\n        texture.name = 'single color'\n        texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, 2, 2);\n        texture.handleLoadedTexture();\n        this._texture = texture;\n        texture.addRef();\n\n        return this._texture;\n    }\n\n    private useNormalSprite(sprite: cc.Sprite) {\n        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\n        sprite.type = cc.Sprite.Type.SIMPLE;\n        sprite.spriteFrame = new cc.SpriteFrame(this.getSingleTexture());\n    }\n\n\n    private _renderTexture: cc.RenderTexture = null;\n    private _renderTextures: cc.RenderTexture[] = [];\n    private useDualBlurSprite(camera: cc.Camera) {\n        let dirtyNodes: cc.Node[] = [];\n        let disRenderChildren = () => {\n            // 不渲染tips\n            let tips = UIManager.getInstance().getUIROOT().getChildByName(SysDefine.SYS_TOPTIPS_NODE).children;\n            for(const node of tips) {\n                if(!node._activeInHierarchy || node.opacity == 0) continue;\n                node['_dirtyRenderFlag'] = node._renderFlag;\n                node._renderFlag &= ~(cc.RenderFlow.FLAG_CHILDREN | cc.RenderFlow.FLAG_RENDER);\n                dirtyNodes.push(node);\n            }\n            // 不渲染自己和最上层的window\n            this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;\n            let windows = UIManager.getInstance().getUIROOT().getChildByName(SysDefine.SYS_POPUP_NODE).children;\n            for(let i=windows.length-1; i>=0; i--) {\n                if(windows[i].zIndex > this.node.zIndex) {\n                    let node = windows[i];\n                    if(!node._activeInHierarchy || node.opacity == 0) continue;\n                    node['_dirtyRenderFlag'] = node._renderFlag;\n                    node._renderFlag &= ~(cc.RenderFlow.FLAG_CHILDREN | cc.RenderFlow.FLAG_RENDER);\n                    dirtyNodes.push(node);\n                }\n            }\n        }\n        let rerenderChildren = () => {\n            for(const node of dirtyNodes) {\n                node._renderFlag = node['_dirtyRenderFlag'];\n            }\n        }\n        if(!this._renderTexture) {\n            let renderTexture = this._renderTexture = new cc.RenderTexture();\n            renderTexture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.game._renderContext.STENCIL_INDEX8);\n        }\n        camera.enabled = true;\n        camera.targetTexture = this._renderTexture;\n        disRenderChildren();\n        camera.render();\n        rerenderChildren();\n        this.sprite.spriteFrame.setTexture(camera.targetTexture);\n        this.sprite.markForRender(true)\n        this.renderDualBlur(camera, 3);\n        camera.enabled = false;\n    }\n\n    private renderDualBlur(camera: cc.Camera, iterations: number) {\n        let size = cc.view.getVisibleSize();\n        if(this._renderTextures.length <= 0) {\n            for (let i = 0; i < iterations; i++) {\n                let r = Math.pow(2, i);\n                let renderTexture = new cc.RenderTexture();\n                renderTexture.initWithSize((cc.visibleRect.width / r) | 0, (cc.visibleRect.height / r) | 0);\n                this._renderTextures.push(renderTexture);\n            }\n        }\n        if(!MaterialDown) {\n            MaterialDown = this.genMaterial(EFFECT_DOWN);\n            MaterialDown.setProperty('v_halfpixel', [0.5 / size.width, 0.5 / size.height]);\n            MaterialDown.setProperty('v_offset', [4, 4]);\n        }\n        this.sprite.setMaterial(0, MaterialDown);\n        for (let i = 0; i < iterations; i++) {\n            camera.targetTexture = this._renderTextures[i];\n            camera.render(this.sprite.node);\n            this.sprite.spriteFrame.setTexture(camera.targetTexture);\n            this.sprite.markForRender(true)\n        }\n        if(!MaterialUp) {\n            MaterialUp = this.genMaterial(EFFECT_UP);\n            MaterialUp.setProperty('v_halfpixel', [0.5 / size.width, 0.5 / size.height]);\n            MaterialUp.setProperty('v_offset', [4, 4]);\n        }\n        this.sprite.setMaterial(0, MaterialUp);\n        for (let i = iterations - 1; i > 0; i--) {\n            camera.targetTexture = this._renderTextures[i - 1];\n            camera.render(this.sprite.node);\n            this.sprite.spriteFrame.setTexture(camera.targetTexture);\n            this.sprite.markForRender(true)\n        }\n        this.sprite.setMaterial(0, cc.Material.getBuiltinMaterial('2d-sprite'));\n    }\n\n    public genMaterial(effect: any) {\n        //@ts-ignore\n        let asset = cc.deserialize(effect, {priority: 0, responseType: \"json\"});\n        asset.onLoad && asset.onLoad();\n        asset.__onLoadInvoked__ = true;\n\n        return cc.Material.create(asset, 0);\n    }\n}\nlet MaterialDown: cc.Material = null;\nlet MaterialUp: cc.Material = null;\nconst EFFECT_UP = {\n  \"__type__\": \"cc.EffectAsset\",\n  \"_name\": \"BlurUp\",\n  \"_objFlags\": 0,\n  \"_native\": \"\",\n  \"properties\": null,\n  \"techniques\": [\n    {\n      \"passes\": [\n        {\n          \"blendState\": {\n            \"targets\": [\n              {\n                \"blend\": true\n              }\n            ]\n          },\n          \"rasterizerState\": {\n            \"cullMode\": 0\n          },\n          \"properties\": {\n            \"texture\": {\n              \"value\": \"white\",\n              \"type\": 29\n            },\n            \"alphaThreshold\": {\n              \"value\": [\n                0.5\n              ],\n              \"type\": 13\n            }\n          },\n          \"program\": \"BlurUp|vs|fs\"\n        }\n      ]\n    }\n  ],\n  \"shaders\": [\n    {\n      \"hash\": 3005313742,\n      \"glsl3\": {\n        \"vert\": \"\\nprecision highp float;\\nuniform CCGlobal {\\n  mat4 cc_matView;\\n  mat4 cc_matViewInv;\\n  mat4 cc_matProj;\\n  mat4 cc_matProjInv;\\n  mat4 cc_matViewProj;\\n  mat4 cc_matViewProjInv;\\n  vec4 cc_cameraPos;\\n  vec4 cc_time;\\n  mediump vec4 cc_screenSize;\\n  mediump vec4 cc_screenScale;\\n};\\nuniform CCLocal {\\n  mat4 cc_matWorld;\\n  mat4 cc_matWorldIT;\\n};\\nin vec3 a_position;\\nin vec4 a_color;\\nout vec4 v_color;\\n#if USE_TEXTURE\\nin vec2 a_uv0;\\nout vec2 v_uv0;\\n#endif\\nvoid main () {\\n  vec4 pos = vec4(a_position, 1);\\n  #if CC_USE_MODEL\\n  pos = cc_matViewProj * cc_matWorld * pos;\\n  #else\\n  pos = cc_matViewProj * pos;\\n  #endif\\n  #if USE_TEXTURE\\n  v_uv0 = a_uv0;\\n  #endif\\n  v_color = a_color;\\n  gl_Position = pos;\\n}\",\n        \"frag\": \"\\nprecision highp float;\\n#if USE_ALPHA_TEST\\n  uniform ALPHA_TEST {\\n    float alphaThreshold;\\n  };\\n#endif\\nvoid ALPHA_TEST (in vec4 color) {\\n  #if USE_ALPHA_TEST\\n      if (color.a < alphaThreshold) discard;\\n  #endif\\n}\\nvoid ALPHA_TEST (in float alpha) {\\n  #if USE_ALPHA_TEST\\n      if (alpha < alphaThreshold) discard;\\n  #endif\\n}\\nin vec4 v_color;\\n#if USE_TEXTURE\\nin vec2 v_uv0;\\nuniform sampler2D texture;\\n#endif\\nuniform CustomUniform {\\n  vec2 v_halfpixel;\\n  vec2 v_offset;\\n};\\nvoid main () {\\n  vec4 o = vec4(1, 1, 1, 1);\\n  vec4 sum = texture2D(texture, v_uv0) * 4.0;\\n  sum += texture2D(texture, v_uv0 - v_halfpixel.xy * v_offset);\\n  sum += texture2D(texture, v_uv0 + v_halfpixel.xy * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\\n  sum += texture2D(texture, v_uv0 - vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\\n  o = sum / 8.0;\\n  o *= v_color;\\n  ALPHA_TEST(o);\\n  #if USE_BGRA\\n    gl_FragColor = o.bgra;\\n  #else\\n    gl_FragColor = o.rgba;\\n  #endif\\n}\"\n      },\n      \"glsl1\": {\n        \"vert\": \"\\nprecision highp float;\\nuniform mat4 cc_matViewProj;\\nuniform mat4 cc_matWorld;\\nattribute vec3 a_position;\\nattribute vec4 a_color;\\nvarying vec4 v_color;\\n#if USE_TEXTURE\\nattribute vec2 a_uv0;\\nvarying vec2 v_uv0;\\n#endif\\nvoid main () {\\n  vec4 pos = vec4(a_position, 1);\\n  #if CC_USE_MODEL\\n  pos = cc_matViewProj * cc_matWorld * pos;\\n  #else\\n  pos = cc_matViewProj * pos;\\n  #endif\\n  #if USE_TEXTURE\\n  v_uv0 = a_uv0;\\n  #endif\\n  v_color = a_color;\\n  gl_Position = pos;\\n}\",\n        \"frag\": \"\\nprecision highp float;\\n#if USE_ALPHA_TEST\\n  uniform float alphaThreshold;\\n#endif\\nvoid ALPHA_TEST (in vec4 color) {\\n  #if USE_ALPHA_TEST\\n      if (color.a < alphaThreshold) discard;\\n  #endif\\n}\\nvoid ALPHA_TEST (in float alpha) {\\n  #if USE_ALPHA_TEST\\n      if (alpha < alphaThreshold) discard;\\n  #endif\\n}\\nvarying vec4 v_color;\\n#if USE_TEXTURE\\nvarying vec2 v_uv0;\\nuniform sampler2D texture;\\n#endif\\nuniform vec2 v_halfpixel;\\nuniform vec2 v_offset;\\nvoid main () {\\n  vec4 o = vec4(1, 1, 1, 1);\\n  vec4 sum = texture2D(texture, v_uv0) * 4.0;\\n  sum += texture2D(texture, v_uv0 - v_halfpixel.xy * v_offset);\\n  sum += texture2D(texture, v_uv0 + v_halfpixel.xy * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\\n  sum += texture2D(texture, v_uv0 - vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\\n  o = sum / 8.0;\\n  o *= v_color;\\n  ALPHA_TEST(o);\\n  #if USE_BGRA\\n    gl_FragColor = o.bgra;\\n  #else\\n    gl_FragColor = o.rgba;\\n  #endif\\n}\"\n      },\n      \"builtins\": {\n        \"globals\": {\n          \"blocks\": [\n            {\n              \"name\": \"CCGlobal\",\n              \"defines\": []\n            }\n          ],\n          \"samplers\": []\n        },\n        \"locals\": {\n          \"blocks\": [\n            {\n              \"name\": \"CCLocal\",\n              \"defines\": []\n            }\n          ],\n          \"samplers\": []\n        }\n      },\n      \"defines\": [\n        {\n          \"name\": \"USE_TEXTURE\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"CC_USE_MODEL\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"USE_ALPHA_TEST\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"USE_BGRA\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        }\n      ],\n      \"blocks\": [\n        {\n          \"name\": \"ALPHA_TEST\",\n          \"members\": [\n            {\n              \"name\": \"alphaThreshold\",\n              \"type\": 13,\n              \"count\": 1\n            }\n          ],\n          \"defines\": [\n            \"USE_ALPHA_TEST\"\n          ],\n          \"binding\": 0\n        },\n        {\n          \"name\": \"CustomUniform\",\n          \"members\": [\n            {\n              \"name\": \"v_halfpixel\",\n              \"type\": 14,\n              \"count\": 1\n            },\n            {\n              \"name\": \"v_offset\",\n              \"type\": 14,\n              \"count\": 1\n            }\n          ],\n          \"defines\": [],\n          \"binding\": 1\n        }\n      ],\n      \"samplers\": [\n        {\n          \"name\": \"texture\",\n          \"type\": 29,\n          \"count\": 1,\n          \"defines\": [\n            \"USE_TEXTURE\"\n          ],\n          \"binding\": 30\n        }\n      ],\n      \"record\": null,\n      \"name\": \"BlurUp|vs|fs\"\n    }\n  ]\n};\nconst EFFECT_DOWN = {\n  \"__type__\": \"cc.EffectAsset\",\n  \"_name\": \"BlurDown\",\n  \"_objFlags\": 0,\n  \"_native\": \"\",\n  \"properties\": null,\n  \"techniques\": [\n    {\n      \"passes\": [\n        {\n          \"blendState\": {\n            \"targets\": [\n              {\n                \"blend\": true\n              }\n            ]\n          },\n          \"rasterizerState\": {\n            \"cullMode\": 0\n          },\n          \"properties\": {\n            \"texture\": {\n              \"value\": \"white\",\n              \"type\": 29\n            },\n            \"alphaThreshold\": {\n              \"value\": [\n                0.5\n              ],\n              \"type\": 13\n            }\n          },\n          \"program\": \"BlurDown|vs|fs\"\n        }\n      ]\n    }\n  ],\n  \"shaders\": [\n    {\n      \"hash\": 4206633856,\n      \"glsl3\": {\n        \"vert\": \"\\nprecision highp float;\\nuniform CCGlobal {\\n  mat4 cc_matView;\\n  mat4 cc_matViewInv;\\n  mat4 cc_matProj;\\n  mat4 cc_matProjInv;\\n  mat4 cc_matViewProj;\\n  mat4 cc_matViewProjInv;\\n  vec4 cc_cameraPos;\\n  vec4 cc_time;\\n  mediump vec4 cc_screenSize;\\n  mediump vec4 cc_screenScale;\\n};\\nuniform CCLocal {\\n  mat4 cc_matWorld;\\n  mat4 cc_matWorldIT;\\n};\\nin vec3 a_position;\\nin vec4 a_color;\\nout vec4 v_color;\\n#if USE_TEXTURE\\nin vec2 a_uv0;\\nout vec2 v_uv0;\\n#endif\\nvoid main () {\\n  vec4 pos = vec4(a_position, 1);\\n  #if CC_USE_MODEL\\n  pos = cc_matViewProj * cc_matWorld * pos;\\n  #else\\n  pos = cc_matViewProj * pos;\\n  #endif\\n  #if USE_TEXTURE\\n  v_uv0 = a_uv0;\\n  #endif\\n  v_color = a_color;\\n  gl_Position = pos;\\n}\",\n        \"frag\": \"\\nprecision highp float;\\n#if USE_ALPHA_TEST\\n  uniform ALPHA_TEST {\\n    float alphaThreshold;\\n  };\\n#endif\\nvoid ALPHA_TEST (in vec4 color) {\\n  #if USE_ALPHA_TEST\\n      if (color.a < alphaThreshold) discard;\\n  #endif\\n}\\nvoid ALPHA_TEST (in float alpha) {\\n  #if USE_ALPHA_TEST\\n      if (alpha < alphaThreshold) discard;\\n  #endif\\n}\\nin vec4 v_color;\\n#if USE_TEXTURE\\nin vec2 v_uv0;\\nuniform sampler2D texture;\\n#endif\\nuniform CustomUniform {\\n  vec2 v_halfpixel;\\n  vec2 v_offset;\\n};\\nvoid main () {\\n  vec4 o = vec4(1, 1, 1, 1);\\n  vec4 sum = texture2D(texture, v_uv0 + vec2(-v_halfpixel.x * 2.0, 0.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(0.0, v_halfpixel.y * 2.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x * 2.0, 0.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(0.0, -v_halfpixel.y * 2.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\\n  o = sum / 12.0;\\n  o *= v_color;\\n  ALPHA_TEST(o);\\n  #if USE_BGRA\\n    gl_FragColor = o.bgra;\\n  #else\\n    gl_FragColor = o.rgba;\\n  #endif\\n}\"\n      },\n      \"glsl1\": {\n        \"vert\": \"\\nprecision highp float;\\nuniform mat4 cc_matViewProj;\\nuniform mat4 cc_matWorld;\\nattribute vec3 a_position;\\nattribute vec4 a_color;\\nvarying vec4 v_color;\\n#if USE_TEXTURE\\nattribute vec2 a_uv0;\\nvarying vec2 v_uv0;\\n#endif\\nvoid main () {\\n  vec4 pos = vec4(a_position, 1);\\n  #if CC_USE_MODEL\\n  pos = cc_matViewProj * cc_matWorld * pos;\\n  #else\\n  pos = cc_matViewProj * pos;\\n  #endif\\n  #if USE_TEXTURE\\n  v_uv0 = a_uv0;\\n  #endif\\n  v_color = a_color;\\n  gl_Position = pos;\\n}\",\n        \"frag\": \"\\nprecision highp float;\\n#if USE_ALPHA_TEST\\n  uniform float alphaThreshold;\\n#endif\\nvoid ALPHA_TEST (in vec4 color) {\\n  #if USE_ALPHA_TEST\\n      if (color.a < alphaThreshold) discard;\\n  #endif\\n}\\nvoid ALPHA_TEST (in float alpha) {\\n  #if USE_ALPHA_TEST\\n      if (alpha < alphaThreshold) discard;\\n  #endif\\n}\\nvarying vec4 v_color;\\n#if USE_TEXTURE\\nvarying vec2 v_uv0;\\nuniform sampler2D texture;\\n#endif\\nuniform vec2 v_halfpixel;\\nuniform vec2 v_offset;\\nvoid main () {\\n  vec4 o = vec4(1, 1, 1, 1);\\n  vec4 sum = texture2D(texture, v_uv0 + vec2(-v_halfpixel.x * 2.0, 0.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(0.0, v_halfpixel.y * 2.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x * 2.0, 0.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\\n  sum += texture2D(texture, v_uv0 + vec2(0.0, -v_halfpixel.y * 2.0) * v_offset);\\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\\n  o = sum / 12.0;\\n  o *= v_color;\\n  ALPHA_TEST(o);\\n  #if USE_BGRA\\n    gl_FragColor = o.bgra;\\n  #else\\n    gl_FragColor = o.rgba;\\n  #endif\\n}\"\n      },\n      \"builtins\": {\n        \"globals\": {\n          \"blocks\": [\n            {\n              \"name\": \"CCGlobal\",\n              \"defines\": []\n            }\n          ],\n          \"samplers\": []\n        },\n        \"locals\": {\n          \"blocks\": [\n            {\n              \"name\": \"CCLocal\",\n              \"defines\": []\n            }\n          ],\n          \"samplers\": []\n        }\n      },\n      \"defines\": [\n        {\n          \"name\": \"USE_TEXTURE\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"CC_USE_MODEL\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"USE_ALPHA_TEST\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        },\n        {\n          \"name\": \"USE_BGRA\",\n          \"type\": \"boolean\",\n          \"defines\": []\n        }\n      ],\n      \"blocks\": [\n        {\n          \"name\": \"ALPHA_TEST\",\n          \"members\": [\n            {\n              \"name\": \"alphaThreshold\",\n              \"type\": 13,\n              \"count\": 1\n            }\n          ],\n          \"defines\": [\n            \"USE_ALPHA_TEST\"\n          ],\n          \"binding\": 0\n        },\n        {\n          \"name\": \"CustomUniform\",\n          \"members\": [\n            {\n              \"name\": \"v_halfpixel\",\n              \"type\": 14,\n              \"count\": 1\n            },\n            {\n              \"name\": \"v_offset\",\n              \"type\": 14,\n              \"count\": 1\n            }\n          ],\n          \"defines\": [],\n          \"binding\": 1\n        }\n      ],\n      \"samplers\": [\n        {\n          \"name\": \"texture\",\n          \"type\": 29,\n          \"count\": 1,\n          \"defines\": [\n            \"USE_TEXTURE\"\n          ],\n          \"binding\": 30\n        }\n      ],\n      \"record\": null,\n      \"name\": \"BlurDown|vs|fs\"\n    }\n  ]\n};"]}