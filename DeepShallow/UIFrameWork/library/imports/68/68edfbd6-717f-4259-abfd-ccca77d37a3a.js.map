{"version":3,"sources":["assets/Script/Common/Light/Light.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Bound } from \"../Components/QuadTree\";\nimport { Intersection } from \"./LightStruct\";\n\nconst {ccclass, property} = cc._decorator;\n\nexport enum LightType {\n    Round,      // 圆形\n    Sector,     // 扇形\n}\n\nlet LightBound = new Bound(0, 0, 0, 0);\n@ccclass\nexport default class Light extends cc.Component {\n    /** 画笔 */\n    @property(cc.Graphics)\n    graphics: cc.Graphics = null;\n    @property({type: cc.Enum(LightType)})\n    lightType: LightType = 0;\n\n\n    canvasSize: cc.Size = null;\n    visiableSize: cc.Size = null;\n\n    radius = 200;\n    fade = 1;\n\n    // graphics\n    private _material: cc.Material = null;\n\n    onLoad () {\n        this._material = this.graphics.getMaterial(0);\n    \n        this.canvasSize = cc.view.getCanvasSize();\n        this.visiableSize = cc.view.getCanvasSize();\n        \n        this.node.setContentSize(this.canvasSize);\n\n        this._material.setProperty(\"screen\", cc.v2(this.canvasSize.width, this.canvasSize.height));\n\n\n        let r = this.radius / this.canvasSize.width;\n        this._material.setProperty(\"maxRadius\", r);\n    }\n\n    \n    start () {\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    onDestroy() {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    private onTouchMove(e: cc.Event.EventTouch) {\n        this.node.x += e.getDeltaX();\n        this.node.y += e.getDeltaY();\n    }\n\n    public getBound() {\n        let pos = this.node.getPosition();\n        LightBound.x = pos.x-this.radius/2; LightBound.y = pos.y-this.radius/2; \n        LightBound.width = LightBound.height = this.radius;\n        return LightBound;\n    }\n    \n\n    /** 绘制光 */\n    public draw(intersections: Intersection[]) {\n        let lightPos = this.node.getPosition();\n        this._doDraw(this.graphics, lightPos, intersections);\n        this._material.setProperty(\"lightPos\", cc.v2(lightPos.x/this.visiableSize.width, lightPos.y/this.visiableSize.height));\n    }\n\n    /** 绘制light */\n    private _doDraw(graphics: cc.Graphics, light: cc.Vec2, intersects: Intersection[]) {\n        \n        graphics.clear();\n        graphics.moveTo(intersects[0].x, intersects[0].y);\n        for(let i=1; i<intersects.length; i++) {\n            let intersect = intersects[i];\n            graphics.lineTo(intersect.x, intersect.y);\n        }\n        graphics.moveTo(intersects[0].x, intersects[0].y);\n        \n        graphics.fill();\n\n        // for(let i=0; i<intersects.length; i++) {\n        //     let intersect = intersects[i];\n        //     graphics.moveTo(light.x, light.y);\n        //     graphics.lineTo(intersect.x, intersect.y);\n        //     graphics.stroke();\n        // }\n    }\n        \n    // update (dt) {}\n}"]}