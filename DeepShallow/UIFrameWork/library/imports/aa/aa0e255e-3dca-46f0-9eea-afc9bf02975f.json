{
  "__type__": "cc.TextAsset",
  "_name": "errors.d",
  "_objFlags": 0,
  "_native": "",
  "text": "declare const niceErrors: {\r\n    readonly 0: \"Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'\";\r\n    readonly 1: (annotationType: any, key: PropertyKey) => string;\r\n    readonly 5: \"'keys()' can only be used on observable objects, arrays, sets and maps\";\r\n    readonly 6: \"'values()' can only be used on observable objects, arrays, sets and maps\";\r\n    readonly 7: \"'entries()' can only be used on observable objects, arrays and maps\";\r\n    readonly 8: \"'set()' can only be used on observable objects, arrays and maps\";\r\n    readonly 9: \"'remove()' can only be used on observable objects, arrays and maps\";\r\n    readonly 10: \"'has()' can only be used on observable objects, arrays and maps\";\r\n    readonly 11: \"'get()' can only be used on observable objects, arrays and maps\";\r\n    readonly 12: \"Invalid annotation\";\r\n    readonly 13: \"Dynamic observable objects cannot be frozen\";\r\n    readonly 14: \"Intercept handlers should return nothing or a change object\";\r\n    readonly 15: \"Observable arrays cannot be frozen\";\r\n    readonly 16: \"Modification exception: the internal structure of an observable array was changed.\";\r\n    readonly 17: (index: any, length: any) => string;\r\n    readonly 18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\";\r\n    readonly 19: (other: any) => string;\r\n    readonly 20: (other: any) => string;\r\n    readonly 21: (dataStructure: any) => string;\r\n    readonly 22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\";\r\n    readonly 23: \"It is not possible to get index atoms from arrays\";\r\n    readonly 24: (thing: any) => string;\r\n    readonly 25: (property: any, name: any) => string;\r\n    readonly 26: \"please specify a property\";\r\n    readonly 27: (property: any, name: any) => string;\r\n    readonly 28: (thing: any) => string;\r\n    readonly 29: \"Expecting some object\";\r\n    readonly 30: \"invalid action stack. did you forget to finish an action?\";\r\n    readonly 31: \"missing option for computed: get\";\r\n    readonly 32: (name: any, derivation: any) => string;\r\n    readonly 33: (name: any) => string;\r\n    readonly 34: (name: any) => string;\r\n    readonly 35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\";\r\n    readonly 36: \"isolateGlobalState should be called before MobX is running any reactions\";\r\n    readonly 37: (method: any) => string;\r\n    readonly 38: \"'ownKeys()' can only be used on observable objects\";\r\n    readonly 39: \"'defineProperty()' can only be used on observable objects\";\r\n};\r\ndeclare const errors: typeof niceErrors;\r\nexport declare function die(error: string | keyof typeof errors, ...args: any[]): never;\r\nexport {};\r\n"
}