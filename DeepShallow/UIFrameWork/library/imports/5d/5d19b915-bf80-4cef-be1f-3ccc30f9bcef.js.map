{"version":3,"sources":["assets/Script/Common/Components/DrawBorad.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DrawingBoard from \"../Utils/DrawingBoard\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class DrawBorad extends cc.Component {\n\n    @property(cc.Node)\n    ndBroad: cc.Node = null;\n\n    private _drawingBroad: DrawingBoard = null;\n    private _texture: cc.Texture2D = new cc.Texture2D();\n    private _sprite: cc.Sprite = null;\n\n    private broadYMax = -1;         // 画板上边界最大值\n    private broadXMin = -1;         // 画板左边界最小值\n    private _touching = false;\n\n\n    onLoad() {\n        if(!this.ndBroad) {\n            this.ndBroad = this.node;\n        }\n        this._sprite = this.ndBroad.getComponent(cc.Sprite);\n        if(!this._sprite) {\n            this.ndBroad.addComponent(cc.Sprite);\n        }\n        this._drawingBroad = new DrawingBoard(this.ndBroad.width, this.ndBroad.height);\n        this._drawingBroad.setColor(0, 0, 0, 255);\n        this._drawingBroad.setLineWidth(5);\n\n        this._touching = false;\n\n        let worldPos = this.ndBroad.convertToWorldSpaceAR(cc.v2(0, 0))\n        this.broadYMax = worldPos.y + this.ndBroad.height/2 ;\n        this.broadXMin = worldPos.x - this.ndBroad.width/2;\n\n        this.ndBroad.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.ndBroad.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\n        this.ndBroad.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.ndBroad.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n    }\n\n    start() {\n        \n    }\n\n    public setData(data: any) {\n        this._drawingBroad.setData(data);\n        this.updateTexture(this._drawingBroad.getData(), this.ndBroad.width, this.ndBroad.height);\n    }\n\n    private touchStart(e: cc.Event.EventTouch) {\n        if(this._touching) return ;\n        this._touching = true;\n        let worldPos = e.getLocation();\n        this._drawingBroad.moveTo(worldPos.x-this.broadXMin, this.getRealY(worldPos.y));\n    }\n    private touchMove(e: cc.Event.EventTouch) {\n        if(!this._touching) return ;\n        let worldPos = e.getLocation();\n        this._drawingBroad.lineTo(worldPos.x-this.broadXMin, this.getRealY(worldPos.y));\n        this.updateTexture(this._drawingBroad.getData(), this.ndBroad.width, this.ndBroad.height);\n    }\n    private touchCancel(e: cc.Event.EventTouch) {\n        this._touching = false;\n    }\n    private touchEnd(e: cc.Event.EventTouch) {\n        this._touching = false;\n    }\n\n    onDestroy() {\n        this.ndBroad.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.ndBroad.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\n        this.ndBroad.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\n        this.ndBroad.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n    }\n\n    setColor(r: number, g: number, b: number, a: number) {\n        this._drawingBroad.setColor(r, g, b, a);\n    }\n    setLineWidth(width: number) {\n        this._drawingBroad.setLineWidth(width);\n    }\n    setPen() {\n        this.setColor(0, 0, 0, 255);\n        this.setLineWidth(5);\n    }\n    setReaser() {\n        this.setColor(0, 0, 0, 0);\n        this.setLineWidth(20);\n    }\n\n    getTexture() {\n        return this._texture;\n    }\n\n    private updateTexture(data: any, width: number, height: number) {\n        this._texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, width, height);\n        this._sprite.spriteFrame.setTexture(this._texture)\n        this._sprite.markForRender(true)\n    }\n\n    private getRealY(y: number) {\n        if(this._sprite.spriteFrame['_flipY']) {\n            return this.broadYMax - (cc.visibleRect.height-y);\n        }\n        return this.broadYMax - y;\n    }\n\n\n}"]}