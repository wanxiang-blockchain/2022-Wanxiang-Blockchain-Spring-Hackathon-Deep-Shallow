{"version":3,"sources":["assets/Script/Common/Utils/MatchUtils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * 数学计算工具类\n */\nexport class MathUtils {\n\n    public static clamp(a: number, b: number, x: number) {        \n        if(a > b) {\n            let t = a;\n            a = b;\n            b = t;\n        }\n        if(x < a) return a;\n        if(x > b) return b;\n        return x;\n    }\n    /**\n     * 弧度制转换为角度值\n     * @param radian 弧度制\n     * @returns {number}\n     */\n    public static getAngle(radian: number): number {\n        return 180 * radian / Math.PI;\n    }\n\n    /**\n     * 角度值转换为弧度制\n     * @param angle\n     */\n    public static getRadian(angle: number): number {\n        return angle / 180 * Math.PI;\n    }\n\n    /**\n     * 获取两点间弧度\n     * @param p1X\n     * @param p1Y\n     * @param p2X\n     * @param p2Y\n     * @returns {number}\n     */\n    public static getRadian2(p1X: number, p1Y: number, p2X: number, p2Y: number): number {\n        var xdis: number = p2X - p1X;\n        var ydis: number = p2Y - p1Y;\n        return Math.atan2(ydis, xdis);\n    }\n\n    /**\n     * 获取两点间距离\n     * @param p1X\n     * @param p1Y\n     * @param p2X\n     * @param p2Y\n     * @returns {number}\n     */\n    public static getDistance(p1X: number, p1Y: number, p2X: number, p2Y: number): number {\n        var disX: number = p2X - p1X;\n        var disY: number = p2Y - p1Y;\n        var disQ: number = disX * disX + disY * disY;\n        return Math.sqrt(disQ);\n    }\n\n    public static toFixedStr(value: number, fixCount: number): string {\n        return value.toFixed(fixCount).replace(/\\.?0*$/, '');\n    }\n\n    public static toPercentStr(value: number, fixCount: number): string {\n        return this.toFixedStr(value * 100, fixCount) + \"%\";\n    }\n\n    public static toFixedWan(value: number): string {\n        const wanFix = 100000;\n        let wanFloat = wanFix / 10;\n        var v = Math.floor(value / wanFloat) * wanFloat;\n        return value > wanFix ? `${MathUtils.toFixedStr(v / wanFix * 10, 1)}万` : value.toString();\n    }\n\n    //value = ceil(e*(a*(level^d) + b*(level) + c))\n    public static getFinalValueBasedOnParams(level: number, paramList: Array<number>, needCeil?: boolean): number {\n        if (paramList.length < 5) {\n            return 0;\n        }\n        let ret = paramList[4] * (paramList[0] * Math.pow(level, paramList[3]) + paramList[1] * level + paramList[2]);\n        if (needCeil) {\n            ret = Math.ceil(ret);\n        }\n        return ret;\n    }\n\n    /**\n    * 获取一个区间的随机数\n    * @param $from 最小值\n    * @param $end 最大值\n    * @returns {number}\n    */\n    public static limit($from: number, $end: number): number {\n        $from = Math.min($from, $end);\n        $end = Math.max($from, $end);\n        var range: number = $end - $from;\n        return $from + Math.random() * range;\n    }\n\n    /**\n     * 获取一个区间的随机数(帧数)\n     * @param $from 最小值\n     * @param $end 最大值\n     * @returns {number}\n     */\n    public static limitInteger($from: number, $end: number): number {\n        return Math.round(MathUtils.limit($from, $end));\n    }\n\n    /**\n     * 在一个数组中随机获取一个元素\n     * @param arr 数组\n     * @returns {any} 随机出来的结果\n     */\n    public static randomArray<T>(arr: Array<T>): T {\n        var index: number = Math.floor(Math.random() * arr.length);\n        return arr[index];\n    }\n}"]}