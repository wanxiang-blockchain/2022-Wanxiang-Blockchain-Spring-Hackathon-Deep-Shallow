{"version":3,"sources":["assets/Script/Common/Utils/PriorityStack.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { PriorityElement } from \"./PriorityQueue\";\n\n/** 带优先级的栈 */\nexport default class PriorityStack<T> {\n    private stack: Array<PriorityElement<T>> = new Array<PriorityElement<T>>();\n    private _size = 0;\n    public get size() {\n        return this._size;\n    }\n\n    public clear() {\n        this.stack.length = 0;\n        this._size = 0;\n        return true;\n    }\n\n    public getTopEPriority() {\n        if(this.stack.length <= 0) return -1;\n        return this.stack[this.stack.length-1].priority;\n    }\n\n    public getTopElement() {\n        if(this.stack.length <= 0) return null;\n        return this.stack[this.stack.length-1].data;\n    }\n\n    public getElements() {\n        let elements: T[] = [];\n        for(const e of this.stack) {\n            elements.push(e.data);\n        }\n        return elements;\n    }\n\n    public push(e: T, priority: number = 0) {\n        this.stack.push(new PriorityElement(e, priority));\n        this._size ++;\n        this._adjust();\n    }\n\n    public pop() {\n        if(this.stack.length <= 0) return null;\n        this._size --;\n        return this.stack.pop().data;\n    }\n\n    private _adjust() {\n        for(let i=this.stack.length-1; i>0; i--) {\n            if(this.stack[i] < this.stack[i-1]) {\n                this._swap(i, i-1);\n            }\n        }\n    }\n\n    private _swap(a: number, b: number) {\n        let tmp = this.stack[a];\n        this.stack[a] = this.stack[b];\n        this.stack[b] = tmp;\n    }\n\n\n    /** 是否有这个元素 */\n    public hasElement(t: T) {\n        for(const e of this.stack) {\n            if(e.data === t) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public remove(t: T) {\n        for(let i=this.stack.length-1; i>=0; i--) {\n            if(this.stack[i].data === t) {\n                this.stack.splice(i, 1);\n                this._size --;\n                return true;\n            }\n        }\n        return false;\n    }\n}"]}