{"version":3,"sources":["assets/Script/Common/Utils/PriorityQueue.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * @author denglang\n * 优先队列\n */\nexport class PriorityElement<T> {\n    public data: T;\n    public priority: number;\n    \n    constructor(data: T, priority: number) {\n        this.data = data;\n        this.priority = priority;\n    }\n}\n\nexport default class PriorityQueue<T> {\n    private queue: Array<PriorityElement<T>> = new Array<PriorityElement<T>>(32);\n    private _size: number = 0;\n\n    public get size() {\n        return this._size;\n    }\n\n    constructor() {\n    }\n\n    /** 是否有这个元素 */\n    public hasElement(t: T) {\n        for(const e of this.queue) {\n            if(e.data === t) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** 入队 */\n    public enqueue(e: T, priority: number = 0) {\n        if(this._size > this.queue.length) {\n            this._expand();\n        }\n        this.queue[this._size++] = new PriorityElement(e, priority);\n        this.upAdjust();\n    }\n\n    /** 出队 */\n    public dequeue() {\n        if(this._size <= 0) return null;\n        const head = this.queue[0];\n        this.queue[0] = this.queue[--this._size];\n        this.downAdjust();\n        return head.data;\n    }\n\n    public clear() {\n        this.queue = [];\n        this._size = 0;\n    }\n    /** 上调, 入队时判断入队元素优先级 */\n    private upAdjust() {\n        let childIndex = this._size - 1;\n        let parentIndex = Math.floor(childIndex/2);\n        let tmp = this.queue[childIndex]\n\n        while(childIndex > 0 && tmp.priority > this.queue[parentIndex].priority) {\n            this.queue[childIndex] = this.queue[parentIndex];\n            childIndex = parentIndex;\n            parentIndex = Math.floor(parentIndex/2);\n        }\n\n        this.queue[childIndex] = tmp;\n    }\n    /** 出队 */\n    private downAdjust() {\n        let parentIndex = 0;\n        let tmp = this.queue[parentIndex];\n        let childIndex = 1;\n        while(childIndex < this._size) {\n            if(childIndex + 1 < this._size && this.queue[childIndex+1].priority > this.queue[childIndex].priority) {\n                childIndex ++;\n            }\n            if(tmp.priority >= this.queue[childIndex].priority) {\n                break;\n            }\n\n            this.queue[parentIndex] = this.queue[childIndex];\n            parentIndex = childIndex;\n            childIndex = 2 * childIndex + 1;\n        }\n        this.queue[parentIndex] = tmp;\n    }\n    /** 扩列 */\n    private _expand() {\n        let newSize = Math.round(this.queue.length * 1.2) + 1;\n        const oldQueue = this.queue;\n        this.queue = new Array(newSize);\n        for(let i=0; i<oldQueue.length; i++) {\n            this.queue[i] = oldQueue[i];\n        }\n    }\n\n    public toString() {\n        let s = '';\n        for(let i=0; i<this._size; i++) {\n            let data = this.queue[i].data;\n            if(data.toString) {\n                s += data.toString();\n            }else {\n                s += typeof data === \"object\" ? JSON.stringify(data) : data;\n            }\n        }\n        return s;\n    }\n}"]}