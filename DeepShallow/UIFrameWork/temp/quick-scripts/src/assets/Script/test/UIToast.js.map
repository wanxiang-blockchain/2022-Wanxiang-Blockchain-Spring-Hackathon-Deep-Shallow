{"version":3,"sources":["assets/Script/test/UIToast.ts"],"names":[],"mappings":";;;;;;AAEA,sCAAsC;AAEtC,6CAA6C;AAE7C,WAAW;AACX,sDAAsD;AACtD,wCAAwC;AACxC,0CAA0C;AAC1C,gBAAgB;AAChB,2FAA2F;AAC3F,qDAAqD;AACrD,kGAAkG;AAClG,kCAAkC;AAClC,qCAAqC;AACrC,8EAA8E;AAC9E,wCAAwC;AACxC,qDAAqD;AACrD,4BAA4B;AAC5B,+CAA+C;AAC/C,uBAAuB;AACvB,YAAY;AACZ,2CAA2C;AAC3C,QAAQ;AAGR,0BAA0B;AAC1B,2BAA2B;AAC3B,mCAAmC;AAEnC,oGAAoG;AACpG,mCAAmC;AACnC,4CAA4C;AAC5C,sBAAsB;AACtB,QAAQ;AAGR,GAAG","file":"","sourceRoot":"/","sourcesContent":["import CocosHelper from \"../UIFrame/CocosHelper\";\nimport { SysDefine } from \"../UIFrame/config/SysDefine\";\n// import Scene from \"../Scene/Scene\";\n\n// const {ccclass, property} = cc._decorator;\n\n// @ccclass\n// export default class UIToast extends cc.Component {\n//     static async popUp(str: string) {\n//         Scene.inst.setInputBlock(true);\n//         try {\n//             let prefab = await CocosHelper.loadResSync<cc.Prefab>(\"UIToast\", cc.Prefab);\n//             let node = cc.instantiate(prefab);    \n//             let parent = cc.find(SysDefine.SYS_UIROOT_NAME + \"/\" + SysDefine.SYS_TOPTIPS_NODE);\n//             if(!parent) return;\n//             parent.addChild(node);\n//             let lab = node.getChildByName(\"label\")?.getComponent(cc.Label);\n//             if(lab) lab.string = str;\n//             node.getComponent(UIToast).showAnim();\n//         } catch (error) {\n//             Scene.inst.setInputBlock(false);\n//             return ;\n//         }\n//         Scene.inst.setInputBlock(false);\n//     }\n\n\n//     public showAnim() {\n//         this.node.y = 0;\n//         this.node.opacity = 255;\n\n//         cc.tween(this.node).by(2, {position: cc.v3(0, 80, 0)}).to(0.3, {opacity: 0}).call(() => {\n//             this.node.destroy();\n//             this.node.removeFromParent();\n//         }).start();\n//     }\n\n\n//}"]}