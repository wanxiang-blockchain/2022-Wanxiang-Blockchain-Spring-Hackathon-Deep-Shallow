{"version":3,"sources":["assets/Script/UIFrame/CocosHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export class LoadProgress {\n    public url: string;\n    public completedCount: number;\n    public totalCount: number;\n    public item: any;\n    public cb?: Function;\n}\n\n/** 一些cocos api 的封装, promise函数统一加上sync后缀 */\nexport default class CocosHelper {\n\n    public static async callInNextTick() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(true);\n            }, 0);\n        })\n    }\n\n    /** 加载进度 */\n    public static loadProgress = new LoadProgress();\n\n    /** 等待时间, 秒为单位 */\n    public static sleepSync = function(dur: number): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            cc.Canvas.instance.scheduleOnce(() => {\n                resolve(true);\n            }, dur);\n        });\n    }\n\n    /**\n     * \n     * @param target \n     * @param repeat -1，表示永久执行\n     * @param tweens \n     */\n    public static async runRepeatTweenSync(target: any, repeat: number, ...tweens: cc.Tween[]) {\n        return new Promise((resolve, reject) => {\n            let selfTween = cc.tween(target);\n            for(const tmpTween of tweens) {\n                selfTween = selfTween.then(tmpTween);\n            }\n            if(repeat < 0) {\n                cc.tween(target).repeatForever(selfTween).start();\n            }else {\n                cc.tween(target).repeat(repeat, selfTween).call(() => {\n                    resolve(true);\n                }).start();\n            }\n        });   \n    }\n    /** 同步的tween */\n    public static async runTweenSync(target: any, ...tweens: cc.Tween[]): Promise<void> {\n        return new Promise((resolve, reject) => {\n            let selfTween = cc.tween(target);\n            for(const tmpTween of tweens) {\n                selfTween = selfTween.then(tmpTween);\n            }\n            selfTween.call(() => {\n                resolve();\n            }).start();\n        });\n    }\n    /** 停止tween */\n    public stopTween(target: any) {\n        cc.Tween.stopAllByTarget(target);\n    }\n    public stopTweenByTag(tag: number) {\n        cc.Tween.stopAllByTag(tag);\n    }\n    /** 同步的动作, 在2.4.x action已经被废弃了, 不建议使用 */\n    public static async runActionSync(node: cc.Node, ...actions: cc.FiniteTimeAction[]) {\n        if(!actions || actions.length <= 0) return ;\n        return new Promise((resolve, reject) => {\n            actions.push(cc.callFunc(() => {\n                resolve(true);\n            }));\n            node.runAction(cc.sequence(actions));\n        });\n    }\n\n    /** 同步的动画 */\n    public static async runAnimSync(node: cc.Node, animName?: string | number) {\n        let anim = node.getComponent(cc.Animation);\n        if(!anim) return ;\n        let clip: cc.AnimationClip = null;\n        if(!animName) clip = anim.defaultClip;\n        else {\n            let clips = anim.getClips();\n            if(typeof(animName) === \"number\") {\n                clip = clips[animName];\n            }else if(typeof(animName) === \"string\") {\n                for(let i=0; i<clips.length; i++) {\n                    if(clips[i].name === animName) {\n                        clip = clips[i];\n                        break;\n                    }\n                }\n            }   \n        }\n        if(!clip) return ;\n        await CocosHelper.sleepSync(clip.duration);\n    }\n\n    /** 加载资源异常时抛出错误 */\n    public static loadResThrowErrorSync<T>(url: string, type: typeof cc.Asset, onProgress?: (completedCount: number, totalCount: number, item: any) => void): Promise<T> {    \n        return null;\n    }\n\n    private static _loadingMap: {[key: string]: Function[]} = {};\n    public static loadRes<T>(url: string, type: typeof cc.Asset, callback: Function ) {\n        if(this._loadingMap[url]) {\n            this._loadingMap[url].push(callback);\n            return ;\n        }\n        this._loadingMap[url] = [callback];\n        this.loadResSync<T>(url, type).then((data: any) => {\n            let arr = this._loadingMap[url];\n            for(const func of arr) {\n                func(data);\n            }\n            this._loadingMap[url] = null;\n            delete this._loadingMap[url];\n        });\n    }\n    /** 加载资源 */\n    public static loadResSync<T>(url: string, type: typeof cc.Asset, onProgress?: (completedCount: number, totalCount: number, item: any) => void): Promise<T>{\n        return new Promise((resolve, reject) => {\n            if(!onProgress) onProgress = this._onProgress;\n            cc.resources.load(url, type, onProgress, (err, asset: any) => {\n                if (err) {\n                    cc.error(`${url} [资源加载] 错误 ${err}`);\n                    resolve(null);\n                }else {\n                    resolve(asset as T);\n                }\n            });\n        });\n    }\n    /** \n     * 加载进度\n     * cb方法 其实目的是可以将loader方法的progress\n     */\n    private static _onProgress(completedCount: number, totalCount: number, item: any) {\n        CocosHelper.loadProgress.completedCount = completedCount;\n        CocosHelper.loadProgress.totalCount = totalCount;\n        CocosHelper.loadProgress.item = item;\n        CocosHelper.loadProgress.cb && CocosHelper.loadProgress.cb(completedCount, totalCount, item);\n    }\n    /**\n     * 寻找子节点\n     */\n    public static findChildInNode(nodeName: string, rootNode: cc.Node): cc.Node {\n        if(rootNode.name == nodeName) {\n            return rootNode;\n        }\n        for(let i=0; i<rootNode.childrenCount; i++) {\n            let node = this.findChildInNode(nodeName, rootNode.children[i]);\n            if(node) {\n                return node;\n            }\n        }\n        return null;\n    }\n\n    /** 获得Component的类名 */\n    public static getComponentName(com: Function) {\n        let arr = com.name.match(/<.*>$/);\n        if(arr && arr.length > 0) {\n            return arr[0].slice(1, -1);\n        }\n        return com.name;\n    }\n    /** 加载bundle */\n    public static loadBundleSync(url: string, options: any): Promise<cc.AssetManager.Bundle> {\n        return new Promise((resolve, reject) => {\n            cc.assetManager.loadBundle(url, options, (err: Error, bundle: cc.AssetManager.Bundle) => {\n                if(!err) {\n                    cc.error(`加载bundle失败, url: ${url}, err:${err}`);\n                    resolve(null);\n                }else {\n                    resolve(bundle);\n                }\n            });\n        });\n    }\n    \n    /** 路径是相对分包文件夹路径的相对路径 */\n    public static loadAssetFromBundleSync(bundleName: string, url: string | string[]) {\n        let bundle = cc.assetManager.getBundle(bundleName);\n        if(!bundle) {\n            cc.error(`加载bundle中的资源失败, 未找到bundle, bundleUrl:${bundleName}`);\n            return null;\n        }\n        return new Promise((resolve, reject) => {\n            bundle.load(url, (err, asset: cc.Asset | cc.Asset[]) => {\n                if(err) {\n                    cc.error(`加载bundle中的资源失败, 未找到asset, url:${url}, err:${err}`);\n                    resolve(null);\n                }else {\n                    resolve(asset);\n                }\n            });\n        });\n    }\n\n    /** 通过路径加载资源, 如果这个资源在bundle内, 会先加载bundle, 在解开bundle获得对应的资源 */\n    public static loadAssetSync(url: string | string[]) {\n        return new Promise((resolve, reject) => {\n            cc.resources.load(url, (err, assets: cc.Asset | cc.Asset[]) => {\n                if(!err) {\n                    cc.error(`加载asset失败, url:${url}, err: ${err}`);\n                    resolve(null);\n                }else {\n                    this.addRef(assets);\n                    resolve(assets);\n                }\n            });\n        });\n    }\n    /** 释放资源 */\n    public static releaseAsset(assets: cc.Asset | cc.Asset[]) {\n        this.decRes(assets);\n    }\n    /** 增加引用计数 */\n    private static addRef(assets: cc.Asset | cc.Asset[]) {\n        if(assets instanceof Array) {\n            for(const a of assets) {\n                a.addRef();\n            }\n        }else {\n            assets.addRef();\n        }\n    }\n    /** 减少引用计数, 当引用计数减少到0时,会自动销毁 */\n    private static decRes(assets: cc.Asset | cc.Asset[]) {\n        if(assets instanceof Array) {\n            for(const a of assets) {\n                a.decRef();\n            }\n        }else {\n            assets.decRef();\n        }\n    }\n\n    /** 截图 */\n    public static captureScreen(camera: cc.Camera, prop?: cc.Node | cc.Rect) {\n        let newTexture = new cc.RenderTexture();\n        let oldTexture = camera.targetTexture;\n        let rect: cc.Rect = cc.rect(0, 0, cc.visibleRect.width, cc.visibleRect.height);\n        if(prop) {\n            if(prop instanceof cc.Node) {\n                rect = prop.getBoundingBoxToWorld();\n            }else {\n                rect = prop;\n            }\n        }\n        newTexture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.game._renderContext.STENCIL_INDEX8);\n        camera.targetTexture = newTexture;\n        camera.render();\n        camera.targetTexture = oldTexture;\n        \n        let buffer = new ArrayBuffer(rect.width * rect.height * 4);\n        let data = new Uint8Array(buffer);\n        newTexture.readPixels(data, rect.x, rect.y, rect.width, rect.height);\n        return data;\n    }\n}\n\n"]}