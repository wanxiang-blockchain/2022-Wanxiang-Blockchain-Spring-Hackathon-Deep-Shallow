{"version":3,"sources":["assets/Script/UIScript/UICapture.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,oEAA+D;AAC/D,4DAAuD;AACvD,4DAAuD;AACvD,8CAAyC;AACzC,4CAA6C;AAEvC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAuC,6BAAQ;IAA/C;QAAA,qEAkDC;QA/CG,YAAM,GAAc,IAAI,CAAC;QAGzB,mBAAa,GAAkB,IAAI,CAAC;QAEpC,eAAS,GAAc,IAAI,CAAC;QAE5B,eAAS,GAAc,IAAI,CAAC;;QAuC5B,iBAAiB;IACrB,CAAC;IApCG,eAAe;IAEf,yBAAK,GAAL;QAAA,iBAeC;QAdG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAC,CAAC;YAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YACjC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACpB,iBAAO,CAAC,SAAS,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAEpD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,kCAAc,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QAC/C,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAA;QAChC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrH,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,8BAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IACD,iCAAa,GAAb;QACI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IA5CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACK;IAGzB;QADC,QAAQ,CAAC,uBAAa,CAAC;oDACY;IAEpC;QADC,QAAQ,CAAC,mBAAS,CAAC;gDACQ;IAE5B;QADC,QAAQ,CAAC,mBAAS,CAAC;gDACQ;IAVX,SAAS;QAD7B,OAAO;OACa,SAAS,CAkD7B;IAAD,gBAAC;CAlDD,AAkDC,CAlDsC,iBAAQ,GAkD9C;kBAlDoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import UICapture_Auto from \"../AutoScripts/UICapture_Auto\";\nimport CameraCapture from \"../Common/Components/CameraCapture\";\nimport DrawBorad from \"../Common/Components/DrawBorad\";\nimport TouchPlus from \"../Common/Components/TouchPlus\";\nimport FormMgr from \"../UIFrame/FormMgr\";\nimport { UIScreen } from \"../UIFrame/UIForm\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UICapture extends UIScreen {\n\n    @property(cc.Sprite)\n    sprite: cc.Sprite = null;\n\n    @property(CameraCapture)\n    camereCapture: CameraCapture = null;\n    @property(DrawBorad)\n    drawBorad: DrawBorad = null;\n    @property(TouchPlus)\n    touchPlus: TouchPlus = null;\n\n    view: UICapture_Auto;\n\n    // onLoad () {}\n\n    start () {        \n        this.touchPlus.addEvent(null, (e) => {\n            let delta = e.getDelta();\n            this.touchPlus.node.x += delta.x;\n            this.touchPlus.node.y += delta.y;\n        });\n\n        this.view.Back.addClick(() => {\n            FormMgr.backScene();\n        }, this);\n        this.view.Capture.addClick(this.onClickCapture, this);\n        this.view.Pen.addClick(this.onClickPen, this);\n        this.view.Reaser.addClick(this.onClickReaser, this);\n\n        this.onClickCapture();\n    }\n\n    onClickCapture() {\n        let data = this.camereCapture.captureTexture();\n        let texture = new cc.Texture2D()\n        texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, this.drawBorad.node.width, this.drawBorad.node.height);        \n        this.sprite.spriteFrame = new cc.SpriteFrame(texture);        \n        this.sprite.spriteFrame.setFlipY(true);\n        this.drawBorad.setData(data);\n    }\n\n    onClickPen() {\n        this.drawBorad.setPen();\n    }\n    onClickReaser() {\n        this.drawBorad.setReaser();\n    }\n\n    // update (dt) {}\n}\n"]}