{"version":3,"sources":["assets/Script/UIScript/UILoading.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,oDAA+C;AAC/C,sDAAiD;AACjD,4CAA2C;AAErC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAuC,6BAAM;IAA7C;;IAkCA,CAAC;IA9BG,eAAe;IAEf,yBAAK,GAAL;IAEA,CAAC;IAEK,8BAAU,GAAhB;;;;;;wBACQ,GAAG,GAAG,oBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;wBACvE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;wBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;wBAExB,qBAAM,OAAO,CAAC,GAAG,CAAC;gCACd,qBAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gCACvF,qBAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC,EAAE,GAAG,EAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;6BAC1F,CAAC,EAAA;;wBAHF,SAGE,CAAC;;;;;KACN;IAEK,8BAAU,GAAhB;;;;;;wBACQ,GAAG,GAAG,oBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;wBACvE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;wBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;wBAExB,qBAAM,qBAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAA;;wBAAhC,SAAgC,CAAC;wBACjC,qBAAM,OAAO,CAAC,GAAG,CAAC;gCACd,qBAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gCACvF,qBAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC,EAAE,GAAG,EAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;6BAC1F,CAAC,EAAA;;wBAHF,SAGE,CAAC;;;;;KACN;IA/BgB,SAAS;QAD7B,OAAO;OACa,SAAS,CAkC7B;IAAD,gBAAC;CAlCD,AAkCC,CAlCsC,eAAM,GAkC5C;kBAlCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import UILoading_Auto from \"../AutoScripts/UILoading_Auto\";\nimport AdapterMgr from \"../UIFrame/AdapterMgr\";\nimport CocosHelper from \"../UIFrame/CocosHelper\";\nimport { UITips } from \"../UIFrame/UIForm\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UILoading extends UITips {\n    \n    view: UILoading_Auto;\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    async showEffect() {\n        let len = AdapterMgr.inst.visibleSize.width/2 + this.view.Left.width/2;\n        this.view.Left.x = -len;\n        this.view.Right.x = len;\n\n        await Promise.all([\n            CocosHelper.runTweenSync(this.view.Left, cc.tween().to(0.3, {x: -480}, cc.easeIn(3.0))),\n            CocosHelper.runTweenSync(this.view.Right, cc.tween().to(0.3, {x: 480}, cc.easeIn(3.0)))\n        ]);\n    }\n\n    async hideEffect() {\n        let len = AdapterMgr.inst.visibleSize.width/2 + this.view.Left.width/2;\n        this.view.Left.x = -480;\n        this.view.Right.x = 480;\n\n        await CocosHelper.sleepSync(0.5);\n        await Promise.all([\n            CocosHelper.runTweenSync(this.view.Left, cc.tween().to(0.3, {x: -len}, cc.easeIn(3.0))),\n            CocosHelper.runTweenSync(this.view.Right, cc.tween().to(0.3, {x: len}, cc.easeIn(3.0)))\n        ]);\n    }\n\n    // update (dt) {}\n}\n"]}