{"version":3,"sources":["assets/Script/UIScript/UIDungeon.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,mDAA4D;AAC5D,8CAAyC;AACzC,4CAA6C;AAEvC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAuC,6BAAQ;IAA/C;QAAA,qEAwCC;QArCwB,YAAM,GAAc,IAAI,CAAC;QAGtC,aAAO,GAAY,IAAI,CAAC;;QAiChC,iBAAiB;IACrB,CAAC;IAhCG,yBAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACpB,iBAAO,CAAC,SAAS,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;aACxC;SACJ;IACL,CAAC;IAEO,4BAAQ,GAAhB,UAAiB,IAAc;QAC3B,QAAO,IAAI,EAAE;YACT,KAAK,kBAAQ,CAAC,IAAI;gBACd,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1B,KAAK,kBAAQ,CAAC,KAAK;gBACf,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1B,KAAK,kBAAQ,CAAC,QAAQ;gBAClB,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;YACzB,KAAK,kBAAQ,CAAC,SAAS;gBACnB,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;SAC3B;IACL,CAAC;IAjCoB;QAApB,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CAA0B;IAH7B,SAAS;QAD7B,OAAO;OACa,SAAS,CAwC7B;IAAD,gBAAC;CAxCD,AAwCC,CAxCsC,iBAAQ,GAwC9C;kBAxCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import UIDungeon_Auto from \"../AutoScripts/UIDungeon_Auto\";\nimport { Dungeon, GridType } from \"../Common/Utils/Dungeon\";\nimport FormMgr from \"../UIFrame/FormMgr\";\nimport { UIScreen } from \"../UIFrame/UIForm\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UIDungeon extends UIScreen {\n\n\n    @property(cc.Prefab) pfGrid: cc.Prefab = null;\n\n    view: UIDungeon_Auto;\n    private dungeon: Dungeon = null;\n\n    start() {\n        this.view.Back.addClick(() => {\n            FormMgr.backScene();\n        }, this);\n        this.dungeon = new Dungeon(63, 63);\n        let map = this.dungeon.generate();\n        let size = this.pfGrid.data.width;\n        for(let j=0; j<this.dungeon.height; j++) {\n            for(let x=0; x<this.dungeon.width; x++) {\n                let node = cc.instantiate(this.pfGrid);            \n                node.color = this.getColor(map[j * this.dungeon.width + x]);\n                this.view.Items.addChild(node);\n                node.setPosition(x * size, j * size);\n            }\n        }        \n    }\n\n    private getColor(type: GridType) {\n        switch(type) {\n            case GridType.Wall:\n                return cc.Color.BLACK;\n            case GridType.Floor:\n                return cc.Color.WHITE;\n            case GridType.OpenDoor:\n                return cc.Color.BLUE;\n            case GridType.CloseDoor:\n                return cc.Color.RED;\n        }        \n    }\n\n\n    // update (dt) {}\n}\n"]}