
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Script/AutoScripts/UIAbout_Auto');
require('./assets/Script/AutoScripts/UICapture_Auto');
require('./assets/Script/AutoScripts/UIDungeon_Auto');
require('./assets/Script/AutoScripts/UIECSView_Auto');
require('./assets/Script/AutoScripts/UIFunction_Auto');
require('./assets/Script/AutoScripts/UIGame_Auto');
require('./assets/Script/AutoScripts/UIHome_Auto');
require('./assets/Script/AutoScripts/UILevel_Auto');
require('./assets/Script/AutoScripts/UILight_Auto');
require('./assets/Script/AutoScripts/UILoading_Auto');
require('./assets/Script/AutoScripts/UILogin_Auto');
require('./assets/Script/AutoScripts/UIMap_Auto');
require('./assets/Script/AutoScripts/UIMobx_Auto');
require('./assets/Script/AutoScripts/UINavigator_Auto');
require('./assets/Script/AutoScripts/UIPop_Auto');
require('./assets/Script/AutoScripts/UISetting_Auto');
require('./assets/Script/AutoScripts/UISkills_Auto');
require('./assets/Script/AutoScripts/UISplitTexture_Auto');
require('./assets/Script/AutoScripts/UITips_Auto');
require('./assets/Script/Common/Assemblers/BaseAssembler');
require('./assets/Script/Common/Assemblers/BatchAssembler');
require('./assets/Script/Common/Assemblers/MeshAssembler');
require('./assets/Script/Common/Assemblers/TextureAssembler');
require('./assets/Script/Common/BroadCasts/BroadcastCenter');
require('./assets/Script/Common/Components/BatchComponent');
require('./assets/Script/Common/Components/ButtonPlus');
require('./assets/Script/Common/Components/CacheUtils');
require('./assets/Script/Common/Components/CameraCapture');
require('./assets/Script/Common/Components/DrawBorad');
require('./assets/Script/Common/Components/GridScrollList');
require('./assets/Script/Common/Components/MaskPlus');
require('./assets/Script/Common/Components/MeshTexture');
require('./assets/Script/Common/Components/PropController');
require('./assets/Script/Common/Components/PropSelector');
require('./assets/Script/Common/Components/QuadTree');
require('./assets/Script/Common/Components/ScrollViewHelper');
require('./assets/Script/Common/Components/Shake');
require('./assets/Script/Common/Components/SpinePlus');
require('./assets/Script/Common/Components/TexturePlus');
require('./assets/Script/Common/Components/TouchPlus');
require('./assets/Script/Common/GameConfig');
require('./assets/Script/Common/Light/Light');
require('./assets/Script/Common/Light/LightStruct');
require('./assets/Script/Common/Light/LightUtils');
require('./assets/Script/Common/Light/Obstacle');
require('./assets/Script/Common/Mobx/mobx');
require('./assets/Script/Common/StateMachine/StateMachine');
require('./assets/Script/Common/Utils/BigNumUtils');
require('./assets/Script/Common/Utils/BroadCast');
require('./assets/Script/Common/Utils/CommonUtils');
require('./assets/Script/Common/Utils/DebugWindowUtils');
require('./assets/Script/Common/Utils/DrawingBoard');
require('./assets/Script/Common/Utils/Dungeon');
require('./assets/Script/Common/Utils/EnumUtils');
require('./assets/Script/Common/Utils/GlobalHelper');
require('./assets/Script/Common/Utils/LRUCache');
require('./assets/Script/Common/Utils/MatchUtils');
require('./assets/Script/Common/Utils/Measure');
require('./assets/Script/Common/Utils/PolygonUtil');
require('./assets/Script/Common/Utils/Pool');
require('./assets/Script/Common/Utils/PriorityQueue');
require('./assets/Script/Common/Utils/PriorityStack');
require('./assets/Script/Common/Utils/PropBind');
require('./assets/Script/Common/Utils/Queue');
require('./assets/Script/Common/Utils/TaskMgr');
require('./assets/Script/Logic/Game');
require('./assets/Script/Logic/Manager/BaseMgr');
require('./assets/Script/Logic/Manager/ConfigMgr');
require('./assets/Script/Logic/Manager/PlayerMgr');
require('./assets/Script/Main');
require('./assets/Script/Scene/Scene');
require('./assets/Script/UIConfig');
require('./assets/Script/UIFrame/AdapterMgr');
require('./assets/Script/UIFrame/CocosHelper');
require('./assets/Script/UIFrame/EventCenter');
require('./assets/Script/UIFrame/EventType');
require('./assets/Script/UIFrame/FixedMgr');
require('./assets/Script/UIFrame/FormMgr');
require('./assets/Script/UIFrame/ModalMgr');
require('./assets/Script/UIFrame/ResMgr');
require('./assets/Script/UIFrame/SceneMgr');
require('./assets/Script/UIFrame/SoundMgr');
require('./assets/Script/UIFrame/Struct');
require('./assets/Script/UIFrame/TipsMgr');
require('./assets/Script/UIFrame/ToastMgr');
require('./assets/Script/UIFrame/UIBase');
require('./assets/Script/UIFrame/UIForm');
require('./assets/Script/UIFrame/UIManager');
require('./assets/Script/UIFrame/UIModalScript');
require('./assets/Script/UIFrame/UIToast');
require('./assets/Script/UIFrame/WindowMgr');
require('./assets/Script/UIFrame/config/SysConfig');
require('./assets/Script/UIFrame/config/SysDefine');
require('./assets/Script/UIScript/UIAbout');
require('./assets/Script/UIScript/UICapture');
require('./assets/Script/UIScript/UIDungeon');
require('./assets/Script/UIScript/UIECSView');
require('./assets/Script/UIScript/UIFunction');
require('./assets/Script/UIScript/UIGame');
require('./assets/Script/UIScript/UIHome');
require('./assets/Script/UIScript/UILight');
require('./assets/Script/UIScript/UILoading');
require('./assets/Script/UIScript/UIMap');
require('./assets/Script/UIScript/UIMeshTexture');
require('./assets/Script/UIScript/UIMobx');
require('./assets/Script/UIScript/UINavigator');
require('./assets/Script/UIScript/UIPop');
require('./assets/Script/UIScript/UIScrollPlus');
require('./assets/Script/UIScript/UIScrollTexture');
require('./assets/Script/UIScript/UISetting');
require('./assets/Script/UIScript/UISkills');
require('./assets/Script/UIScript/UISound');
require('./assets/Script/UIScript/UISplitTexture');
require('./assets/Script/UIScript/UITips');
require('./assets/Script/UIScript/UIWave');
require('./assets/Script/config/GuideConfig');
require('./assets/Script/test/Item');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/config/SysConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6147akOR5tLFILrfDfQBCbo', 'SysConfig');
// Script/UIFrame/config/SysConfig.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SysConfig = void 0;
var SysConfig = /** @class */ (function () {
    function SysConfig() {
    }
    SysConfig.useLRUCache = false;
    return SysConfig;
}());
exports.SysConfig = SysConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9jb25maWcvU3lzQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUFHQSxDQUFDO0lBRlUscUJBQVcsR0FBRyxLQUFLLENBQUM7SUFFL0IsZ0JBQUM7Q0FIRCxBQUdDLElBQUE7QUFIWSw4QkFBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTeXNDb25maWcge1xuICAgIHN0YXRpYyB1c2VMUlVDYWNoZSA9IGZhbHNlO1xuICAgIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Main.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e1b90/rohdEk4SdmmEZANaD', 'Main');
// Script/Main.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIConfig_1 = require("./UIConfig");
var FormMgr_1 = require("./UIFrame/FormMgr");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Main = /** @class */ (function (_super) {
    __extends(Main, _super);
    function Main() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Main.prototype.onLoad = function () {
    };
    Main.prototype.start = function () {
        // UINavigator.open();
        FormMgr_1.default.open(UIConfig_1.default.UIHome);
    };
    Main.prototype.onDestroy = function () {
    };
    Main = __decorate([
        ccclass
    ], Main);
    return Main;
}(cc.Component));
exports.default = Main;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTWFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx1Q0FBa0M7QUFDbEMsNkNBQXdDO0FBR2xDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWtDLHdCQUFZO0lBQTlDOztJQWNBLENBQUM7SUFaRyxxQkFBTSxHQUFOO0lBRUEsQ0FBQztJQUVELG9CQUFLLEdBQUw7UUFDSSxzQkFBc0I7UUFDdEIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsd0JBQVMsR0FBVDtJQUVBLENBQUM7SUFiZ0IsSUFBSTtRQUR4QixPQUFPO09BQ2EsSUFBSSxDQWN4QjtJQUFELFdBQUM7Q0FkRCxBQWNDLENBZGlDLEVBQUUsQ0FBQyxTQUFTLEdBYzdDO2tCQWRvQixJQUFJIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJQ29uZmlnIGZyb20gXCIuL1VJQ29uZmlnXCI7XG5pbXBvcnQgRm9ybU1nciBmcm9tIFwiLi9VSUZyYW1lL0Zvcm1NZ3JcIjtcbmltcG9ydCBVSU5hdmlnYXRvciBmcm9tIFwiLi9VSVNjcmlwdC9VSU5hdmlnYXRvclwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW4gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIFxuICAgIG9uTG9hZCgpIHtcblxuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgLy8gVUlOYXZpZ2F0b3Iub3BlbigpO1xuICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlIb21lKTtcbiAgICB9XG4gICAgXG4gICAgb25EZXN0cm95KCkge1xuICAgICAgICBcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/FormMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b34acXq9c1L/Yaf2AaOKH2s', 'FormMgr');
// Script/UIFrame/FormMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var SysDefine_1 = require("./config/SysDefine");
var FixedMgr_1 = require("./FixedMgr");
var SceneMgr_1 = require("./SceneMgr");
var TipsMgr_1 = require("./TipsMgr");
var WindowMgr_1 = require("./WindowMgr");
var FormMgr = /** @class */ (function () {
    function FormMgr() {
    }
    /**
     * 打开窗体
     * @param form 窗体配置信息
     * @param param 自定义参数
     * @param formData 窗体处理时的一些数据
     */
    FormMgr.prototype.open = function (form, param, formData) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = form.type;
                        switch (_a) {
                            case SysDefine_1.FormType.Screen: return [3 /*break*/, 1];
                            case SysDefine_1.FormType.Window: return [3 /*break*/, 3];
                            case SysDefine_1.FormType.Fixed: return [3 /*break*/, 5];
                            case SysDefine_1.FormType.Tips: return [3 /*break*/, 7];
                        }
                        return [3 /*break*/, 9];
                    case 1: return [4 /*yield*/, SceneMgr_1.default.open(form.prefabUrl, param, formData)];
                    case 2: return [2 /*return*/, _b.sent()];
                    case 3: return [4 /*yield*/, WindowMgr_1.default.open(form.prefabUrl, param, formData)];
                    case 4: return [2 /*return*/, _b.sent()];
                    case 5: return [4 /*yield*/, FixedMgr_1.default.open(form.prefabUrl, param, formData)];
                    case 6: return [2 /*return*/, _b.sent()];
                    case 7: return [4 /*yield*/, TipsMgr_1.default.open(form.prefabUrl, param, formData)];
                    case 8: return [2 /*return*/, _b.sent()];
                    case 9:
                        cc.error("\u672A\u77E5\u7C7B\u578B\u7684\u7A97\u4F53: " + form.type);
                        return [2 /*return*/, null];
                }
            });
        });
    };
    FormMgr.prototype.close = function (form) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = form.type;
                        switch (_a) {
                            case SysDefine_1.FormType.Screen: return [3 /*break*/, 1];
                            case SysDefine_1.FormType.Window: return [3 /*break*/, 3];
                            case SysDefine_1.FormType.Fixed: return [3 /*break*/, 5];
                            case SysDefine_1.FormType.Tips: return [3 /*break*/, 7];
                        }
                        return [3 /*break*/, 9];
                    case 1: return [4 /*yield*/, SceneMgr_1.default.close(form.prefabUrl)];
                    case 2: return [2 /*return*/, _b.sent()];
                    case 3: return [4 /*yield*/, WindowMgr_1.default.close(form.prefabUrl)];
                    case 4: return [2 /*return*/, _b.sent()];
                    case 5: return [4 /*yield*/, FixedMgr_1.default.close(form.prefabUrl)];
                    case 6: return [2 /*return*/, _b.sent()];
                    case 7: return [4 /*yield*/, TipsMgr_1.default.close(form.prefabUrl)];
                    case 8: return [2 /*return*/, _b.sent()];
                    case 9:
                        cc.error("\u672A\u77E5\u7C7B\u578B\u7684\u7A97\u4F53: " + form.type);
                        return [2 /*return*/, null];
                }
            });
        });
    };
    FormMgr.prototype.backScene = function (params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, SceneMgr_1.default.back(params, formData)];
            });
        });
    };
    FormMgr.prototype.closeAllWindows = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, WindowMgr_1.default.closeAll()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return FormMgr;
}());
exports.default = new FormMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9Gb3JtTWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQThDO0FBQzlDLHVDQUFrQztBQUNsQyx1Q0FBa0M7QUFFbEMscUNBQWdDO0FBQ2hDLHlDQUFvQztBQUVwQztJQUFBO0lBK0NBLENBQUM7SUE5Q0c7Ozs7O09BS0c7SUFDRyxzQkFBSSxHQUFWLFVBQVcsSUFBaUIsRUFBRSxLQUFXLEVBQUUsUUFBb0I7Ozs7Ozt3QkFDcEQsS0FBQSxJQUFJLENBQUMsSUFBSSxDQUFBOztpQ0FDUCxvQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFoQix3QkFBZTtpQ0FFZixvQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFoQix3QkFBZTtpQ0FFZixvQkFBUSxDQUFDLEtBQUssQ0FBQyxDQUFmLHdCQUFjO2lDQUVkLG9CQUFRLENBQUMsSUFBSSxDQUFDLENBQWQsd0JBQWE7Ozs0QkFMUCxxQkFBTSxrQkFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBQTs0QkFBM0Qsc0JBQU8sU0FBb0QsRUFBQzs0QkFFckQscUJBQU0sbUJBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLEVBQUE7NEJBQTVELHNCQUFPLFNBQXFELEVBQUM7NEJBRXRELHFCQUFNLGtCQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxFQUFBOzRCQUEzRCxzQkFBTyxTQUFvRCxFQUFDOzRCQUVyRCxxQkFBTSxpQkFBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBQTs0QkFBMUQsc0JBQU8sU0FBbUQsRUFBQzs7d0JBRTNELEVBQUUsQ0FBQyxLQUFLLENBQUMsaURBQVksSUFBSSxDQUFDLElBQU0sQ0FBQyxDQUFDO3dCQUNsQyxzQkFBTyxJQUFJLEVBQUM7Ozs7S0FFdkI7SUFFSyx1QkFBSyxHQUFYLFVBQVksSUFBaUI7Ozs7Ozt3QkFDbEIsS0FBQSxJQUFJLENBQUMsSUFBSSxDQUFBOztpQ0FDUCxvQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFoQix3QkFBZTtpQ0FFZixvQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFoQix3QkFBZTtpQ0FFZixvQkFBUSxDQUFDLEtBQUssQ0FBQyxDQUFmLHdCQUFjO2lDQUVkLG9CQUFRLENBQUMsSUFBSSxDQUFDLENBQWQsd0JBQWE7Ozs0QkFMUCxxQkFBTSxrQkFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUE7NEJBQTNDLHNCQUFPLFNBQW9DLEVBQUM7NEJBRXJDLHFCQUFNLG1CQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBQTs0QkFBNUMsc0JBQU8sU0FBcUMsRUFBQzs0QkFFdEMscUJBQU0sa0JBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFBOzRCQUEzQyxzQkFBTyxTQUFvQyxFQUFDOzRCQUVyQyxxQkFBTSxpQkFBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUE7NEJBQTFDLHNCQUFPLFNBQW1DLEVBQUM7O3dCQUUzQyxFQUFFLENBQUMsS0FBSyxDQUFDLGlEQUFZLElBQUksQ0FBQyxJQUFNLENBQUMsQ0FBQzt3QkFDbEMsc0JBQU8sSUFBSSxFQUFDOzs7O0tBRXZCO0lBRUssMkJBQVMsR0FBZixVQUFnQixNQUFZLEVBQUUsUUFBb0I7OztnQkFDOUMsc0JBQU8sa0JBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxFQUFDOzs7S0FDMUM7SUFFSyxpQ0FBZSxHQUFyQjs7Ozs0QkFDSSxxQkFBTSxtQkFBUyxDQUFDLFFBQVEsRUFBRSxFQUFBOzt3QkFBMUIsU0FBMEIsQ0FBQzs7Ozs7S0FDOUI7SUFFTCxjQUFDO0FBQUQsQ0EvQ0EsQUErQ0MsSUFBQTtBQUVELGtCQUFlLElBQUksT0FBTyxFQUFFLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtVHlwZSB9IGZyb20gXCIuL2NvbmZpZy9TeXNEZWZpbmVcIjtcbmltcG9ydCBGaXhlZE1nciBmcm9tIFwiLi9GaXhlZE1nclwiO1xuaW1wb3J0IFNjZW5lTWdyIGZyb20gXCIuL1NjZW5lTWdyXCI7XG5pbXBvcnQgeyBJRm9ybUNvbmZpZywgSUZvcm1EYXRhIH0gZnJvbSBcIi4vU3RydWN0XCI7XG5pbXBvcnQgVGlwc01nciBmcm9tIFwiLi9UaXBzTWdyXCI7XG5pbXBvcnQgV2luZG93TWdyIGZyb20gXCIuL1dpbmRvd01nclwiO1xuXG5jbGFzcyBGb3JtTWdyIHtcbiAgICAvKipcbiAgICAgKiDmiZPlvIDnqpfkvZNcbiAgICAgKiBAcGFyYW0gZm9ybSDnqpfkvZPphY3nva7kv6Hmga9cbiAgICAgKiBAcGFyYW0gcGFyYW0g6Ieq5a6a5LmJ5Y+C5pWwXG4gICAgICogQHBhcmFtIGZvcm1EYXRhIOeql+S9k+WkhOeQhuaXtueahOS4gOS6m+aVsOaNrlxuICAgICAqL1xuICAgIGFzeW5jIG9wZW4oZm9ybTogSUZvcm1Db25maWcsIHBhcmFtPzogYW55LCBmb3JtRGF0YT86IElGb3JtRGF0YSkge1xuICAgICAgICBzd2l0Y2goZm9ybS50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIEZvcm1UeXBlLlNjcmVlbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgU2NlbmVNZ3Iub3Blbihmb3JtLnByZWZhYlVybCwgcGFyYW0sIGZvcm1EYXRhKTtcbiAgICAgICAgICAgIGNhc2UgRm9ybVR5cGUuV2luZG93OlxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBXaW5kb3dNZ3Iub3Blbihmb3JtLnByZWZhYlVybCwgcGFyYW0sIGZvcm1EYXRhKTtcbiAgICAgICAgICAgIGNhc2UgRm9ybVR5cGUuRml4ZWQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IEZpeGVkTWdyLm9wZW4oZm9ybS5wcmVmYWJVcmwsIHBhcmFtLCBmb3JtRGF0YSk7XG4gICAgICAgICAgICBjYXNlIEZvcm1UeXBlLlRpcHM6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFRpcHNNZ3Iub3Blbihmb3JtLnByZWZhYlVybCwgcGFyYW0sIGZvcm1EYXRhKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgY2MuZXJyb3IoYOacquefpeexu+Wei+eahOeql+S9kzogJHtmb3JtLnR5cGV9YCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBjbG9zZShmb3JtOiBJRm9ybUNvbmZpZykge1xuICAgICAgICBzd2l0Y2goZm9ybS50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIEZvcm1UeXBlLlNjcmVlbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgU2NlbmVNZ3IuY2xvc2UoZm9ybS5wcmVmYWJVcmwpO1xuICAgICAgICAgICAgY2FzZSBGb3JtVHlwZS5XaW5kb3c6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFdpbmRvd01nci5jbG9zZShmb3JtLnByZWZhYlVybCk7XG4gICAgICAgICAgICBjYXNlIEZvcm1UeXBlLkZpeGVkOlxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBGaXhlZE1nci5jbG9zZShmb3JtLnByZWZhYlVybCk7XG4gICAgICAgICAgICBjYXNlIEZvcm1UeXBlLlRpcHM6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFRpcHNNZ3IuY2xvc2UoZm9ybS5wcmVmYWJVcmwpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjYy5lcnJvcihg5pyq55+l57G75Z6L55qE56qX5L2TOiAke2Zvcm0udHlwZX1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGJhY2tTY2VuZShwYXJhbXM/OiBhbnksIGZvcm1EYXRhPzogSUZvcm1EYXRhKSB7XG4gICAgICAgIHJldHVybiBTY2VuZU1nci5iYWNrKHBhcmFtcywgZm9ybURhdGEpO1xuICAgIH1cblxuICAgIGFzeW5jIGNsb3NlQWxsV2luZG93cygpIHtcbiAgICAgICAgYXdhaXQgV2luZG93TWdyLmNsb3NlQWxsKCk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBGb3JtTWdyKCk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UICapture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26449d5Y5lJSqtiyJTfLcTr', 'UICapture');
// Script/UIScript/UICapture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var CameraCapture_1 = require("../Common/Components/CameraCapture");
var DrawBorad_1 = require("../Common/Components/DrawBorad");
var TouchPlus_1 = require("../Common/Components/TouchPlus");
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UICapture = /** @class */ (function (_super) {
    __extends(UICapture, _super);
    function UICapture() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sprite = null;
        _this.camereCapture = null;
        _this.drawBorad = null;
        _this.touchPlus = null;
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UICapture.prototype.start = function () {
        var _this = this;
        this.touchPlus.addEvent(null, function (e) {
            var delta = e.getDelta();
            _this.touchPlus.node.x += delta.x;
            _this.touchPlus.node.y += delta.y;
        });
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
        this.view.Capture.addClick(this.onClickCapture, this);
        this.view.Pen.addClick(this.onClickPen, this);
        this.view.Reaser.addClick(this.onClickReaser, this);
        this.onClickCapture();
    };
    UICapture.prototype.onClickCapture = function () {
        var data = this.camereCapture.captureTexture();
        var texture = new cc.Texture2D();
        texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, this.drawBorad.node.width, this.drawBorad.node.height);
        this.sprite.spriteFrame = new cc.SpriteFrame(texture);
        this.sprite.spriteFrame.setFlipY(true);
        this.drawBorad.setData(data);
    };
    UICapture.prototype.onClickPen = function () {
        this.drawBorad.setPen();
    };
    UICapture.prototype.onClickReaser = function () {
        this.drawBorad.setReaser();
    };
    __decorate([
        property(cc.Sprite)
    ], UICapture.prototype, "sprite", void 0);
    __decorate([
        property(CameraCapture_1.default)
    ], UICapture.prototype, "camereCapture", void 0);
    __decorate([
        property(DrawBorad_1.default)
    ], UICapture.prototype, "drawBorad", void 0);
    __decorate([
        property(TouchPlus_1.default)
    ], UICapture.prototype, "touchPlus", void 0);
    UICapture = __decorate([
        ccclass
    ], UICapture);
    return UICapture;
}(UIForm_1.UIScreen));
exports.default = UICapture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlDYXB0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG9FQUErRDtBQUMvRCw0REFBdUQ7QUFDdkQsNERBQXVEO0FBQ3ZELDhDQUF5QztBQUN6Qyw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVE7SUFBL0M7UUFBQSxxRUFrREM7UUEvQ0csWUFBTSxHQUFjLElBQUksQ0FBQztRQUd6QixtQkFBYSxHQUFrQixJQUFJLENBQUM7UUFFcEMsZUFBUyxHQUFjLElBQUksQ0FBQztRQUU1QixlQUFTLEdBQWMsSUFBSSxDQUFDOztRQXVDNUIsaUJBQWlCO0lBQ3JCLENBQUM7SUFwQ0csZUFBZTtJQUVmLHlCQUFLLEdBQUw7UUFBQSxpQkFlQztRQWRHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxVQUFDLENBQUM7WUFDNUIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3pCLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BCLGlCQUFPLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFcEQsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxrQ0FBYyxHQUFkO1FBQ0ksSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMvQyxJQUFJLE9BQU8sR0FBRyxJQUFJLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQTtRQUNoQyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JILElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxHQUFHLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELDhCQUFVLEdBQVY7UUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFDRCxpQ0FBYSxHQUFiO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBNUNEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkNBQ0s7SUFHekI7UUFEQyxRQUFRLENBQUMsdUJBQWEsQ0FBQztvREFDWTtJQUVwQztRQURDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDO2dEQUNRO0lBRTVCO1FBREMsUUFBUSxDQUFDLG1CQUFTLENBQUM7Z0RBQ1E7SUFWWCxTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBa0Q3QjtJQUFELGdCQUFDO0NBbERELEFBa0RDLENBbERzQyxpQkFBUSxHQWtEOUM7a0JBbERvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJQ2FwdHVyZV9BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSUNhcHR1cmVfQXV0b1wiO1xuaW1wb3J0IENhbWVyYUNhcHR1cmUgZnJvbSBcIi4uL0NvbW1vbi9Db21wb25lbnRzL0NhbWVyYUNhcHR1cmVcIjtcbmltcG9ydCBEcmF3Qm9yYWQgZnJvbSBcIi4uL0NvbW1vbi9Db21wb25lbnRzL0RyYXdCb3JhZFwiO1xuaW1wb3J0IFRvdWNoUGx1cyBmcm9tIFwiLi4vQ29tbW9uL0NvbXBvbmVudHMvVG91Y2hQbHVzXCI7XG5pbXBvcnQgRm9ybU1nciBmcm9tIFwiLi4vVUlGcmFtZS9Gb3JtTWdyXCI7XG5pbXBvcnQgeyBVSVNjcmVlbiB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJQ2FwdHVyZSBleHRlbmRzIFVJU2NyZWVuIHtcblxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXG4gICAgc3ByaXRlOiBjYy5TcHJpdGUgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KENhbWVyYUNhcHR1cmUpXG4gICAgY2FtZXJlQ2FwdHVyZTogQ2FtZXJhQ2FwdHVyZSA9IG51bGw7XG4gICAgQHByb3BlcnR5KERyYXdCb3JhZClcbiAgICBkcmF3Qm9yYWQ6IERyYXdCb3JhZCA9IG51bGw7XG4gICAgQHByb3BlcnR5KFRvdWNoUGx1cylcbiAgICB0b3VjaFBsdXM6IFRvdWNoUGx1cyA9IG51bGw7XG5cbiAgICB2aWV3OiBVSUNhcHR1cmVfQXV0bztcblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkgeyAgICAgICAgXG4gICAgICAgIHRoaXMudG91Y2hQbHVzLmFkZEV2ZW50KG51bGwsIChlKSA9PiB7XG4gICAgICAgICAgICBsZXQgZGVsdGEgPSBlLmdldERlbHRhKCk7XG4gICAgICAgICAgICB0aGlzLnRvdWNoUGx1cy5ub2RlLnggKz0gZGVsdGEueDtcbiAgICAgICAgICAgIHRoaXMudG91Y2hQbHVzLm5vZGUueSArPSBkZWx0YS55O1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnZpZXcuQmFjay5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICBGb3JtTWdyLmJhY2tTY2VuZSgpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy52aWV3LkNhcHR1cmUuYWRkQ2xpY2sodGhpcy5vbkNsaWNrQ2FwdHVyZSwgdGhpcyk7XG4gICAgICAgIHRoaXMudmlldy5QZW4uYWRkQ2xpY2sodGhpcy5vbkNsaWNrUGVuLCB0aGlzKTtcbiAgICAgICAgdGhpcy52aWV3LlJlYXNlci5hZGRDbGljayh0aGlzLm9uQ2xpY2tSZWFzZXIsIHRoaXMpO1xuXG4gICAgICAgIHRoaXMub25DbGlja0NhcHR1cmUoKTtcbiAgICB9XG5cbiAgICBvbkNsaWNrQ2FwdHVyZSgpIHtcbiAgICAgICAgbGV0IGRhdGEgPSB0aGlzLmNhbWVyZUNhcHR1cmUuY2FwdHVyZVRleHR1cmUoKTtcbiAgICAgICAgbGV0IHRleHR1cmUgPSBuZXcgY2MuVGV4dHVyZTJEKClcbiAgICAgICAgdGV4dHVyZS5pbml0V2l0aERhdGEoZGF0YSwgY2MuVGV4dHVyZTJELlBpeGVsRm9ybWF0LlJHQkE4ODg4LCB0aGlzLmRyYXdCb3JhZC5ub2RlLndpZHRoLCB0aGlzLmRyYXdCb3JhZC5ub2RlLmhlaWdodCk7ICAgICAgICBcbiAgICAgICAgdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7ICAgICAgICBcbiAgICAgICAgdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUuc2V0RmxpcFkodHJ1ZSk7XG4gICAgICAgIHRoaXMuZHJhd0JvcmFkLnNldERhdGEoZGF0YSk7XG4gICAgfVxuXG4gICAgb25DbGlja1BlbigpIHtcbiAgICAgICAgdGhpcy5kcmF3Qm9yYWQuc2V0UGVuKCk7XG4gICAgfVxuICAgIG9uQ2xpY2tSZWFzZXIoKSB7XG4gICAgICAgIHRoaXMuZHJhd0JvcmFkLnNldFJlYXNlcigpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/config/GuideConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6b6deMaiAZPKpVJ6DlxM7ea', 'GuideConfig');
// Script/config/GuideConfig.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GuideConfig = void 0;
exports.GuideConfig = [
    "你好，我是小精灵莎莎，从今天开始协助元宇宙小镇的经营，请多关照！",
    "你：这里是？",
    "这里是虚空之地，曾经也是有过美好繁华的过去，然而人们在逐步的发展中忘记了拥有的美好……",
    "你：？？？我怎么会来到了这里？",
    "呃……这里的时空会稍微有些错乱……",
    "你：时空错乱？",
    "嗯……没错！虚空之地是时空之门破碎之后，碎片凝聚成的地方，你会在这里遇到过去或者未来的旅行者！",
    "你：这么……厉害？",
    "当然不止这么厉害咯~我们还发现，时空之门的碎片会通过旅行者和小镇的活力重新凝聚！",
    "你：那时空之门恢复的话……",
    "那你就可以回到你自己的那个时代里了呢！",
    "让我们一起为这里找回活力，打造梦想中的小镇吧！",
    "那么，在菜单里选择建造来搭建新的店铺吧！",
    "嘿！快看！第一位旅行者来到我们的小镇了!看起来是一位冒险者呢！",
    "冒险者是我们的贵客，他们来到城镇后，会在商店筹备物资，前去冒险，既带动了小镇的经济，还保护了小镇的安全！",
    "你：保护小镇的安全？",
    "嗯呢！因为时空扭曲，小镇也会受到不同的怪兽攻击，这时候小镇附近的冒险者都会出手相助哟！",
    "新设施建成，右下角的城镇声望升高了！",
    "要注意不同的设施吸引不同的旅行者哟！",
    "我对后续的发展越来越有信心了呢！",
    "活动对提升城镇人气和旅行者能力很有帮助哦！",
    "城镇人气高了，会有更多的旅行者被吸引而来！",
    "在城镇外打倒怪物后，冒险者会获得经验值和资金，才有钱更新装备哟！",
    "可以向冒险者送礼物，你们会成为很好的朋友呢！",
];

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvY29uZmlnL0d1aWRlQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFXLFFBQUEsV0FBVyxHQUFPO0lBQ3pCLGtDQUFrQztJQUNsQyxRQUFRO0lBQ1IsNkNBQTZDO0lBRTdDLGlCQUFpQjtJQUVqQixtQkFBbUI7SUFFbkIsU0FBUztJQUVULGlEQUFpRDtJQUVqRCxXQUFXO0lBRVgsMENBQTBDO0lBRTFDLGVBQWU7SUFFZixxQkFBcUI7SUFFckIseUJBQXlCO0lBRXpCLHNCQUFzQjtJQUV0QixpQ0FBaUM7SUFFakMsc0RBQXNEO0lBRXRELFlBQVk7SUFFWiw2Q0FBNkM7SUFFN0Msb0JBQW9CO0lBRXBCLG9CQUFvQjtJQUVwQixrQkFBa0I7SUFFbEIsdUJBQXVCO0lBRXZCLHVCQUF1QjtJQUV2QixrQ0FBa0M7SUFFbEMsd0JBQXdCO0NBQzNCLENBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbGV0IEd1aWRlQ29uZmlnOmFueVtdPVtcbiAgICBcIuS9oOWlve+8jOaIkeaYr+Wwj+eyvueBteiOjuiOju+8jOS7juS7iuWkqeW8gOWni+WNj+WKqeWFg+Wuh+WumeWwj+mVh+eahOe7j+iQpe+8jOivt+WkmuWFs+eFp++8gVwiLFxuICAgIFwi5L2g77ya6L+Z6YeM5piv77yfXCIsXG4gICAgXCLov5nph4zmmK/omZrnqbrkuYvlnLDvvIzmm77nu4/kuZ/mmK/mnInov4fnvo7lpb3nuYHljY7nmoTov4fljrvvvIznhLbogIzkurrku6zlnKjpgJDmraXnmoTlj5HlsZXkuK3lv5jorrDkuobmi6XmnInnmoTnvo7lpb3igKbigKZcIixcblxuICAgIFwi5L2g77ya77yf77yf77yf5oiR5oCO5LmI5Lya5p2l5Yiw5LqG6L+Z6YeM77yfXCIsXG5cbiAgICBcIuWRg+KApuKApui/memHjOeahOaXtuepuuS8mueojeW+ruacieS6m+mUmeS5seKApuKAplwiLFxuXG4gICAgXCLkvaDvvJrml7bnqbrplJnkubHvvJ9cIixcblxuICAgIFwi5Zev4oCm4oCm5rKh6ZSZ77yB6Jma56m65LmL5Zyw5piv5pe256m65LmL6Zeo56C056KO5LmL5ZCO77yM56KO54mH5Yed6IGa5oiQ55qE5Zyw5pa577yM5L2g5Lya5Zyo6L+Z6YeM6YGH5Yiw6L+H5Y675oiW6ICF5pyq5p2l55qE5peF6KGM6ICF77yBXCIsXG5cbiAgICBcIuS9oO+8mui/meS5iOKApuKApuWOieWus++8n1wiLFxuXG4gICAgXCLlvZPnhLbkuI3mraLov5nkuYjljonlrrPlkq9+5oiR5Lus6L+Y5Y+R546w77yM5pe256m65LmL6Zeo55qE56KO54mH5Lya6YCa6L+H5peF6KGM6ICF5ZKM5bCP6ZWH55qE5rS75Yqb6YeN5paw5Yed6IGa77yBXCIsXG5cbiAgICBcIuS9oO+8mumCo+aXtuepuuS5i+mXqOaBouWkjeeahOivneKApuKAplwiLFxuXG4gICAgXCLpgqPkvaDlsLHlj6/ku6Xlm57liLDkvaDoh6rlt7HnmoTpgqPkuKrml7bku6Pph4zkuoblkaLvvIFcIixcblxuICAgIFwi6K6p5oiR5Lus5LiA6LW35Li66L+Z6YeM5om+5Zue5rS75Yqb77yM5omT6YCg5qKm5oOz5Lit55qE5bCP6ZWH5ZCn77yBXCIsXG5cbiAgICBcIumCo+S5iO+8jOWcqOiPnOWNlemHjOmAieaLqeW7uumAoOadpeaQreW7uuaWsOeahOW6l+mTuuWQp++8gVwiLFxuXG4gICAgXCLlmL/vvIHlv6vnnIvvvIHnrKzkuIDkvY3ml4XooYzogIXmnaXliLDmiJHku6znmoTlsI/plYfkuoYh55yL6LW35p2l5piv5LiA5L2N5YaS6Zmp6ICF5ZGi77yBXCIsXG5cbiAgICBcIuWGkumZqeiAheaYr+aIkeS7rOeahOi0teWuou+8jOS7luS7rOadpeWIsOWfjumVh+WQju+8jOS8muWcqOWVhuW6l+etueWkh+eJqei1hO+8jOWJjeWOu+WGkumZqe+8jOaXouW4puWKqOS6huWwj+mVh+eahOe7j+a1ju+8jOi/mOS/neaKpOS6huWwj+mVh+eahOWuieWFqO+8gVwiLFxuXG4gICAgXCLkvaDvvJrkv53miqTlsI/plYfnmoTlronlhajvvJ9cIixcblxuICAgIFwi5Zev5ZGi77yB5Zug5Li65pe256m65omt5puy77yM5bCP6ZWH5Lmf5Lya5Y+X5Yiw5LiN5ZCM55qE5oCq5YW95pS75Ye777yM6L+Z5pe25YCZ5bCP6ZWH6ZmE6L+R55qE5YaS6Zmp6ICF6YO95Lya5Ye65omL55u45Yqp5ZOf77yBXCIsXG5cbiAgICBcIuaWsOiuvuaWveW7uuaIkO+8jOWPs+S4i+inkueahOWfjumVh+WjsOacm+WNh+mrmOS6hu+8gVwiLFxuXG4gICAgXCLopoHms6jmhI/kuI3lkIznmoTorr7mlr3lkLjlvJXkuI3lkIznmoTml4XooYzogIXlk5/vvIFcIixcblxuICAgIFwi5oiR5a+55ZCO57ut55qE5Y+R5bGV6LaK5p2l6LaK5pyJ5L+h5b+D5LqG5ZGi77yBXCIsXG5cbiAgICBcIua0u+WKqOWvueaPkOWNh+WfjumVh+S6uuawlOWSjOaXheihjOiAheiDveWKm+W+iOacieW4ruWKqeWTpu+8gVwiLFxuXG4gICAgXCLln47plYfkurrmsJTpq5jkuobvvIzkvJrmnInmm7TlpJrnmoTml4XooYzogIXooqvlkLjlvJXogIzmnaXvvIFcIixcblxuICAgIFwi5Zyo5Z+O6ZWH5aSW5omT5YCS5oCq54mp5ZCO77yM5YaS6Zmp6ICF5Lya6I635b6X57uP6aqM5YC85ZKM6LWE6YeR77yM5omN5pyJ6ZKx5pu05paw6KOF5aSH5ZOf77yBXCIsXG5cbiAgICBcIuWPr+S7peWQkeWGkumZqeiAhemAgeekvOeJqe+8jOS9oOS7rOS8muaIkOS4uuW+iOWlveeahOaci+WPi+WRou+8gVwiLFxuXSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/ResMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a1946LwxMZELpC3XyersJGl', 'ResMgr');
// Script/UIFrame/ResMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var CocosHelper_1 = require("./CocosHelper");
/**
 * 资源加载, 针对的是Form
 * 首先将资源分为两类
 * 一种是在编辑器时将其拖上去图片, 这里将其称为静态图片,
 * 一种是在代码中使用cc.loader加载的图片, 这里将其称为动态图片
 *
 * 对于静态资源
 * 1, 加载  在加载prefab时, cocos会将其依赖的图片一并加载, 所有不需要我们担心
 * 2, 释放  这里采用的引用计数的管理方法, 只需要调用destoryForm即可
 *
 * 加载一个窗体
 * 第一步 加载prefab, 第二步 实例化prefab 获得 node
 * 所以销毁一个窗体 也需要两步, 销毁node, 销毁prefab
 */
var ResMgr = /** @class */ (function () {
    function ResMgr() {
        /**
         * 采用计数管理的办法, 管理form所依赖的资源
         */
        this._prefabDepends = cc.js.createMap();
        this._dynamicTags = cc.js.createMap();
        this._tmpAssetsDepends = []; // 临时缓存
        this._assetsReference = cc.js.createMap(); // 资源引用计数
        this._prefabs = cc.js.createMap(); // 预制体缓存
    }
    Object.defineProperty(ResMgr, "inst", {
        get: function () {
            if (this.instance === null) {
                this.instance = new ResMgr();
            }
            return this.instance;
        },
        enumerable: false,
        configurable: true
    });
    /** 加载窗体 */
    ResMgr.prototype.loadFormPrefab = function (fid) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, res, deps;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this._prefabs[fid])
                            return [2 /*return*/, this._prefabs[fid]];
                        return [4 /*yield*/, this._loadResWithReference(fid, cc.Prefab)];
                    case 1:
                        _a = _b.sent(), res = _a.res, deps = _a.deps;
                        this._prefabDepends[fid] = deps;
                        this._prefabs[fid] = res;
                        return [2 /*return*/, res];
                }
            });
        });
    };
    /** 销毁窗体 */
    ResMgr.prototype.destoryFormPrefab = function (fid) {
        if (this._prefabs[fid]) {
            this._prefabs[fid].destroy();
            this._prefabs[fid] = null;
            delete this._prefabs[fid];
        }
        // 销毁依赖的资源
        this._destoryResWithReference(this._prefabDepends[fid]);
        // 删除缓存
        this._prefabDepends[fid] = null;
        delete this._prefabDepends[fid];
    };
    /** 动态资源管理, 通过tag标记当前资源, 统一释放 */
    ResMgr.prototype.loadDynamicRes = function (url, type, tag) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, res, deps;
            var _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, this._loadResWithReference(url, type)];
                    case 1:
                        _a = _c.sent(), res = _a.res, deps = _a.deps;
                        if (!this._dynamicTags[tag]) {
                            this._dynamicTags[tag] = [];
                        }
                        (_b = this._dynamicTags[tag]).push.apply(_b, deps);
                        return [2 /*return*/, res];
                }
            });
        });
    };
    /** 销毁动态资源  */
    ResMgr.prototype.destoryDynamicRes = function (tag) {
        if (!this._dynamicTags[tag]) { // 销毁
            return false;
        }
        this._destoryResWithReference(this._dynamicTags[tag]);
        this._dynamicTags[tag] = null;
        delete this._dynamicTags[tag];
        return true;
    };
    /** 加载资源并添加引用计数 */
    ResMgr.prototype._loadResWithReference = function (url, type) {
        return __awaiter(this, void 0, void 0, function () {
            var res, deps;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, CocosHelper_1.default.loadResSync(url, type, this._addTmpAssetsDepends.bind(this))];
                    case 1:
                        res = _a.sent();
                        if (!res) {
                            this._clearTmpAssetsDepends();
                            return [2 /*return*/, null];
                        }
                        this._clearTmpAssetsDepends();
                        deps = cc.assetManager.dependUtil.getDepsRecursively(res['_uuid']) || [];
                        deps.push(res['_uuid']);
                        this.addAssetsDepends(deps);
                        return [2 /*return*/, {
                                res: res,
                                deps: deps
                            }];
                }
            });
        });
    };
    /** 更加引用销毁资源 */
    ResMgr.prototype._destoryResWithReference = function (deps) {
        var _toDeletes = this.removeAssetsDepends(deps);
        this._destoryAssets(_toDeletes);
        return true;
    };
    /** 添加资源计数 */
    ResMgr.prototype.addAssetsDepends = function (deps) {
        for (var _i = 0, deps_1 = deps; _i < deps_1.length; _i++) {
            var s = deps_1[_i];
            if (this._checkIsBuiltinAssets(s))
                continue;
            if (this._assetsReference[s]) {
                this._assetsReference[s] += 1;
            }
            else {
                this._assetsReference[s] = 1;
            }
        }
    };
    /** 删除资源计数 */
    ResMgr.prototype.removeAssetsDepends = function (deps) {
        var _deletes = [];
        for (var _i = 0, deps_2 = deps; _i < deps_2.length; _i++) {
            var s = deps_2[_i];
            if (!this._assetsReference[s] || this._assetsReference[s] === 0)
                continue;
            this._assetsReference[s]--;
            if (this._assetsReference[s] === 0) {
                _deletes.push(s);
                delete this._assetsReference[s]; // 删除key;
            }
        }
        return _deletes;
    };
    ResMgr.prototype._destoryAssets = function (urls) {
        for (var _i = 0, urls_1 = urls; _i < urls_1.length; _i++) {
            var url = urls_1[_i];
            this._destoryAsset(url);
        }
    };
    /** 销毁资源 */
    ResMgr.prototype._destoryAsset = function (url) {
        if (this._checkIsBuiltinAssets(url))
            return;
        cc.assetManager.assets.remove(url); // 从缓存中清除
        var asset = cc.assetManager.assets.get(url); // 销毁该资源
        asset && asset.destroy();
        cc.assetManager.dependUtil['remove'](url); // 从依赖中删除
    };
    /** 临时添加资源计数 */
    ResMgr.prototype._addTmpAssetsDepends = function (completedCount, totalCount, item) {
        var _a;
        var deps = (cc.assetManager.dependUtil.getDepsRecursively(item.uuid) || []);
        deps.push(item.uuid);
        this.addAssetsDepends(deps);
        (_a = this._tmpAssetsDepends).push.apply(_a, deps);
    };
    /** 删除临时添加的计数 */
    ResMgr.prototype._clearTmpAssetsDepends = function () {
        for (var _i = 0, _a = this._tmpAssetsDepends; _i < _a.length; _i++) {
            var s = _a[_i];
            if (!this._assetsReference[s] || this._assetsReference[s] === 0)
                continue;
            this._assetsReference[s]--;
            if (this._assetsReference[s] === 0) {
                delete this._assetsReference[s]; // 这里不清理缓存
            }
        }
        this._tmpAssetsDepends = [];
    };
    /** 检查是否是builtin内的资源 */
    ResMgr.prototype._checkIsBuiltinAssets = function (url) {
        var asset = cc.assetManager.assets.get(url);
        if (asset && asset['_name'].indexOf("builtin") != -1) {
            return true;
        }
        return false;
    };
    /** 计算当前纹理数量和缓存 */
    ResMgr.prototype.computeTextureCache = function () {
        var cache = cc.assetManager.assets;
        var totalTextureSize = 0;
        var count = 0;
        cache.forEach(function (item, key) {
            var type = (item && item['__classname__']) ? item['__classname__'] : '';
            if (type == 'cc.Texture2D') {
                var texture = item;
                var textureSize = texture.width * texture.height * ((texture['_native'] === '.jpg' ? 3 : 4) / 1024 / 1024);
                // debugger
                totalTextureSize += textureSize;
                count++;
            }
        });
        return "\u7F13\u5B58 [\u7EB9\u7406\u603B\u6570:" + count + "][\u7EB9\u7406\u7F13\u5B58:" + (totalTextureSize.toFixed(2) + 'M') + "]";
    };
    ResMgr.instance = null;
    return ResMgr;
}());
exports.default = ResMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/SceneMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8337d/EvnBHjrW/BJTtgaeW', 'SceneMgr');
// Script/UIFrame/SceneMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var SysDefine_1 = require("./config/SysDefine");
var TipsMgr_1 = require("./TipsMgr");
var UIManager_1 = require("./UIManager");
var TAG = "SceneMgr";
var SceneMgr = /** @class */ (function () {
    function SceneMgr() {
        this._scenes = [];
        this._currScene = "";
    }
    SceneMgr.prototype.getCurrScene = function () {
        return UIManager_1.default.getInstance().getForm(this._currScene);
    };
    /** 打开一个场景 */
    SceneMgr.prototype.open = function (scenePath, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            var currScene, idx, com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._currScene == scenePath) {
                            cc.warn(TAG, "当前场景和需要open的场景是同一个");
                            return [2 /*return*/, null];
                        }
                        return [4 /*yield*/, this.openLoading(formData === null || formData === void 0 ? void 0 : formData.loadingForm, params, formData)];
                    case 1:
                        _a.sent();
                        if (!(this._scenes.length > 0)) return [3 /*break*/, 3];
                        currScene = this._scenes[this._scenes.length - 1];
                        return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(currScene)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        idx = this._scenes.indexOf(scenePath);
                        if (idx == -1) {
                            this._scenes.push(scenePath);
                        }
                        else {
                            this._scenes.length = idx + 1;
                        }
                        this._currScene = scenePath;
                        return [4 /*yield*/, UIManager_1.default.getInstance().openForm(scenePath, params, formData)];
                    case 4:
                        com = _a.sent();
                        return [4 /*yield*/, this.closeLoading(formData === null || formData === void 0 ? void 0 : formData.loadingForm)];
                    case 5:
                        _a.sent();
                        return [2 /*return*/, com];
                }
            });
        });
    };
    /** 回退一个场景 */
    SceneMgr.prototype.back = function (params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            var currScene;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._scenes.length <= 1) {
                            cc.warn(TAG, "已经是最后一个场景了, 无处可退");
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, this.openLoading(formData === null || formData === void 0 ? void 0 : formData.loadingForm, params, formData)];
                    case 1:
                        _a.sent();
                        currScene = this._scenes.pop();
                        return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(currScene)];
                    case 2:
                        _a.sent();
                        this._currScene = this._scenes[this._scenes.length - 1];
                        return [4 /*yield*/, UIManager_1.default.getInstance().openForm(this._currScene, params, formData)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.closeLoading(formData === null || formData === void 0 ? void 0 : formData.loadingForm)];
                    case 4:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SceneMgr.prototype.close = function (scenePath) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                com = UIManager_1.default.getInstance().getForm(scenePath);
                if (com) {
                    return [2 /*return*/, UIManager_1.default.getInstance().closeForm(scenePath)];
                }
                return [2 /*return*/];
            });
        });
    };
    SceneMgr.prototype.openLoading = function (formConfig, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            var form;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        form = formConfig || SysDefine_1.SysDefine.defaultLoadingForm;
                        if (!form)
                            return [2 /*return*/];
                        return [4 /*yield*/, TipsMgr_1.default.open(form.prefabUrl, params, formData)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SceneMgr.prototype.closeLoading = function (formConfig) {
        return __awaiter(this, void 0, void 0, function () {
            var form;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        form = formConfig || SysDefine_1.SysDefine.defaultLoadingForm;
                        if (!form)
                            return [2 /*return*/];
                        return [4 /*yield*/, TipsMgr_1.default.close(form.prefabUrl)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return SceneMgr;
}());
exports.default = new SceneMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9TY2VuZU1nci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdEQUErQztBQUUvQyxxQ0FBZ0M7QUFDaEMseUNBQW9DO0FBRXBDLElBQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQztBQUN2QjtJQUFBO1FBQ1ksWUFBTyxHQUFrQixFQUFFLENBQUM7UUFDNUIsZUFBVSxHQUFXLEVBQUUsQ0FBQztJQW1FcEMsQ0FBQztJQWpFVSwrQkFBWSxHQUFuQjtRQUNJLE9BQU8sbUJBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxhQUFhO0lBQ0EsdUJBQUksR0FBakIsVUFBa0IsU0FBaUIsRUFBRSxNQUFZLEVBQUUsUUFBb0I7Ozs7Ozt3QkFDbkUsSUFBRyxJQUFJLENBQUMsVUFBVSxJQUFJLFNBQVMsRUFBRTs0QkFDN0IsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLENBQUMsQ0FBQzs0QkFDbkMsc0JBQU8sSUFBSSxFQUFDO3lCQUNmO3dCQUVELHFCQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLEVBQUE7O3dCQUEvRCxTQUErRCxDQUFDOzZCQUU3RCxDQUFBLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQSxFQUF2Qix3QkFBdUI7d0JBQ2xCLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNwRCxxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBQTs7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LElBQUcsQ0FBQyxJQUFJOzRCQUFFLHNCQUFRO3dCQUNsQixxQkFBTSxpQkFBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUE7O3dCQUFuQyxTQUFtQyxDQUFDOzs7OztLQUN2QztJQUVMLGVBQUM7QUFBRCxDQXJFQSxBQXFFQyxJQUFBO0FBRUQsa0JBQWUsSUFBSSxRQUFRLEVBQUUsQ0FBQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5c0RlZmluZSB9IGZyb20gXCIuL2NvbmZpZy9TeXNEZWZpbmVcIjtcbmltcG9ydCB7IElGb3JtQ29uZmlnLCBJRm9ybURhdGEgfSBmcm9tIFwiLi9TdHJ1Y3RcIjtcbmltcG9ydCBUaXBzTWdyIGZyb20gXCIuL1RpcHNNZ3JcIjtcbmltcG9ydCBVSU1hbmFnZXIgZnJvbSBcIi4vVUlNYW5hZ2VyXCI7XG5cbmNvbnN0IFRBRyA9IFwiU2NlbmVNZ3JcIjtcbmNsYXNzIFNjZW5lTWdyIHtcbiAgICBwcml2YXRlIF9zY2VuZXM6IEFycmF5PHN0cmluZz4gPSBbXTtcbiAgICBwcml2YXRlIF9jdXJyU2NlbmU6IHN0cmluZyA9IFwiXCI7XG5cbiAgICBwdWJsaWMgZ2V0Q3VyclNjZW5lKCkge1xuICAgICAgICByZXR1cm4gVUlNYW5hZ2VyLmdldEluc3RhbmNlKCkuZ2V0Rm9ybSh0aGlzLl9jdXJyU2NlbmUpO1xuICAgIH1cblxuICAgIC8qKiDmiZPlvIDkuIDkuKrlnLrmma8gKi9cbiAgICBwdWJsaWMgYXN5bmMgb3BlbihzY2VuZVBhdGg6IHN0cmluZywgcGFyYW1zPzogYW55LCBmb3JtRGF0YT86IElGb3JtRGF0YSkge1xuICAgICAgICBpZih0aGlzLl9jdXJyU2NlbmUgPT0gc2NlbmVQYXRoKSB7XG4gICAgICAgICAgICBjYy53YXJuKFRBRywgXCLlvZPliY3lnLrmma/lkozpnIDopoFvcGVu55qE5Zy65pmv5piv5ZCM5LiA5LiqXCIpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCB0aGlzLm9wZW5Mb2FkaW5nKGZvcm1EYXRhPy5sb2FkaW5nRm9ybSwgcGFyYW1zLCBmb3JtRGF0YSk7XG5cbiAgICAgICAgaWYodGhpcy5fc2NlbmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGxldCBjdXJyU2NlbmUgPSB0aGlzLl9zY2VuZXNbdGhpcy5fc2NlbmVzLmxlbmd0aC0xXTtcbiAgICAgICAgICAgIGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLmNsb3NlRm9ybShjdXJyU2NlbmUpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGlkeCA9IHRoaXMuX3NjZW5lcy5pbmRleE9mKHNjZW5lUGF0aCk7XG4gICAgICAgIGlmKGlkeCA9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5fc2NlbmVzLnB1c2goc2NlbmVQYXRoKTtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fc2NlbmVzLmxlbmd0aCA9IGlkeCArIDE7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jdXJyU2NlbmUgPSBzY2VuZVBhdGg7XG5cbiAgICAgICAgbGV0IGNvbSA9IGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLm9wZW5Gb3JtKHNjZW5lUGF0aCwgcGFyYW1zLCBmb3JtRGF0YSk7XG4gICAgICAgIGF3YWl0IHRoaXMuY2xvc2VMb2FkaW5nKGZvcm1EYXRhPy5sb2FkaW5nRm9ybSk7XG4gICAgICAgIHJldHVybiBjb207XG4gICAgfVxuXG4gICAgLyoqIOWbnumAgOS4gOS4quWcuuaZryAqL1xuICAgIHB1YmxpYyBhc3luYyBiYWNrKHBhcmFtcz86IGFueSwgZm9ybURhdGE/OiBJRm9ybURhdGEpIHtcbiAgICAgICAgaWYodGhpcy5fc2NlbmVzLmxlbmd0aCA8PSAxKSB7XG4gICAgICAgICAgICBjYy53YXJuKFRBRywgXCLlt7Lnu4/mmK/mnIDlkI7kuIDkuKrlnLrmma/kuoYsIOaXoOWkhOWPr+mAgFwiKTtcbiAgICAgICAgICAgIHJldHVybiA7XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgdGhpcy5vcGVuTG9hZGluZyhmb3JtRGF0YT8ubG9hZGluZ0Zvcm0sIHBhcmFtcywgZm9ybURhdGEpO1xuICAgICAgICBsZXQgY3VyclNjZW5lID0gdGhpcy5fc2NlbmVzLnBvcCgpO1xuICAgICAgICBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5jbG9zZUZvcm0oY3VyclNjZW5lKTtcblxuICAgICAgICB0aGlzLl9jdXJyU2NlbmUgPSB0aGlzLl9zY2VuZXNbdGhpcy5fc2NlbmVzLmxlbmd0aC0xXTtcbiAgICAgICAgYXdhaXQgVUlNYW5hZ2VyLmdldEluc3RhbmNlKCkub3BlbkZvcm0odGhpcy5fY3VyclNjZW5lLCBwYXJhbXMsIGZvcm1EYXRhKTtcbiAgICAgICAgYXdhaXQgdGhpcy5jbG9zZUxvYWRpbmcoZm9ybURhdGE/LmxvYWRpbmdGb3JtKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2Uoc2NlbmVQYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IGNvbSA9IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLmdldEZvcm0oc2NlbmVQYXRoKTtcbiAgICAgICAgaWYoY29tKSB7XG4gICAgICAgICAgICByZXR1cm4gVUlNYW5hZ2VyLmdldEluc3RhbmNlKCkuY2xvc2VGb3JtKHNjZW5lUGF0aCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGFzeW5jIG9wZW5Mb2FkaW5nKGZvcm1Db25maWc6IElGb3JtQ29uZmlnLCBwYXJhbXM6IGFueSwgZm9ybURhdGE6IElGb3JtRGF0YSkge1xuICAgICAgICBsZXQgZm9ybSA9IGZvcm1Db25maWcgfHwgU3lzRGVmaW5lLmRlZmF1bHRMb2FkaW5nRm9ybTtcbiAgICAgICAgaWYoIWZvcm0pIHJldHVybiA7XG4gICAgICAgIGF3YWl0IFRpcHNNZ3Iub3Blbihmb3JtLnByZWZhYlVybCwgcGFyYW1zLCBmb3JtRGF0YSk7XG4gICAgfVxuICAgIHByaXZhdGUgYXN5bmMgY2xvc2VMb2FkaW5nKGZvcm1Db25maWc6IElGb3JtQ29uZmlnKSB7XG4gICAgICAgIGxldCBmb3JtID0gZm9ybUNvbmZpZyB8fCBTeXNEZWZpbmUuZGVmYXVsdExvYWRpbmdGb3JtO1xuICAgICAgICBpZighZm9ybSkgcmV0dXJuIDtcbiAgICAgICAgYXdhaXQgVGlwc01nci5jbG9zZShmb3JtLnByZWZhYlVybCk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBTY2VuZU1ncigpOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/TipsMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6203812cXtNHJ8vqmVbOWHK', 'TipsMgr');
// Script/UIFrame/TipsMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIManager_1 = require("./UIManager");
var TipsMgr = /** @class */ (function () {
    function TipsMgr() {
    }
    TipsMgr.prototype.open = function (url, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().openForm(url, params, formData)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    TipsMgr.prototype.close = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(url)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return TipsMgr;
}());
exports.default = new TipsMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9UaXBzTWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EseUNBQW9DO0FBRXBDO0lBQUE7SUFPQSxDQUFDO0lBTmdCLHNCQUFJLEdBQWpCLFVBQWtCLEdBQVcsRUFBRSxNQUFZLEVBQUUsUUFBb0I7Ozs7NEJBQ3RELHFCQUFNLG1CQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLEVBQUE7NEJBQXBFLHNCQUFPLFNBQTZELEVBQUM7Ozs7S0FDeEU7SUFDWSx1QkFBSyxHQUFsQixVQUFtQixHQUFXOzs7OzRCQUNuQixxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBQTs0QkFBbkQsc0JBQU8sU0FBNEMsRUFBQzs7OztLQUN2RDtJQUNMLGNBQUM7QUFBRCxDQVBBLEFBT0MsSUFBQTtBQUVELGtCQUFlLElBQUksT0FBTyxFQUFFLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJRm9ybURhdGEgfSBmcm9tIFwiLi9TdHJ1Y3RcIjtcbmltcG9ydCBVSU1hbmFnZXIgZnJvbSBcIi4vVUlNYW5hZ2VyXCI7XG5cbmNsYXNzIFRpcHNNZ3Ige1xuICAgIHB1YmxpYyBhc3luYyBvcGVuKHVybDogc3RyaW5nLCBwYXJhbXM/OiBhbnksIGZvcm1EYXRhPzogSUZvcm1EYXRhKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5vcGVuRm9ybSh1cmwsIHBhcmFtcywgZm9ybURhdGEpO1xuICAgIH1cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2UodXJsOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLmNsb3NlRm9ybSh1cmwpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IFRpcHNNZ3IoKTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/SoundMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '712729Tx0JBoI/gunNGv3kP', 'SoundMgr');
// Script/UIFrame/SoundMgr.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var CocosHelper_1 = require("./CocosHelper");
var SysDefine_1 = require("./config/SysDefine");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SoundMgr = /** @class */ (function (_super) {
    __extends(SoundMgr, _super);
    function SoundMgr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.audioCache = cc.js.createMap();
        _this.currEffectId = -1;
        _this.currMusicId = -1;
        /** volume */
        _this.volume = new Volume();
        return _this;
        // update (dt) {}
    }
    Object.defineProperty(SoundMgr, "inst", {
        get: function () {
            if (this._inst == null) {
                this._inst = cc.find(SysDefine_1.SysDefine.SYS_UIROOT_NAME).addComponent(this);
            }
            return this._inst;
        },
        enumerable: false,
        configurable: true
    });
    SoundMgr.prototype.onLoad = function () {
        var volume = this.getVolumeToLocal();
        if (volume) {
            this.volume = volume;
        }
        else {
            this.volume.musicVolume = 1;
            this.volume.effectVolume = 1;
        }
        this.setVolumeToLocal();
        cc.game.on(cc.game.EVENT_HIDE, function () {
            cc.audioEngine.pauseAll();
        }, this);
        cc.game.on(cc.game.EVENT_SHOW, function () {
            cc.audioEngine.resumeAll();
        }, this);
    };
    SoundMgr.prototype.getVolume = function () {
        return this.volume;
    };
    SoundMgr.prototype.start = function () {
    };
    /**  */
    SoundMgr.prototype.setMusicVolume = function (musicVolume) {
        this.volume.musicVolume = musicVolume;
        this.setVolumeToLocal();
    };
    SoundMgr.prototype.setEffectVolume = function (effectVolume) {
        this.volume.effectVolume = effectVolume;
        this.setVolumeToLocal();
    };
    /** 播放背景音乐 */
    SoundMgr.prototype.playMusic = function (url, loop) {
        if (loop === void 0) { loop = true; }
        return __awaiter(this, void 0, void 0, function () {
            var sound;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!url || url === '')
                            return [2 /*return*/];
                        if (this.audioCache[url]) {
                            cc.audioEngine.playMusic(this.audioCache[url], loop);
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, CocosHelper_1.default.loadResSync(url, cc.AudioClip)];
                    case 1:
                        sound = _a.sent();
                        this.audioCache[url] = sound;
                        this.currMusicId = cc.audioEngine.playMusic(sound, loop);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 播放音效 */
    SoundMgr.prototype.playEffect = function (url, loop) {
        if (loop === void 0) { loop = false; }
        return __awaiter(this, void 0, void 0, function () {
            var sound;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!url || url === '')
                            return [2 /*return*/];
                        if (this.audioCache[url]) {
                            cc.audioEngine.playEffect(this.audioCache[url], loop);
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, CocosHelper_1.default.loadResSync(url, cc.AudioClip)];
                    case 1:
                        sound = _a.sent();
                        this.audioCache[url] = sound;
                        this.currEffectId = cc.audioEngine.playEffect(sound, loop);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 从本地读取 */
    SoundMgr.prototype.getVolumeToLocal = function () {
        var objStr = cc.sys.localStorage.getItem("Volume_For_Creator");
        if (!objStr) {
            return null;
        }
        return JSON.parse(objStr);
    };
    /** 设置音量 */
    SoundMgr.prototype.setVolumeToLocal = function () {
        cc.audioEngine.setMusicVolume(this.volume.musicVolume);
        cc.audioEngine.setEffectsVolume(this.volume.effectVolume);
        cc.sys.localStorage.setItem("Volume_For_Creator", JSON.stringify(this.volume));
    };
    SoundMgr.prototype.setEffectActive = function (active, id) {
        if (id === void 0) { id = -1; }
        if (active) {
            cc.audioEngine.stop(id < 0 ? this.currEffectId : id);
        }
        else {
            cc.audioEngine.resume(id < 0 ? this.currEffectId : id);
        }
    };
    SoundMgr._inst = null; // 单例
    SoundMgr = __decorate([
        ccclass
    ], SoundMgr);
    return SoundMgr;
}(cc.Component));
exports.default = SoundMgr;
var Volume = /** @class */ (function () {
    function Volume() {
    }
    return Volume;
}());

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/FixedMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6d5adVytGZORIxY7M3VpixZ', 'FixedMgr');
// Script/UIFrame/FixedMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIManager_1 = require("./UIManager");
var FixedMgr = /** @class */ (function () {
    function FixedMgr() {
    }
    FixedMgr.prototype.open = function (url, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().openForm(url, params, formData)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    FixedMgr.prototype.close = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(url)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return FixedMgr;
}());
exports.default = new FixedMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9GaXhlZE1nci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHlDQUFvQztBQUVwQztJQUFBO0lBT0EsQ0FBQztJQU5nQix1QkFBSSxHQUFqQixVQUFrQixHQUFXLEVBQUUsTUFBWSxFQUFFLFFBQW9COzs7OzRCQUN0RCxxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxFQUFBOzRCQUFwRSxzQkFBTyxTQUE2RCxFQUFDOzs7O0tBQ3hFO0lBQ1ksd0JBQUssR0FBbEIsVUFBbUIsR0FBVzs7Ozs0QkFDbkIscUJBQU0sbUJBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUE7NEJBQW5ELHNCQUFPLFNBQTRDLEVBQUM7Ozs7S0FDdkQ7SUFDTCxlQUFDO0FBQUQsQ0FQQSxBQU9DLElBQUE7QUFFRCxrQkFBZSxJQUFJLFFBQVEsRUFBRSxDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUZvcm1EYXRhIH0gZnJvbSBcIi4vU3RydWN0XCI7XG5pbXBvcnQgVUlNYW5hZ2VyIGZyb20gXCIuL1VJTWFuYWdlclwiO1xuXG5jbGFzcyBGaXhlZE1nciB7XG4gICAgcHVibGljIGFzeW5jIG9wZW4odXJsOiBzdHJpbmcsIHBhcmFtcz86IGFueSwgZm9ybURhdGE/OiBJRm9ybURhdGEpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLm9wZW5Gb3JtKHVybCwgcGFyYW1zLCBmb3JtRGF0YSk7XG4gICAgfVxuICAgIHB1YmxpYyBhc3luYyBjbG9zZSh1cmw6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gYXdhaXQgVUlNYW5hZ2VyLmdldEluc3RhbmNlKCkuY2xvc2VGb3JtKHVybCk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgRml4ZWRNZ3IoKTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/EventType.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd91c3NJBEVLOImFlZf1j8Q7', 'EventType');
// Script/UIFrame/EventType.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventType = void 0;
/** 事件名称 */
var EventType;
(function (EventType) {
    EventType["GameShow"] = "GameShow";
    EventType["GameHide"] = "GameHide";
    EventType["WindowClosed"] = "WindowClosed";
    EventType["FormClosed"] = "FormClosed";
})(EventType = exports.EventType || (exports.EventType = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9FdmVudFR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsV0FBVztBQUNYLElBQVksU0FNWDtBQU5ELFdBQVksU0FBUztJQUNqQixrQ0FBcUIsQ0FBQTtJQUNyQixrQ0FBcUIsQ0FBQTtJQUVyQiwwQ0FBNkIsQ0FBQTtJQUM3QixzQ0FBeUIsQ0FBQTtBQUM3QixDQUFDLEVBTlcsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFNcEIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiog5LqL5Lu25ZCN56ewICovXG5leHBvcnQgZW51bSBFdmVudFR5cGUge1xuICAgIEdhbWVTaG93ID0gXCJHYW1lU2hvd1wiLFxuICAgIEdhbWVIaWRlID0gXCJHYW1lSGlkZVwiLFxuXG4gICAgV2luZG93Q2xvc2VkID0gXCJXaW5kb3dDbG9zZWRcIixcbiAgICBGb3JtQ2xvc2VkID0gXCJGb3JtQ2xvc2VkXCIsXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/UIBase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ba19xmlHJNg4x0oLeSB7Ay', 'UIBase');
// Script/UIFrame/UIBase.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIManager_1 = require("./UIManager");
var AdapterMgr_1 = require("./AdapterMgr");
var ResMgr_1 = require("./ResMgr");
var FormMgr_1 = require("./FormMgr");
var UIBase = /** @class */ (function (_super) {
    __extends(UIBase, _super);
    function UIBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 窗体id,该窗体的唯一标示(请不要对这个值进行赋值操作, 内部已经实现了对应的赋值) */
        _this.fid = '';
        /** 窗体数据 */
        _this.formData = null;
        /** 窗体类型 */
        _this.formType = null;
        /** 关闭类型, 关闭窗口后销毁, 会将其依赖的资源一并销毁, 采用了引用计数的管理, 不用担心会影响其他窗体 */
        _this.closeType = null;
        /** 是否已经调用过preinit方法 */
        _this._inited = false;
        _this.view = null;
        _this.model = null;
        /** 设置是否挡住触摸事件 */
        _this._blocker = null;
        return _this;
    }
    ;
    UIBase.open = function (param, formData) {
        var uiconfig = this['UIConfig'];
        if (!uiconfig) {
            cc.warn("sorry UIConfig is null, please check UIConfig");
            return;
        }
        FormMgr_1.default.open(uiconfig, param, formData);
    };
    UIBase.close = function () {
        FormMgr_1.default.close(this['UIConfig']);
    };
    /** 预先初始化 */
    UIBase.prototype._preInit = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var errorMsg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._inited)
                            return [2 /*return*/];
                        this._inited = true;
                        this.view = this.getComponent(this.node.name + "_Auto");
                        return [4 /*yield*/, this.load(params)];
                    case 1:
                        errorMsg = _a.sent();
                        if (errorMsg) {
                            cc.error(errorMsg);
                            this.closeSelf();
                            return [2 /*return*/];
                        }
                        this.onInit(params);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 可以在这里进行一些资源的加载, 具体实现可以看test下的代码 */
    UIBase.prototype.load = function (params) {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, null];
            });
        });
    };
    /** 初始化, 只调用一次 */
    UIBase.prototype.onInit = function (params) { };
    // 显示回调
    UIBase.prototype.onShow = function (params) { };
    // 在显示动画结束后回调
    UIBase.prototype.onAfterShow = function (params) { };
    // 隐藏回调
    UIBase.prototype.onHide = function () { };
    // 在隐藏动画结束后回调
    UIBase.prototype.onAfterHide = function () { };
    // 关闭自己
    UIBase.prototype.closeSelf = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(this.fid)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * 弹窗动画
     */
    UIBase.prototype.showEffect = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    UIBase.prototype.hideEffect = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    UIBase.prototype.setBlockInput = function (block) {
        if (!this._blocker) {
            var node = new cc.Node('block_input_events');
            this._blocker = node.addComponent(cc.BlockInputEvents);
            this._blocker.node.setContentSize(AdapterMgr_1.default.inst.visibleSize);
            this.node.addChild(this._blocker.node, cc.macro.MAX_ZINDEX);
        }
        this._blocker.node.active = block;
    };
    UIBase.prototype.loadRes = function (url, type) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, ResMgr_1.default.inst.loadDynamicRes(url, type, this.fid)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return UIBase;
}(cc.Component));
exports.default = UIBase;
//@ts-ignore
cc.UIBase = UIBase;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9VSUJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUNBQW9DO0FBR3BDLDJDQUFzQztBQUN0QyxtQ0FBOEI7QUFDOUIscUNBQWdDO0FBRWhDO0lBQW9DLDBCQUFZO0lBQWhEO1FBQUEscUVBcUZDO1FBcEZHLGlEQUFpRDtRQUMxQyxTQUFHLEdBQVcsRUFBRSxDQUFDO1FBQ3hCLFdBQVc7UUFDSixjQUFRLEdBQXFCLElBQUksQ0FBQztRQUN6QyxXQUFXO1FBQ0osY0FBUSxHQUFvQixJQUFJLENBQUM7UUFDeEMsMkRBQTJEO1FBQ3BELGVBQVMsR0FBc0IsSUFBSSxDQUFDO1FBQzNDLHVCQUF1QjtRQUNmLGFBQU8sR0FBRyxLQUFLLENBQUM7UUFFakIsVUFBSSxHQUFpQixJQUFJLENBQUM7UUE2QmpDLFdBQUssR0FBUSxJQUFJLENBQUM7UUE2QmxCLGlCQUFpQjtRQUNULGNBQVEsR0FBd0IsSUFBSSxDQUFDOztJQWNqRCxDQUFDO0lBN0U4QyxDQUFDO0lBTTlCLFdBQUksR0FBbEIsVUFBbUIsS0FBVyxFQUFFLFFBQW9CO1FBQ2hELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNoQyxJQUFHLENBQUMsUUFBUSxFQUFFO1lBQ1YsRUFBRSxDQUFDLElBQUksQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO1lBQ3pELE9BQVE7U0FDWDtRQUNELGlCQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUNhLFlBQUssR0FBbkI7UUFDSSxpQkFBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsWUFBWTtJQUNDLHlCQUFRLEdBQXJCLFVBQXNCLE1BQVc7Ozs7Ozt3QkFDN0IsSUFBRyxJQUFJLENBQUMsT0FBTzs0QkFBRSxzQkFBUTt3QkFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7d0JBQ3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksVUFBTyxDQUFDLENBQUM7d0JBRXpDLHFCQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUE7O3dCQUFsQyxRQUFRLEdBQUcsU0FBdUI7d0JBQ3RDLElBQUcsUUFBUSxFQUFFOzRCQUNULEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7NEJBQ25CLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQzs0QkFDakIsc0JBQVE7eUJBQ1g7d0JBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7Ozs7S0FDdkI7SUFJRCxzQ0FBc0M7SUFDekIscUJBQUksR0FBakIsVUFBa0IsTUFBVzt1Q0FBRyxPQUFPOztnQkFDbkMsc0JBQU8sSUFBSSxFQUFDOzs7S0FDZjtJQUVELGlCQUFpQjtJQUNWLHVCQUFNLEdBQWIsVUFBYyxNQUFXLElBQUcsQ0FBQztJQUM3QixPQUFPO0lBQ0EsdUJBQU0sR0FBYixVQUFjLE1BQVcsSUFBRyxDQUFDO0lBQzdCLGFBQWE7SUFDTiw0QkFBVyxHQUFsQixVQUFtQixNQUFXLElBQUcsQ0FBQztJQUNsQyxPQUFPO0lBQ0EsdUJBQU0sR0FBYixjQUFpQixDQUFDO0lBQ2xCLGFBQWE7SUFDTiw0QkFBVyxHQUFsQixjQUFzQixDQUFDO0lBRXZCLE9BQU87SUFDTSwwQkFBUyxHQUF0Qjt1Q0FBMEIsT0FBTzs7OzRCQUN2QixxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUE7NEJBQXhELHNCQUFPLFNBQWlELEVBQUM7Ozs7S0FDM0Q7SUFFRDs7T0FFRztJQUNVLDJCQUFVLEdBQXZCOzs7O0tBQTRCO0lBQ2YsMkJBQVUsR0FBdkI7Ozs7S0FBNEI7SUFJckIsOEJBQWEsR0FBcEIsVUFBcUIsS0FBYztRQUMvQixJQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRztZQUNoQixJQUFJLElBQUksR0FBRyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDdkQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQy9ELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDL0Q7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFFWSx3QkFBTyxHQUFwQixVQUFxQixHQUFXLEVBQUUsSUFBc0I7Ozs7NEJBQzdDLHFCQUFNLGdCQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBQTs0QkFBNUQsc0JBQU8sU0FBcUQsRUFBQzs7OztLQUNoRTtJQUNMLGFBQUM7QUFBRCxDQXJGQSxBQXFGQyxDQXJGbUMsRUFBRSxDQUFDLFNBQVMsR0FxRi9DOztBQUVELFlBQVk7QUFDWixFQUFFLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSU1hbmFnZXIgZnJvbSBcIi4vVUlNYW5hZ2VyXCI7XG5pbXBvcnQgeyBGb3JtVHlwZSB9IGZyb20gXCIuL2NvbmZpZy9TeXNEZWZpbmVcIjtcbmltcG9ydCB7IEVDbG9zZVR5cGUsIElGb3JtRGF0YSB9IGZyb20gXCIuL1N0cnVjdFwiO1xuaW1wb3J0IEFkYXB0ZXJNZ3IgZnJvbSBcIi4vQWRhcHRlck1nclwiO1xuaW1wb3J0IFJlc01nciBmcm9tIFwiLi9SZXNNZ3JcIjtcbmltcG9ydCBGb3JtTWdyIGZyb20gXCIuL0Zvcm1NZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlCYXNlIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcbiAgICAvKiog56qX5L2TaWQs6K+l56qX5L2T55qE5ZSv5LiA5qCH56S6KOivt+S4jeimgeWvuei/meS4quWAvOi/m+ihjOi1i+WAvOaTjeS9nCwg5YaF6YOo5bey57uP5a6e546w5LqG5a+55bqU55qE6LWL5YC8KSAqL1xuICAgIHB1YmxpYyBmaWQ6IHN0cmluZyA9ICcnO1xuICAgIC8qKiDnqpfkvZPmlbDmja4gKi9cbiAgICBwdWJsaWMgZm9ybURhdGE6IElGb3JtRGF0YSB8IG51bGwgPSBudWxsO1xuICAgIC8qKiDnqpfkvZPnsbvlnosgKi9cbiAgICBwdWJsaWMgZm9ybVR5cGU6IEZvcm1UeXBlIHwgbnVsbCA9IG51bGw7XG4gICAgLyoqIOWFs+mXreexu+Weiywg5YWz6Zet56qX5Y+j5ZCO6ZSA5q+BLCDkvJrlsIblhbbkvp3otZbnmoTotYTmupDkuIDlubbplIDmr4EsIOmHh+eUqOS6huW8leeUqOiuoeaVsOeahOeuoeeQhiwg5LiN55So5ouF5b+D5Lya5b2x5ZON5YW25LuW56qX5L2TICovXG4gICAgcHVibGljIGNsb3NlVHlwZTogRUNsb3NlVHlwZSB8IG51bGwgPSBudWxsOztcbiAgICAvKiog5piv5ZCm5bey57uP6LCD55So6L+HcHJlaW5pdOaWueazlSAqL1xuICAgIHByaXZhdGUgX2luaXRlZCA9IGZhbHNlO1xuXG4gICAgcHVibGljIHZpZXc6IGNjLkNvbXBvbmVudCA9IG51bGw7XG5cbiAgICBwdWJsaWMgc3RhdGljIG9wZW4ocGFyYW0/OiBhbnksIGZvcm1EYXRhPzogSUZvcm1EYXRhKSB7XG4gICAgICAgIGxldCB1aWNvbmZpZyA9IHRoaXNbJ1VJQ29uZmlnJ107XG4gICAgICAgIGlmKCF1aWNvbmZpZykge1xuICAgICAgICAgICAgY2Mud2Fybihgc29ycnkgVUlDb25maWcgaXMgbnVsbCwgcGxlYXNlIGNoZWNrIFVJQ29uZmlnYCk7XG4gICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICB9XG4gICAgICAgIEZvcm1NZ3Iub3Blbih1aWNvbmZpZywgcGFyYW0sIGZvcm1EYXRhKTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBjbG9zZSgpIHtcbiAgICAgICAgRm9ybU1nci5jbG9zZSh0aGlzWydVSUNvbmZpZyddKTtcbiAgICB9XG5cbiAgICAvKiog6aKE5YWI5Yid5aeL5YyWICovXG4gICAgcHVibGljIGFzeW5jIF9wcmVJbml0KHBhcmFtczogYW55KSB7XG4gICAgICAgIGlmKHRoaXMuX2luaXRlZCkgcmV0dXJuIDtcbiAgICAgICAgdGhpcy5faW5pdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy52aWV3ID0gdGhpcy5nZXRDb21wb25lbnQoYCR7dGhpcy5ub2RlLm5hbWV9X0F1dG9gKTtcbiAgICAgICAgLy8g5Yqg6L296L+Z5LiqVUnkvp3otZbnmoTlhbbku5botYTmupBcbiAgICAgICAgbGV0IGVycm9yTXNnID0gYXdhaXQgdGhpcy5sb2FkKHBhcmFtcyk7XG4gICAgICAgIGlmKGVycm9yTXNnKSB7XG4gICAgICAgICAgICBjYy5lcnJvcihlcnJvck1zZyk7XG4gICAgICAgICAgICB0aGlzLmNsb3NlU2VsZigpO1xuICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uSW5pdChwYXJhbXMpO1xuICAgIH1cblxuICAgIG1vZGVsOiBhbnkgPSBudWxsOyBcblxuICAgIC8qKiDlj6/ku6XlnKjov5nph4zov5vooYzkuIDkupvotYTmupDnmoTliqDovb0sIOWFt+S9k+WunueOsOWPr+S7peeci3Rlc3TkuIvnmoTku6PnoIEgKi9cbiAgICBwdWJsaWMgYXN5bmMgbG9hZChwYXJhbXM6IGFueSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8qKiDliJ3lp4vljJYsIOWPquiwg+eUqOS4gOasoSAqL1xuICAgIHB1YmxpYyBvbkluaXQocGFyYW1zOiBhbnkpIHt9XG4gICAgLy8g5pi+56S65Zue6LCDXG4gICAgcHVibGljIG9uU2hvdyhwYXJhbXM6IGFueSkge31cbiAgICAvLyDlnKjmmL7npLrliqjnlLvnu5PmnZ/lkI7lm57osINcbiAgICBwdWJsaWMgb25BZnRlclNob3cocGFyYW1zOiBhbnkpIHt9XG4gICAgLy8g6ZqQ6JeP5Zue6LCDXG4gICAgcHVibGljIG9uSGlkZSgpIHt9ICAgIFxuICAgIC8vIOWcqOmakOiXj+WKqOeUu+e7k+adn+WQjuWbnuiwg1xuICAgIHB1YmxpYyBvbkFmdGVySGlkZSgpIHt9XG5cbiAgICAvLyDlhbPpl63oh6rlt7FcbiAgICBwdWJsaWMgYXN5bmMgY2xvc2VTZWxmKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgICAgIHJldHVybiBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5jbG9zZUZvcm0odGhpcy5maWQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOW8ueeql+WKqOeUu1xuICAgICAqL1xuICAgIHB1YmxpYyBhc3luYyBzaG93RWZmZWN0KCkge31cbiAgICBwdWJsaWMgYXN5bmMgaGlkZUVmZmVjdCgpIHt9XG5cbiAgICAvKiog6K6+572u5piv5ZCm5oyh5L2P6Kem5pG45LqL5Lu2ICovXG4gICAgcHJpdmF0ZSBfYmxvY2tlcjogY2MuQmxvY2tJbnB1dEV2ZW50cyA9IG51bGw7XG4gICAgcHVibGljIHNldEJsb2NrSW5wdXQoYmxvY2s6IGJvb2xlYW4pIHtcbiAgICAgICAgaWYoIXRoaXMuX2Jsb2NrZXIpICB7XG4gICAgICAgICAgICBsZXQgbm9kZSA9IG5ldyBjYy5Ob2RlKCdibG9ja19pbnB1dF9ldmVudHMnKTtcbiAgICAgICAgICAgIHRoaXMuX2Jsb2NrZXIgPSBub2RlLmFkZENvbXBvbmVudChjYy5CbG9ja0lucHV0RXZlbnRzKTtcbiAgICAgICAgICAgIHRoaXMuX2Jsb2NrZXIubm9kZS5zZXRDb250ZW50U2l6ZShBZGFwdGVyTWdyLmluc3QudmlzaWJsZVNpemUpO1xuICAgICAgICAgICAgdGhpcy5ub2RlLmFkZENoaWxkKHRoaXMuX2Jsb2NrZXIubm9kZSwgY2MubWFjcm8uTUFYX1pJTkRFWCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYmxvY2tlci5ub2RlLmFjdGl2ZSA9IGJsb2NrO1xuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBsb2FkUmVzKHVybDogc3RyaW5nLCB0eXBlPzogdHlwZW9mIGNjLkFzc2V0KSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBSZXNNZ3IuaW5zdC5sb2FkRHluYW1pY1Jlcyh1cmwsIHR5cGUsIHRoaXMuZmlkKTtcbiAgICB9XG59XG5cbi8vQHRzLWlnbm9yZVxuY2MuVUlCYXNlID0gVUlCYXNlOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/UIManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f18581vC/JBkoXNDtnFIDo4', 'UIManager');
// Script/UIFrame/UIManager.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIBase_1 = require("./UIBase");
var SysDefine_1 = require("./config/SysDefine");
var ResMgr_1 = require("./ResMgr");
var ModalMgr_1 = require("./ModalMgr");
var AdapterMgr_1 = require("./AdapterMgr");
var Scene_1 = require("../Scene/Scene");
var Struct_1 = require("./Struct");
var EventCenter_1 = require("./EventCenter");
var EventType_1 = require("./EventType");
var LRUCache_1 = require("../Common/Utils/LRUCache");
/**
 * @author honmono
 */
var UIManager = /** @class */ (function () {
    function UIManager() {
        this._UIROOT = null; // UIROOT
        this._ndScreen = null; // 全屏显示的UI 挂载结点
        this._ndFixed = null; // 固定显示的UI
        this._ndPopUp = null; // 弹出窗口
        this._ndTips = null; // 独立窗体
        this._windows = []; // 存储弹出的窗体
        this._allForms = cc.js.createMap(); // 所有已经挂载的窗体, 可能没有显示
        this._showingForms = cc.js.createMap(); // 正在显示的窗体
        this._tipsForms = cc.js.createMap(); // 独立窗体 独立于其他窗体, 不受其他窗体的影响
        this._loadingForm = cc.js.createMap(); // 正在加载的form
        this._LRUCache = new LRUCache_1.LRUCache(3); // LRU cache
    }
    UIManager.getInstance = function () {
        var _this = this;
        if (this.instance == null) {
            this.instance = new UIManager();
            var canvas = cc.director.getScene().getChildByName("Canvas");
            var scene = canvas.getChildByName(SysDefine_1.SysDefine.SYS_SCENE_NODE);
            if (!scene) {
                scene = new cc.Node(SysDefine_1.SysDefine.SYS_SCENE_NODE);
                scene.addComponent(Scene_1.default);
                scene.parent = canvas;
            }
            var UIROOT = this.instance._UIROOT = new cc.Node(SysDefine_1.SysDefine.SYS_UIROOT_NODE);
            scene.addChild(UIROOT);
            UIROOT.addChild(this.instance._ndScreen = new cc.Node(SysDefine_1.SysDefine.SYS_SCREEN_NODE));
            UIROOT.addChild(this.instance._ndFixed = new cc.Node(SysDefine_1.SysDefine.SYS_FIXED_NODE));
            UIROOT.addChild(this.instance._ndPopUp = new cc.Node(SysDefine_1.SysDefine.SYS_POPUP_NODE));
            UIROOT.addChild(this.instance._ndTips = new cc.Node(SysDefine_1.SysDefine.SYS_TOPTIPS_NODE));
            cc.director.once(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, function () {
                _this.instance = null;
            });
        }
        return this.instance;
    };
    /** 预加载UIForm */
    UIManager.prototype.loadUIForm = function (prefabPath) {
        return __awaiter(this, void 0, void 0, function () {
            var uiBase;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._loadForm(prefabPath)];
                    case 1:
                        uiBase = _a.sent();
                        if (!uiBase) {
                            console.warn(uiBase + "\u6CA1\u6709\u88AB\u6210\u529F\u52A0\u8F7D");
                            return [2 /*return*/, null];
                        }
                        return [2 /*return*/, uiBase];
                }
            });
        });
    };
    /**
     * 加载显示一个UIForm
     * @param prefabPath
     * @param params
     * @param formData
     * @returns
     */
    UIManager.prototype.openForm = function (prefabPath, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            var com, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!prefabPath || prefabPath.length <= 0) {
                            cc.warn(prefabPath + ", \u53C2\u6570\u9519\u8BEF");
                            return [2 /*return*/];
                        }
                        if (this.checkFormShowing(prefabPath)) {
                            cc.warn(prefabPath + ", \u7A97\u4F53\u6B63\u5728\u663E\u793A\u4E2D");
                            return [2 /*return*/, null];
                        }
                        return [4 /*yield*/, this._loadForm(prefabPath)];
                    case 1:
                        com = _b.sent();
                        if (!com) {
                            cc.warn(prefabPath + " \u52A0\u8F7D\u5931\u8D25\u4E86!");
                            return [2 /*return*/, null];
                        }
                        // 初始化窗体名称
                        com.fid = prefabPath;
                        com.formData = formData;
                        _a = com.formType;
                        switch (_a) {
                            case SysDefine_1.FormType.Screen: return [3 /*break*/, 2];
                            case SysDefine_1.FormType.Fixed: return [3 /*break*/, 4];
                            case SysDefine_1.FormType.Window: return [3 /*break*/, 6];
                            case SysDefine_1.FormType.Tips: return [3 /*break*/, 8];
                        }
                        return [3 /*break*/, 10];
                    case 2: return [4 /*yield*/, this.enterToScreen(com.fid, params)];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 10];
                    case 4: return [4 /*yield*/, this.enterToFixed(com.fid, params)];
                    case 5:
                        _b.sent();
                        return [3 /*break*/, 10];
                    case 6: return [4 /*yield*/, this.enterToPopup(com.fid, params)];
                    case 7:
                        _b.sent();
                        return [3 /*break*/, 10];
                    case 8: // 独立显示
                    return [4 /*yield*/, this.enterToTips(com.fid, params)];
                    case 9:
                        _b.sent();
                        return [3 /*break*/, 10];
                    case 10:
                        // 如果这个窗体在lru中存在, 那么立即删除它
                        if (com.closeType === Struct_1.ECloseType.LRU) {
                            this._LRUCache.remove(com.fid);
                        }
                        return [2 /*return*/, com];
                }
            });
        });
    };
    /**
     * 重要方法 关闭一个UIForm
     * @param prefabPath
     */
    UIManager.prototype.closeForm = function (prefabPath) {
        return __awaiter(this, void 0, void 0, function () {
            var com, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!prefabPath || prefabPath.length <= 0) {
                            cc.warn(prefabPath + ", \u53C2\u6570\u9519\u8BEF");
                            return [2 /*return*/];
                        }
                        ;
                        com = this._allForms[prefabPath];
                        if (!com)
                            return [2 /*return*/, false];
                        _a = com.formType;
                        switch (_a) {
                            case SysDefine_1.FormType.Screen: return [3 /*break*/, 1];
                            case SysDefine_1.FormType.Fixed: return [3 /*break*/, 3];
                            case SysDefine_1.FormType.Window: return [3 /*break*/, 5];
                            case SysDefine_1.FormType.Tips: return [3 /*break*/, 7];
                        }
                        return [3 /*break*/, 9];
                    case 1: return [4 /*yield*/, this.exitToScreen(prefabPath)];
                    case 2:
                        _b.sent();
                        return [3 /*break*/, 9];
                    case 3: // 普通模式显示
                    return [4 /*yield*/, this.exitToFixed(prefabPath)];
                    case 4:
                        _b.sent();
                        return [3 /*break*/, 9];
                    case 5: return [4 /*yield*/, this.exitToPopup(prefabPath)];
                    case 6:
                        _b.sent();
                        EventCenter_1.EventCenter.emit(EventType_1.EventType.WindowClosed, prefabPath);
                        return [3 /*break*/, 9];
                    case 7: return [4 /*yield*/, this.exitToTips(prefabPath)];
                    case 8:
                        _b.sent();
                        return [3 /*break*/, 9];
                    case 9:
                        EventCenter_1.EventCenter.emit(EventType_1.EventType.FormClosed, prefabPath);
                        if (com.formData) {
                            com.formData.onClose && com.formData.onClose();
                        }
                        // 根据closeType 处理
                        switch (com.closeType) {
                            case Struct_1.ECloseType.CloseAndDestory:
                                this.destoryForm(com);
                                break;
                            case Struct_1.ECloseType.LRU:
                                this.putLRUCache(com);
                                break;
                        }
                        return [2 /*return*/, true];
                }
            });
        });
    };
    /**
     * 从窗口缓存中加载(如果没有就会在load加载), 并挂载到结点上
     */
    UIManager.prototype._loadForm = function (prefabPath) {
        return __awaiter(this, void 0, Promise, function () {
            var com;
            var _this = this;
            return __generator(this, function (_a) {
                com = this._allForms[prefabPath];
                if (com)
                    return [2 /*return*/, com];
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        if (_this._loadingForm[prefabPath]) {
                            _this._loadingForm[prefabPath].push(resolve);
                            return;
                        }
                        _this._loadingForm[prefabPath] = [resolve];
                        _this._doLoadUIForm(prefabPath).then(function (com) {
                            for (var _i = 0, _a = _this._loadingForm[prefabPath]; _i < _a.length; _i++) {
                                var func = _a[_i];
                                func(com);
                            }
                            _this._loadingForm[prefabPath] = null;
                            delete _this._loadingForm[prefabPath];
                        });
                    })];
            });
        });
    };
    /**
     * @param prefabPath
     */
    UIManager.prototype._doLoadUIForm = function (prefabPath) {
        return __awaiter(this, void 0, void 0, function () {
            var prefab, node, com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, ResMgr_1.default.inst.loadFormPrefab(prefabPath)];
                    case 1:
                        prefab = _a.sent();
                        node = cc.instantiate(prefab);
                        com = node.getComponent(UIBase_1.default);
                        if (!com) {
                            cc.warn(prefabPath + " \u7ED3\u70B9\u6CA1\u6709\u7ED1\u5B9AUIBase");
                            return [2 /*return*/, null];
                        }
                        node.active = false; // 避免baseCom调用了onload方法
                        switch (com.formType) {
                            case SysDefine_1.FormType.Screen:
                                this._ndScreen.addChild(node);
                                break;
                            case SysDefine_1.FormType.Fixed:
                                this._ndFixed.addChild(node);
                                break;
                            case SysDefine_1.FormType.Window:
                                this._ndPopUp.addChild(node);
                                break;
                            case SysDefine_1.FormType.Tips:
                                this._ndTips.addChild(node);
                                break;
                        }
                        this._allForms[prefabPath] = com;
                        return [2 /*return*/, com];
                }
            });
        });
    };
    /** 添加到screen中 */
    UIManager.prototype.enterToScreen = function (fid, params) {
        return __awaiter(this, void 0, void 0, function () {
            var arr, key, com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        arr = [];
                        for (key in this._showingForms) {
                            arr.push(this._showingForms[key].closeSelf());
                        }
                        return [4 /*yield*/, Promise.all(arr)];
                    case 1:
                        _a.sent();
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        this._showingForms[fid] = com;
                        AdapterMgr_1.default.inst.adapteByType(AdapterMgr_1.AdapterType.StretchHeight | AdapterMgr_1.AdapterType.StretchWidth, com.node);
                        return [4 /*yield*/, com._preInit(params)];
                    case 2:
                        _a.sent();
                        com.onShow(params);
                        return [4 /*yield*/, this.showEffect(com)];
                    case 3:
                        _a.sent();
                        com.onAfterShow(params);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 添加到Fixed中 */
    UIManager.prototype.enterToFixed = function (fid, params) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        return [4 /*yield*/, com._preInit(params)];
                    case 1:
                        _a.sent();
                        com.onShow(params);
                        this._showingForms[fid] = com;
                        return [4 /*yield*/, this.showEffect(com)];
                    case 2:
                        _a.sent();
                        com.onAfterShow(params);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 添加到popup中 */
    UIManager.prototype.enterToPopup = function (fid, params) {
        return __awaiter(this, void 0, void 0, function () {
            var com, i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        return [4 /*yield*/, com._preInit(params)];
                    case 1:
                        _a.sent();
                        this._windows.push(com);
                        for (i = 0; i < this._windows.length; i++) {
                            this._windows[i].node.zIndex = i + 1;
                        }
                        com.onShow(params);
                        this._showingForms[fid] = com;
                        ModalMgr_1.default.inst.checkModalWindow(this._windows);
                        return [4 /*yield*/, this.showEffect(com)];
                    case 2:
                        _a.sent();
                        com.onAfterShow(params);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 加载到tips中 */
    UIManager.prototype.enterToTips = function (fid, params) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        return [4 /*yield*/, com._preInit(params)];
                    case 1:
                        _a.sent();
                        this._tipsForms[fid] = com;
                        com.onShow(params);
                        return [4 /*yield*/, this.showEffect(com)];
                    case 2:
                        _a.sent();
                        com.onAfterShow(params);
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.exitToScreen = function (fid) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._showingForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        com.onHide();
                        return [4 /*yield*/, this.hideEffect(com)];
                    case 1:
                        _a.sent();
                        com.onAfterHide();
                        this._showingForms[fid] = null;
                        delete this._showingForms[fid];
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.exitToFixed = function (fid) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        com.onHide();
                        return [4 /*yield*/, this.hideEffect(com)];
                    case 1:
                        _a.sent();
                        com.onAfterHide();
                        this._showingForms[fid] = null;
                        delete this._showingForms[fid];
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.exitToPopup = function (fid) {
        return __awaiter(this, void 0, void 0, function () {
            var com, i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._windows.length <= 0)
                            return [2 /*return*/];
                        com = null;
                        for (i = this._windows.length - 1; i >= 0; i--) {
                            if (this._windows[i].fid === fid) {
                                com = this._windows[i];
                                this._windows.splice(i, 1);
                            }
                        }
                        if (!com)
                            return [2 /*return*/];
                        com.onHide();
                        ModalMgr_1.default.inst.checkModalWindow(this._windows);
                        return [4 /*yield*/, this.hideEffect(com)];
                    case 1:
                        _a.sent();
                        com.onAfterHide();
                        this._showingForms[fid] = null;
                        delete this._showingForms[fid];
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.exitToTips = function (fid) {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = this._allForms[fid];
                        if (!com)
                            return [2 /*return*/];
                        com.onHide();
                        return [4 /*yield*/, this.hideEffect(com)];
                    case 1:
                        _a.sent();
                        com.onAfterHide();
                        this._tipsForms[fid] = null;
                        delete this._tipsForms[fid];
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.showEffect = function (baseUI) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        baseUI.node.active = true;
                        return [4 /*yield*/, baseUI.showEffect()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UIManager.prototype.hideEffect = function (baseUI) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, baseUI.hideEffect()];
                    case 1:
                        _a.sent();
                        baseUI.node.active = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 销毁 */
    UIManager.prototype.destoryForm = function (com) {
        // 销毁动态加载的资源
        ResMgr_1.default.inst.destoryDynamicRes(com.fid);
        // 销毁prefab以及依赖的资源
        ResMgr_1.default.inst.destoryFormPrefab(com.fid);
        // 销毁node
        com.node.destroy();
        // 从allmap中删除
        this._allForms[com.fid] = null;
        delete this._allForms[com.fid];
    };
    /** LRU缓存控制 */
    UIManager.prototype.putLRUCache = function (com) {
        this._LRUCache.put(com.fid);
        if (!this._LRUCache.needDelete())
            return;
        var deleteFid = this._LRUCache.deleteLastNode();
        if (deleteFid) {
            CC_DEBUG && console.log('close form id:', deleteFid, this._LRUCache.toString());
            var com_1 = this.getForm(deleteFid);
            if (!com_1 || !com_1.node)
                return;
            com_1 && this.destoryForm(com_1);
        }
    };
    /** 窗体是否正在显示 */
    UIManager.prototype.checkFormShowing = function (fid) {
        var com = this._allForms[fid];
        if (!com)
            return false;
        return com.node.active;
    };
    /** 窗体是否正在加载 */
    UIManager.prototype.checkFormLoading = function (prefabPath) {
        var com = this._loadingForm[prefabPath];
        return !!com;
    };
    /** 获得Component */
    UIManager.prototype.getForm = function (fId) {
        return this._allForms[fId];
    };
    UIManager.prototype.getUIROOT = function () {
        return this._UIROOT;
    };
    UIManager.instance = null; // 单例
    return UIManager;
}());
exports.default = UIManager;
if (CC_DEBUG) {
    window['UIManager'] = UIManager;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/Struct.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '294d4cuj8FOwrGZgHqxSfsR', 'Struct');
// Script/UIFrame/Struct.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ECloseType = exports.EPriority = exports.ModalType = void 0;
var SysDefine_1 = require("./config/SysDefine");
var ModalType = /** @class */ (function () {
    function ModalType(opacity, ClickMaskClose, IsEasing, EasingTime) {
        if (opacity === void 0) { opacity = SysDefine_1.ModalOpacity.OpacityHalf; }
        if (ClickMaskClose === void 0) { ClickMaskClose = false; }
        if (IsEasing === void 0) { IsEasing = true; }
        if (EasingTime === void 0) { EasingTime = 0.2; }
        this.opacity = SysDefine_1.ModalOpacity.OpacityHalf;
        this.clickMaskClose = false; // 点击阴影关闭
        this.isEasing = true; // 缓动实现
        this.easingTime = 0.2; // 缓动时间
        this.dualBlur = false; // 模糊
        this.opacity = opacity;
        this.clickMaskClose = ClickMaskClose;
        this.isEasing = IsEasing;
        this.easingTime = EasingTime;
    }
    ModalType.prototype.useBlur = function () {
        this.dualBlur = true;
        return this;
    };
    return ModalType;
}());
exports.ModalType = ModalType;
var EPriority;
(function (EPriority) {
    EPriority[EPriority["ZERO"] = 0] = "ZERO";
    EPriority[EPriority["ONE"] = 1] = "ONE";
    EPriority[EPriority["TWO"] = 2] = "TWO";
    EPriority[EPriority["THREE"] = 3] = "THREE";
    EPriority[EPriority["FOUR"] = 4] = "FOUR";
    EPriority[EPriority["FIVE"] = 5] = "FIVE";
    EPriority[EPriority["SIX"] = 6] = "SIX";
    EPriority[EPriority["SEVEN"] = 7] = "SEVEN";
    EPriority[EPriority["EIGHT"] = 8] = "EIGHT";
    EPriority[EPriority["NINE"] = 9] = "NINE";
})(EPriority = exports.EPriority || (exports.EPriority = {}));
var ECloseType;
(function (ECloseType) {
    ECloseType[ECloseType["CloseAndHide"] = 0] = "CloseAndHide";
    ECloseType[ECloseType["CloseAndDestory"] = 1] = "CloseAndDestory";
    ECloseType[ECloseType["LRU"] = 2] = "LRU";
})(ECloseType = exports.ECloseType || (exports.ECloseType = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9TdHJ1Y3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQWtEO0FBRWxEO0lBUUksbUJBQVksT0FBa0MsRUFBRSxjQUFvQixFQUFFLFFBQWEsRUFBRSxVQUFjO1FBQXZGLHdCQUFBLEVBQUEsVUFBVSx3QkFBWSxDQUFDLFdBQVc7UUFBRSwrQkFBQSxFQUFBLHNCQUFvQjtRQUFFLHlCQUFBLEVBQUEsZUFBYTtRQUFFLDJCQUFBLEVBQUEsZ0JBQWM7UUFQNUYsWUFBTyxHQUFpQix3QkFBWSxDQUFDLFdBQVcsQ0FBQztRQUNqRCxtQkFBYyxHQUFHLEtBQUssQ0FBQyxDQUFNLFNBQVM7UUFDdEMsYUFBUSxHQUFHLElBQUksQ0FBQyxDQUFhLE9BQU87UUFDcEMsZUFBVSxHQUFHLEdBQUcsQ0FBQyxDQUFZLE9BQU87UUFDcEMsYUFBUSxHQUFHLEtBQUssQ0FBQyxDQUFZLEtBQUs7UUFJckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDakMsQ0FBQztJQUVELDJCQUFPLEdBQVA7UUFDSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQW5CQSxBQW1CQyxJQUFBO0FBbkJZLDhCQUFTO0FBbUN0QixJQUFZLFNBV1g7QUFYRCxXQUFZLFNBQVM7SUFDakIseUNBQUksQ0FBQTtJQUNKLHVDQUFHLENBQUE7SUFDSCx1Q0FBRyxDQUFBO0lBQ0gsMkNBQUssQ0FBQTtJQUNMLHlDQUFJLENBQUE7SUFDSix5Q0FBSSxDQUFBO0lBQ0osdUNBQUcsQ0FBQTtJQUNILDJDQUFLLENBQUE7SUFDTCwyQ0FBSyxDQUFBO0lBQ0wseUNBQUksQ0FBQTtBQUNSLENBQUMsRUFYVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVdwQjtBQUVELElBQVksVUFJWDtBQUpELFdBQVksVUFBVTtJQUNsQiwyREFBWSxDQUFBO0lBQ1osaUVBQWUsQ0FBQTtJQUNmLHlDQUFHLENBQUE7QUFDUCxDQUFDLEVBSlcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFJckIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2RhbE9wYWNpdHkgfSBmcm9tIFwiLi9jb25maWcvU3lzRGVmaW5lXCI7XG5cbmV4cG9ydCBjbGFzcyBNb2RhbFR5cGUge1xuICAgIHB1YmxpYyBvcGFjaXR5OiBNb2RhbE9wYWNpdHkgPSBNb2RhbE9wYWNpdHkuT3BhY2l0eUhhbGY7XG4gICAgcHVibGljIGNsaWNrTWFza0Nsb3NlID0gZmFsc2U7ICAgICAgLy8g54K55Ye76Zi05b2x5YWz6ZetXG4gICAgcHVibGljIGlzRWFzaW5nID0gdHJ1ZTsgICAgICAgICAgICAgLy8g57yT5Yqo5a6e546wXG4gICAgcHVibGljIGVhc2luZ1RpbWUgPSAwLjI7ICAgICAgICAgICAgLy8g57yT5Yqo5pe26Ze0XG4gICAgcHVibGljIGR1YWxCbHVyID0gZmFsc2U7ICAgICAgICAgICAgLy8g5qih57OKXG4gICAgXG5cbiAgICBjb25zdHJ1Y3RvcihvcGFjaXR5ID0gTW9kYWxPcGFjaXR5Lk9wYWNpdHlIYWxmLCBDbGlja01hc2tDbG9zZT1mYWxzZSwgSXNFYXNpbmc9dHJ1ZSwgRWFzaW5nVGltZT0wLjIpIHtcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gb3BhY2l0eTtcbiAgICAgICAgdGhpcy5jbGlja01hc2tDbG9zZSA9IENsaWNrTWFza0Nsb3NlO1xuICAgICAgICB0aGlzLmlzRWFzaW5nID0gSXNFYXNpbmc7XG4gICAgICAgIHRoaXMuZWFzaW5nVGltZSA9IEVhc2luZ1RpbWU7XG4gICAgfVxuXG4gICAgdXNlQmx1cigpIHtcbiAgICAgICAgdGhpcy5kdWFsQmx1ciA9IHRydWU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRm9ybUNvbmZpZyB7XG4gICAgcHJlZmFiVXJsOiBzdHJpbmc7XG4gICAgdHlwZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElGb3JtRGF0YSB7XG4gICAgbG9hZGluZ0Zvcm0/OiBJRm9ybUNvbmZpZztcbiAgICBvbkNsb3NlPzogRnVuY3Rpb247XG4gICAgLy8gd2luZG9357G75Z6L55qEZm9ybeaJjeaciVxuICAgIHByaW9yaXR5PzogRVByaW9yaXR5OyAgICAgICAvLyDlvZPliY3mnInlt7Lnu4/mmL7npLrnmoR3aW5kb3fml7YsIOS8muaUvuetieW+heWIl+ihqOmHjCwg55+l6YGTIOW9k+WJjeayoeacieato+WcqOaYvuekuueahHdpbmRvd+aXtuaJjeiiq+aYvuekulxuICAgIHNob3dXYWl0PzogYm9vbGVhbjsgICAgICAgICAvLyDkvJjlhYjnuqco5Lya5b2x5ZON5by556qX55qE5bGC57qnLCDlhYjliKTmlq3kvJjlhYjnuqcsIOWcqOWIpOaWrea3u+WKoOmhuuW6jylcbiAgICB1bmlxdWVJZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGVudW0gRVByaW9yaXR5IHtcbiAgICBaRVJPLFxuICAgIE9ORSxcbiAgICBUV08sXG4gICAgVEhSRUUsXG4gICAgRk9VUixcbiAgICBGSVZFLFxuICAgIFNJWCxcbiAgICBTRVZFTixcbiAgICBFSUdIVCxcbiAgICBOSU5FLFxufVxuXG5leHBvcnQgZW51bSBFQ2xvc2VUeXBlIHtcbiAgICBDbG9zZUFuZEhpZGUsICAgICAgICAgICAvLyDlhbPpl63lkI7pmpDol49cbiAgICBDbG9zZUFuZERlc3RvcnksICAgICAgICAvLyDlhbPpl63lkI7plIDmr4FcbiAgICBMUlUsICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKhMUlXmjqfliLblhbbplIDmr4Hml7bmnLpcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/UIToast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f1211m5xUNKR7NsrmF2i3SV', 'UIToast');
// Script/UIFrame/UIToast.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToastMgr = exports.UIToast = exports.ToastType = void 0;
var Pool_1 = require("../Common/Utils/Pool");
var CocosHelper_1 = require("./CocosHelper");
var UIBase_1 = require("./UIBase");
var ToastType;
(function (ToastType) {
    ToastType[ToastType["Default"] = 0] = "Default";
})(ToastType = exports.ToastType || (exports.ToastType = {}));
/**
 * 外部传参
 * 1. 将prefabUrl注册, 静态
 * 2. UIToast.open 直接打开
 */
var UIToast = /** @class */ (function (_super) {
    __extends(UIToast, _super);
    function UIToast() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UIToast.prototype.use = function () {
    };
    UIToast.prototype.free = function () {
    };
    return UIToast;
}(UIBase_1.default));
exports.UIToast = UIToast;
var ToastMgr = /** @class */ (function () {
    function ToastMgr() {
        this._pools = {};
    }
    ToastMgr.prototype.load = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            var prefab_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!this._pools[url]) return [3 /*break*/, 2];
                        return [4 /*yield*/, CocosHelper_1.default.loadResSync(url, cc.Prefab)];
                    case 1:
                        prefab_1 = _a.sent();
                        this._pools[url] = new Pool_1.Pool(function () {
                            var node = cc.instantiate(prefab_1);
                            return node.getComponent(UIToast);
                        }, 10);
                        _a.label = 2;
                    case 2: return [2 /*return*/, this._pools[url].alloc()];
                }
            });
        });
    };
    ToastMgr.prototype.register = function (type, toast) {
    };
    ToastMgr.prototype.free = function (url, obj) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._pools[url].free(obj);
                return [2 /*return*/];
            });
        });
    };
    ToastMgr.prototype.open = function (name, params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    ToastMgr.prototype.close = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    return ToastMgr;
}());
exports.ToastMgr = ToastMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9VSVRvYXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2Q0FBbUQ7QUFDbkQsNkNBQXdDO0FBQ3hDLG1DQUE4QjtBQUc5QixJQUFZLFNBRVg7QUFGRCxXQUFZLFNBQVM7SUFDakIsK0NBQU8sQ0FBQTtBQUNYLENBQUMsRUFGVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQUVwQjtBQUdEOzs7O0dBSUc7QUFFSDtJQUE2QiwyQkFBTTtJQUFuQzs7SUFTQSxDQUFDO0lBUFUscUJBQUcsR0FBVjtJQUVBLENBQUM7SUFFTSxzQkFBSSxHQUFYO0lBRUEsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQVRBLEFBU0MsQ0FUNEIsZ0JBQU0sR0FTbEM7QUFUWSwwQkFBTztBQVdwQjtJQUFBO1FBQ1ksV0FBTSxHQUFtQyxFQUFFLENBQUM7SUE2QnhELENBQUM7SUEzQmlCLHVCQUFJLEdBQWxCLFVBQW1CLEdBQVc7Ozs7Ozs2QkFDdkIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFqQix3QkFBaUI7d0JBQ0gscUJBQU0scUJBQVcsQ0FBQyxXQUFXLENBQVksR0FBRyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBQTs7d0JBQWpFLFdBQVMsU0FBd0Q7d0JBQ3JFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxXQUFJLENBQVU7NEJBQ2pDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBTSxDQUFDLENBQUM7NEJBQ2xDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQzt3QkFDdEMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDOzs0QkFFWCxzQkFBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFDOzs7O0tBQ25DO0lBRU0sMkJBQVEsR0FBZixVQUFnQixJQUFlLEVBQUUsS0FBYTtJQUU5QyxDQUFDO0lBRWEsdUJBQUksR0FBbEIsVUFBbUIsR0FBVyxFQUFFLEdBQVk7OztnQkFDeEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Ozs7S0FDOUI7SUFFWSx1QkFBSSxHQUFqQixVQUFrQixJQUFZLEVBQUUsTUFBYzs7Ozs7O0tBRTdDO0lBRVksd0JBQUssR0FBbEIsVUFBbUIsR0FBVzs7Ozs7O0tBRTdCO0lBRUwsZUFBQztBQUFELENBOUJBLEFBOEJDLElBQUE7QUE5QlksNEJBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUG9vbCwgUG9vbCB9IGZyb20gXCIuLi9Db21tb24vVXRpbHMvUG9vbFwiO1xuaW1wb3J0IENvY29zSGVscGVyIGZyb20gXCIuL0NvY29zSGVscGVyXCI7XG5pbXBvcnQgVUlCYXNlIGZyb20gXCIuL1VJQmFzZVwiO1xuXG5cbmV4cG9ydCBlbnVtIFRvYXN0VHlwZSB7XG4gICAgRGVmYXVsdCxcbn1cblxuXG4vKipcbiAqIOWklumDqOS8oOWPglxuICogMS4g5bCGcHJlZmFiVXJs5rOo5YaMLCDpnZnmgIFcbiAqIDIuIFVJVG9hc3Qub3BlbiDnm7TmjqXmiZPlvIBcbiAqL1xuXG5leHBvcnQgY2xhc3MgVUlUb2FzdCBleHRlbmRzIFVJQmFzZSBpbXBsZW1lbnRzIElQb29sIHtcblxuICAgIHB1YmxpYyB1c2UoKSB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIHB1YmxpYyBmcmVlKCkge1xuXG4gICAgfSAgIFxufVxuXG5leHBvcnQgY2xhc3MgVG9hc3RNZ3Ige1xuICAgIHByaXZhdGUgX3Bvb2xzOiB7W2tleTogc3RyaW5nXTogUG9vbDxVSVRvYXN0Pn0gPSB7fTtcblxuICAgIHByaXZhdGUgYXN5bmMgbG9hZCh1cmw6IHN0cmluZykge1xuICAgICAgICBpZighdGhpcy5fcG9vbHNbdXJsXSkge1xuICAgICAgICAgICAgbGV0IHByZWZhYiA9IGF3YWl0IENvY29zSGVscGVyLmxvYWRSZXNTeW5jPGNjLlByZWZhYj4odXJsLCBjYy5QcmVmYWIpO1xuICAgICAgICAgICAgdGhpcy5fcG9vbHNbdXJsXSA9IG5ldyBQb29sPFVJVG9hc3Q+KCgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHByZWZhYik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0Q29tcG9uZW50KFVJVG9hc3QpO1xuICAgICAgICAgICAgfSwgMTApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9wb29sc1t1cmxdLmFsbG9jKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHJlZ2lzdGVyKHR5cGU6IFRvYXN0VHlwZSwgdG9hc3Q6IHN0cmluZykge1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBmcmVlKHVybDogc3RyaW5nLCBvYmo6IFVJVG9hc3QpIHtcbiAgICAgICAgdGhpcy5fcG9vbHNbdXJsXS5mcmVlKG9iaik7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIG9wZW4obmFtZTogc3RyaW5nLCBwYXJhbXM6IG51bWJlcikge1xuICAgICAgICBcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2UodXJsOiBzdHJpbmcpIHtcbiAgICAgICAgXG4gICAgfVxuXG59XG5cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/WindowMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '14f25mz3sdN6Yu+aE4UQvmc', 'WindowMgr');
// Script/UIFrame/WindowMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var PriorityQueue_1 = require("../Common/Utils/PriorityQueue");
var PriorityStack_1 = require("../Common/Utils/PriorityStack");
var Struct_1 = require("./Struct");
var UIManager_1 = require("./UIManager");
var WindowMgr = /** @class */ (function () {
    function WindowMgr() {
        // 窗体
        this._showingList = new PriorityStack_1.default();
        this._waitingList = new PriorityQueue_1.default();
        this._currWindow = "";
    }
    Object.defineProperty(WindowMgr.prototype, "currWindow", {
        get: function () {
            return this._currWindow;
        },
        enumerable: false,
        configurable: true
    });
    WindowMgr.prototype.getWindows = function () {
        return this._showingList.getElements();
    };
    /** 打开窗体 */
    WindowMgr.prototype.open = function (prefabPath, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        formData = this._formatFormData(formData);
                        if (!(this._showingList.size <= 0 || (!formData.showWait && formData.priority >= this._showingList.getTopEPriority()))) return [3 /*break*/, 2];
                        this._showingList.push(prefabPath, formData.priority);
                        this._currWindow = this._showingList.getTopElement();
                        return [4 /*yield*/, UIManager_1.default.getInstance().openForm(prefabPath, params, formData)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        // 入等待队列
                        this._waitingList.enqueue({ prefabPath: prefabPath, params: params, formData: formData });
                        return [4 /*yield*/, UIManager_1.default.getInstance().loadUIForm(prefabPath)];
                    case 3: 
                    // 加载窗体
                    return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    WindowMgr.prototype.close = function (prefabPath) {
        return __awaiter(this, void 0, void 0, function () {
            var result, windowData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        result = this._showingList.remove(prefabPath);
                        if (!result)
                            return [2 /*return*/, false];
                        return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(prefabPath)];
                    case 1:
                        _a.sent();
                        if (this._showingList.size <= 0 && this._waitingList.size > 0) {
                            windowData = this._waitingList.dequeue();
                            this.open(windowData.prefabPath, windowData.params, windowData.formData);
                        }
                        return [2 /*return*/, true];
                }
            });
        });
    };
    /** 关闭所有弹窗 */
    WindowMgr.prototype.closeAll = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, fid;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this._waitingList.clear();
                        _i = 0, _a = this._showingList.getElements();
                        _b.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        fid = _a[_i];
                        return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(fid)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        this._showingList.clear();
                        return [2 /*return*/, true];
                }
            });
        });
    };
    WindowMgr.prototype._formatFormData = function (formData) {
        return Object.assign({ showWait: false, priority: Struct_1.EPriority.FIVE }, formData);
    };
    return WindowMgr;
}());
var WindowData = /** @class */ (function () {
    function WindowData() {
    }
    return WindowData;
}());
exports.default = new WindowMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9XaW5kb3dNZ3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrREFBMEQ7QUFDMUQsK0RBQTBEO0FBQzFELG1DQUFnRDtBQUNoRCx5Q0FBb0M7QUFFcEM7SUFBQTtRQUNJLEtBQUs7UUFDRyxpQkFBWSxHQUEwQixJQUFJLHVCQUFhLEVBQUUsQ0FBQztRQUMxRCxpQkFBWSxHQUE4QixJQUFJLHVCQUFhLEVBQUUsQ0FBQztRQUU5RCxnQkFBVyxHQUFXLEVBQUUsQ0FBQztJQW9EckMsQ0FBQztJQW5ERyxzQkFBVyxpQ0FBVTthQUFyQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUM1QixDQUFDOzs7T0FBQTtJQUVNLDhCQUFVLEdBQWpCO1FBQ0ksT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzNDLENBQUM7SUFFRCxXQUFXO0lBQ0Usd0JBQUksR0FBakIsVUFBa0IsVUFBa0IsRUFBRSxNQUFZLEVBQUUsUUFBb0I7Ozs7O3dCQUNwRSxRQUFRLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQzs2QkFDdkMsQ0FBQSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUEsRUFBL0csd0JBQStHO3dCQUM5RyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUN0RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLENBQUM7d0JBQzlDLHFCQUFNLG1CQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLEVBQUE7NEJBQTNFLHNCQUFPLFNBQW9FLEVBQUM7O3dCQUdoRixRQUFRO3dCQUNSLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEVBQUMsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO3dCQUVqRixxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBQTs7b0JBRDNELE9BQU87b0JBQ1Asc0JBQU8sU0FBb0QsRUFBQzs7OztLQUMvRDtJQUVZLHlCQUFLLEdBQWxCLFVBQW1CLFVBQWtCOzs7Ozs7d0JBQzdCLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQzt3QkFDbEQsSUFBRyxDQUFDLE1BQU07NEJBQUUsc0JBQU8sS0FBSyxFQUFDO3dCQUV6QixxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBQTs7d0JBQW5ELFNBQW1ELENBQUM7d0JBRXBELElBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRTs0QkFDdEQsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUM7NEJBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQzt5QkFDNUU7d0JBQ0Qsc0JBQU8sSUFBSSxFQUFDOzs7O0tBQ2Y7SUFFRCxhQUFhO0lBQ0EsNEJBQVEsR0FBckI7Ozs7Ozt3QkFDSSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDOzhCQUVzQixFQUEvQixLQUFBLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFOzs7NkJBQS9CLENBQUEsY0FBK0IsQ0FBQTt3QkFBdEMsR0FBRzt3QkFDVCxxQkFBTSxtQkFBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBQTs7d0JBQTVDLFNBQTRDLENBQUM7Ozt3QkFEaEMsSUFBK0IsQ0FBQTs7O3dCQUdoRCxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO3dCQUUxQixzQkFBTyxJQUFJLEVBQUM7Ozs7S0FDZjtJQUVPLG1DQUFlLEdBQXZCLFVBQXdCLFFBQWE7UUFDakMsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsa0JBQVMsQ0FBQyxJQUFJLEVBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQXpEQSxBQXlEQyxJQUFBO0FBRUQ7SUFBQTtJQUlBLENBQUM7SUFBRCxpQkFBQztBQUFELENBSkEsQUFJQyxJQUFBO0FBRUQsa0JBQWUsSUFBSSxTQUFTLEVBQUUsQ0FBQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcmlvcml0eVF1ZXVlIGZyb20gXCIuLi9Db21tb24vVXRpbHMvUHJpb3JpdHlRdWV1ZVwiO1xuaW1wb3J0IFByaW9yaXR5U3RhY2sgZnJvbSBcIi4uL0NvbW1vbi9VdGlscy9Qcmlvcml0eVN0YWNrXCI7XG5pbXBvcnQgeyBFUHJpb3JpdHksIElGb3JtRGF0YSB9IGZyb20gXCIuL1N0cnVjdFwiO1xuaW1wb3J0IFVJTWFuYWdlciBmcm9tIFwiLi9VSU1hbmFnZXJcIjtcblxuY2xhc3MgV2luZG93TWdyIHtcbiAgICAvLyDnqpfkvZNcbiAgICBwcml2YXRlIF9zaG93aW5nTGlzdDogUHJpb3JpdHlTdGFjazxzdHJpbmc+ID0gbmV3IFByaW9yaXR5U3RhY2soKTtcbiAgICBwcml2YXRlIF93YWl0aW5nTGlzdDogUHJpb3JpdHlRdWV1ZTxXaW5kb3dEYXRhPiA9IG5ldyBQcmlvcml0eVF1ZXVlKCk7XG4gICAgXG4gICAgcHJpdmF0ZSBfY3VycldpbmRvdzogc3RyaW5nID0gXCJcIjtcbiAgICBwdWJsaWMgZ2V0IGN1cnJXaW5kb3coKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jdXJyV2luZG93O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRXaW5kb3dzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd2luZ0xpc3QuZ2V0RWxlbWVudHMoKTtcbiAgICB9XG5cbiAgICAvKiog5omT5byA56qX5L2TICovXG4gICAgcHVibGljIGFzeW5jIG9wZW4ocHJlZmFiUGF0aDogc3RyaW5nLCBwYXJhbXM/OiBhbnksIGZvcm1EYXRhPzogSUZvcm1EYXRhKSB7XG4gICAgICAgIGZvcm1EYXRhID0gdGhpcy5fZm9ybWF0Rm9ybURhdGEoZm9ybURhdGEpO1xuICAgICAgICBpZih0aGlzLl9zaG93aW5nTGlzdC5zaXplIDw9IDAgfHwgKCFmb3JtRGF0YS5zaG93V2FpdCAmJiBmb3JtRGF0YS5wcmlvcml0eSA+PSB0aGlzLl9zaG93aW5nTGlzdC5nZXRUb3BFUHJpb3JpdHkoKSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3dpbmdMaXN0LnB1c2gocHJlZmFiUGF0aCwgZm9ybURhdGEucHJpb3JpdHkpO1xuICAgICAgICAgICAgdGhpcy5fY3VycldpbmRvdyA9IHRoaXMuX3Nob3dpbmdMaXN0LmdldFRvcEVsZW1lbnQoKTtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5vcGVuRm9ybShwcmVmYWJQYXRoLCBwYXJhbXMsIGZvcm1EYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8g5YWl562J5b6F6Zif5YiXXG4gICAgICAgIHRoaXMuX3dhaXRpbmdMaXN0LmVucXVldWUoe3ByZWZhYlBhdGg6IHByZWZhYlBhdGgsIHBhcmFtczogcGFyYW1zLCBmb3JtRGF0YTogZm9ybURhdGF9KTtcbiAgICAgICAgLy8g5Yqg6L2956qX5L2TXG4gICAgICAgIHJldHVybiBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5sb2FkVUlGb3JtKHByZWZhYlBhdGgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBjbG9zZShwcmVmYWJQYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuX3Nob3dpbmdMaXN0LnJlbW92ZShwcmVmYWJQYXRoKTtcbiAgICAgICAgaWYoIXJlc3VsdCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgIGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLmNsb3NlRm9ybShwcmVmYWJQYXRoKTtcblxuICAgICAgICBpZih0aGlzLl9zaG93aW5nTGlzdC5zaXplIDw9IDAgJiYgdGhpcy5fd2FpdGluZ0xpc3Quc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIGxldCB3aW5kb3dEYXRhID0gdGhpcy5fd2FpdGluZ0xpc3QuZGVxdWV1ZSgpO1xuICAgICAgICAgICAgdGhpcy5vcGVuKHdpbmRvd0RhdGEucHJlZmFiUGF0aCwgd2luZG93RGF0YS5wYXJhbXMsIHdpbmRvd0RhdGEuZm9ybURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8qKiDlhbPpl63miYDmnInlvLnnqpcgKi9cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2VBbGwoKSB7XG4gICAgICAgIHRoaXMuX3dhaXRpbmdMaXN0LmNsZWFyKCk7XG5cbiAgICAgICAgZm9yKGNvbnN0IGZpZCBvZiB0aGlzLl9zaG93aW5nTGlzdC5nZXRFbGVtZW50cygpKSB7XG4gICAgICAgICAgICBhd2FpdCBVSU1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5jbG9zZUZvcm0oZmlkKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zaG93aW5nTGlzdC5jbGVhcigpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfZm9ybWF0Rm9ybURhdGEoZm9ybURhdGE6IGFueSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7c2hvd1dhaXQ6IGZhbHNlLCBwcmlvcml0eTogRVByaW9yaXR5LkZJVkV9LCBmb3JtRGF0YSk7XG4gICAgfVxufVxuXG5jbGFzcyBXaW5kb3dEYXRhIHtcbiAgICBwcmVmYWJQYXRoOiBzdHJpbmc7XG4gICAgcGFyYW1zPzogYW55O1xuICAgIGZvcm1EYXRhPzogYW55O1xufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgV2luZG93TWdyKCk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIECSView.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0c74dAi5jtLFKLmAFJ0qihQ', 'UIECSView');
// Script/UIScript/UIECSView.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIECSView = /** @class */ (function (_super) {
    __extends(UIECSView, _super);
    function UIECSView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UIECSView.prototype.start = function () {
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UIECSView = __decorate([
        ccclass
    ], UIECSView);
    return UIECSView;
}(UIForm_1.UIScreen));
exports.default = UIECSView;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlFQ1NWaWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDhDQUF5QztBQUN6Qyw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVE7SUFBL0M7O0lBYUEsQ0FBQztJQVZHLGVBQWU7SUFFZix5QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BCLGlCQUFPLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBRWIsQ0FBQztJQVZnQixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBYTdCO0lBQUQsZ0JBQUM7Q0FiRCxBQWFDLENBYnNDLGlCQUFRLEdBYTlDO2tCQWJvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJRUNTVmlld19BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSUVDU1ZpZXdfQXV0b1wiO1xuaW1wb3J0IEZvcm1NZ3IgZnJvbSBcIi4uL1VJRnJhbWUvRm9ybU1nclwiO1xuaW1wb3J0IHsgVUlTY3JlZW4gfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUVDU1ZpZXcgZXh0ZW5kcyBVSVNjcmVlbiB7XG5cbiAgICB2aWV3OiBVSUVDU1ZpZXdfQXV0bztcbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LkJhY2suYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5iYWNrU2NlbmUoKTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIDungeon.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '77bb60WxChA/5WbElweSd49', 'UIDungeon');
// Script/UIScript/UIDungeon.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Dungeon_1 = require("../Common/Utils/Dungeon");
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIDungeon = /** @class */ (function (_super) {
    __extends(UIDungeon, _super);
    function UIDungeon() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pfGrid = null;
        _this.dungeon = null;
        return _this;
        // update (dt) {}
    }
    UIDungeon.prototype.start = function () {
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
        this.dungeon = new Dungeon_1.Dungeon(63, 63);
        var map = this.dungeon.generate();
        var size = this.pfGrid.data.width;
        for (var j = 0; j < this.dungeon.height; j++) {
            for (var x = 0; x < this.dungeon.width; x++) {
                var node = cc.instantiate(this.pfGrid);
                node.color = this.getColor(map[j * this.dungeon.width + x]);
                this.view.Items.addChild(node);
                node.setPosition(x * size, j * size);
            }
        }
    };
    UIDungeon.prototype.getColor = function (type) {
        switch (type) {
            case Dungeon_1.GridType.Wall:
                return cc.Color.BLACK;
            case Dungeon_1.GridType.Floor:
                return cc.Color.WHITE;
            case Dungeon_1.GridType.OpenDoor:
                return cc.Color.BLUE;
            case Dungeon_1.GridType.CloseDoor:
                return cc.Color.RED;
        }
    };
    __decorate([
        property(cc.Prefab)
    ], UIDungeon.prototype, "pfGrid", void 0);
    UIDungeon = __decorate([
        ccclass
    ], UIDungeon);
    return UIDungeon;
}(UIForm_1.UIScreen));
exports.default = UIDungeon;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlEdW5nZW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG1EQUE0RDtBQUM1RCw4Q0FBeUM7QUFDekMsNENBQTZDO0FBRXZDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXVDLDZCQUFRO0lBQS9DO1FBQUEscUVBd0NDO1FBckN3QixZQUFNLEdBQWMsSUFBSSxDQUFDO1FBR3RDLGFBQU8sR0FBWSxJQUFJLENBQUM7O1FBaUNoQyxpQkFBaUI7SUFDckIsQ0FBQztJQWhDRyx5QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BCLGlCQUFPLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ1QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLGlCQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2xDLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyQyxLQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3BDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN2QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM1RCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDeEM7U0FDSjtJQUNMLENBQUM7SUFFTyw0QkFBUSxHQUFoQixVQUFpQixJQUFjO1FBQzNCLFFBQU8sSUFBSSxFQUFFO1lBQ1QsS0FBSyxrQkFBUSxDQUFDLElBQUk7Z0JBQ2QsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUMxQixLQUFLLGtCQUFRLENBQUMsS0FBSztnQkFDZixPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQzFCLEtBQUssa0JBQVEsQ0FBQyxRQUFRO2dCQUNsQixPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ3pCLEtBQUssa0JBQVEsQ0FBQyxTQUFTO2dCQUNuQixPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1NBQzNCO0lBQ0wsQ0FBQztJQWpDb0I7UUFBcEIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NkNBQTBCO0lBSDdCLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0F3QzdCO0lBQUQsZ0JBQUM7Q0F4Q0QsQUF3Q0MsQ0F4Q3NDLGlCQUFRLEdBd0M5QztrQkF4Q29CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlEdW5nZW9uX0F1dG8gZnJvbSBcIi4uL0F1dG9TY3JpcHRzL1VJRHVuZ2Vvbl9BdXRvXCI7XG5pbXBvcnQgeyBEdW5nZW9uLCBHcmlkVHlwZSB9IGZyb20gXCIuLi9Db21tb24vVXRpbHMvRHVuZ2VvblwiO1xuaW1wb3J0IEZvcm1NZ3IgZnJvbSBcIi4uL1VJRnJhbWUvRm9ybU1nclwiO1xuaW1wb3J0IHsgVUlTY3JlZW4gfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUR1bmdlb24gZXh0ZW5kcyBVSVNjcmVlbiB7XG5cblxuICAgIEBwcm9wZXJ0eShjYy5QcmVmYWIpIHBmR3JpZDogY2MuUHJlZmFiID0gbnVsbDtcblxuICAgIHZpZXc6IFVJRHVuZ2Vvbl9BdXRvO1xuICAgIHByaXZhdGUgZHVuZ2VvbjogRHVuZ2VvbiA9IG51bGw7XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy52aWV3LkJhY2suYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5iYWNrU2NlbmUoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIHRoaXMuZHVuZ2VvbiA9IG5ldyBEdW5nZW9uKDYzLCA2Myk7XG4gICAgICAgIGxldCBtYXAgPSB0aGlzLmR1bmdlb24uZ2VuZXJhdGUoKTtcbiAgICAgICAgbGV0IHNpemUgPSB0aGlzLnBmR3JpZC5kYXRhLndpZHRoO1xuICAgICAgICBmb3IobGV0IGo9MDsgajx0aGlzLmR1bmdlb24uaGVpZ2h0OyBqKyspIHtcbiAgICAgICAgICAgIGZvcihsZXQgeD0wOyB4PHRoaXMuZHVuZ2Vvbi53aWR0aDsgeCsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IG5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLnBmR3JpZCk7ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbm9kZS5jb2xvciA9IHRoaXMuZ2V0Q29sb3IobWFwW2ogKiB0aGlzLmR1bmdlb24ud2lkdGggKyB4XSk7XG4gICAgICAgICAgICAgICAgdGhpcy52aWV3Lkl0ZW1zLmFkZENoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgIG5vZGUuc2V0UG9zaXRpb24oeCAqIHNpemUsIGogKiBzaXplKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSAgICAgICAgXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRDb2xvcih0eXBlOiBHcmlkVHlwZSkge1xuICAgICAgICBzd2l0Y2godHlwZSkge1xuICAgICAgICAgICAgY2FzZSBHcmlkVHlwZS5XYWxsOlxuICAgICAgICAgICAgICAgIHJldHVybiBjYy5Db2xvci5CTEFDSztcbiAgICAgICAgICAgIGNhc2UgR3JpZFR5cGUuRmxvb3I6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNjLkNvbG9yLldISVRFO1xuICAgICAgICAgICAgY2FzZSBHcmlkVHlwZS5PcGVuRG9vcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gY2MuQ29sb3IuQkxVRTtcbiAgICAgICAgICAgIGNhc2UgR3JpZFR5cGUuQ2xvc2VEb29yOlxuICAgICAgICAgICAgICAgIHJldHVybiBjYy5Db2xvci5SRUQ7XG4gICAgICAgIH0gICAgICAgIFxuICAgIH1cblxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/AdapterMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9848co1bh1O76pCrg2kIN9s', 'AdapterMgr');
// Script/UIFrame/AdapterMgr.ts

"use strict";
/**
 * @Author: 邓朗
 * @Date: 2019-06-12 17:18:04
 * @Describe: 适配组件, 主要适配背景大小,窗体的位置
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdapterType = void 0;
var flagOffset = 0;
var _None = 1 << flagOffset++;
var _Left = 1 << flagOffset++; // 左对齐
var _Right = 1 << flagOffset++; // 右对齐
var _Top = 1 << flagOffset++; // 上对齐
var _Bottom = 1 << flagOffset++; // 下对齐
var _StretchWidth = _Left | _Right; // 拉伸宽
var _StretchHeight = _Top | _Bottom; // 拉伸高
var _FullWidth = 1 << flagOffset++; // 等比充满宽
var _FullHeight = 1 << flagOffset++; // 等比充满高
var _Final = 1 << flagOffset++;
/**  */
var AdapterType;
(function (AdapterType) {
    AdapterType[AdapterType["Top"] = _Top] = "Top";
    AdapterType[AdapterType["Bottom"] = _Bottom] = "Bottom";
    AdapterType[AdapterType["Left"] = _Left] = "Left";
    AdapterType[AdapterType["Right"] = _Right] = "Right";
    AdapterType[AdapterType["StretchWidth"] = _StretchWidth] = "StretchWidth";
    AdapterType[AdapterType["StretchHeight"] = _StretchHeight] = "StretchHeight";
    AdapterType[AdapterType["FullWidth"] = _FullWidth] = "FullWidth";
    AdapterType[AdapterType["FullHeight"] = _FullHeight] = "FullHeight";
})(AdapterType = exports.AdapterType || (exports.AdapterType = {}));
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var AdapterMgr = /** @class */ (function () {
    function AdapterMgr() {
    }
    AdapterMgr_1 = AdapterMgr;
    Object.defineProperty(AdapterMgr, "inst", {
        get: function () {
            if (this._instance == null) {
                this._instance = new AdapterMgr_1();
                this._instance.visibleSize = cc.view.getVisibleSize();
                console.log("visiable size: " + this._instance.visibleSize);
            }
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    AdapterMgr.prototype.adapteByType = function (flag, node, distance) {
        if (distance === void 0) { distance = 0; }
        var tFlag = _Final;
        while (tFlag > 0) {
            if (tFlag & flag)
                this._doAdapte(tFlag, node, distance);
            tFlag = tFlag >> 1;
        }
        var widget = node.getComponent(cc.Widget);
        widget.target = cc.find("Canvas");
        widget.updateAlignment();
    };
    AdapterMgr.prototype._doAdapte = function (flag, node, distance) {
        if (distance === void 0) { distance = 0; }
        var widget = node.getComponent(cc.Widget);
        if (!widget) {
            widget = node.addComponent(cc.Widget);
        }
        switch (flag) {
            case _None:
                break;
            case _Left:
                widget.isAlignLeft = true;
                widget.isAbsoluteLeft = true;
                widget.left = distance ? distance : 0;
                break;
            case _Right:
                widget.isAlignRight = true;
                widget.isAbsoluteRight = true;
                widget.right = distance ? distance : 0;
                break;
            case _Top:
                if (cc.sys.platform === cc.sys.WECHAT_GAME) { // 微信小游戏适配刘海屏
                    var menuInfo = window["wx"].getMenuButtonBoundingClientRect();
                    var systemInfo = window["wx"].getSystemInfoSync();
                    distance += cc.find("Canvas").height * (menuInfo.top / systemInfo.screenHeight);
                }
                widget.isAlignTop = true;
                widget.isAbsoluteTop = true;
                widget.top = distance ? distance : 0;
                break;
            case _Bottom:
                widget.isAlignBottom = true;
                widget.isAbsoluteBottom = true;
                widget.bottom = distance ? distance : 0;
                break;
            case _FullWidth:
                node.height /= node.width / this.visibleSize.width;
                node.width = this.visibleSize.width;
                break;
            case _FullHeight:
                node.width /= node.height / this.visibleSize.height;
                node.height = this.visibleSize.height;
                break;
        }
    };
    /** 移除 */
    AdapterMgr.prototype.removeAdaptater = function (node) {
        if (node.getComponent(cc.Widget)) {
            node.removeComponent(cc.Widget);
        }
    };
    var AdapterMgr_1;
    AdapterMgr._instance = null; // 单例
    AdapterMgr = AdapterMgr_1 = __decorate([
        ccclass
    ], AdapterMgr);
    return AdapterMgr;
}());
exports.default = AdapterMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/UIModalScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a6a5a+wskdJZJdS5tPl1qBP', 'UIModalScript');
// Script/UIFrame/UIModalScript.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIManager_1 = require("./UIManager");
var SysDefine_1 = require("./config/SysDefine");
var CocosHelper_1 = require("./CocosHelper");
var WindowMgr_1 = require("./WindowMgr");
var BAN_FALG = (cc.RenderFlow.FLAG_RENDER | cc.RenderFlow.FLAG_POST_RENDER);
/**
 * @Author: 邓朗
 * @Describe:
 * @Date: 2019-05-30 23:35:26
 * @Last Modified time: 2019-05-30 23:35:26
 */
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIModalScript = /** @class */ (function (_super) {
    __extends(UIModalScript, _super);
    function UIModalScript() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sprite = null;
        _this.camera = null;
        /** 代码创建一个单色texture */
        _this._texture = null;
        _this._renderTexture = null;
        _this._renderTextures = [];
        return _this;
    }
    /**
     * 初始化
     */
    UIModalScript.prototype.init = function () {
        var size = cc.view.getVisibleSize();
        this.node.height = size.height;
        this.node.width = size.width;
        this.node.addComponent(cc.Button);
        this.node.on('click', this.clickMaskWindow, this);
        this.sprite = this.node.addComponent(cc.Sprite);
        this.useNormalSprite(this.sprite);
        this.node.color = new cc.Color(255, 255, 255);
        this.node.opacity = 0;
        this.node.active = false;
        var node = new cc.Node("BlurCamera");
        this.camera = node.addComponent(cc.Camera);
        cc.find('Canvas').addChild(node);
    };
    // 
    UIModalScript.prototype.showModal = function (lucenyType, time, isEasing, dualBlur) {
        if (time === void 0) { time = 0.6; }
        if (isEasing === void 0) { isEasing = true; }
        if (dualBlur === void 0) { dualBlur = false; }
        return __awaiter(this, void 0, void 0, function () {
            var o;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (dualBlur) {
                            this.useDualBlurSprite(this.camera);
                            this.node.color = cc.Color.WHITE;
                        }
                        else {
                            this.useNormalSprite(this.sprite);
                            this.node.color = cc.Color.BLACK;
                        }
                        o = 0;
                        switch (lucenyType) {
                            case SysDefine_1.ModalOpacity.None:
                                this.node.active = false;
                                break;
                            case SysDefine_1.ModalOpacity.OpacityZero:
                                o = 0;
                                break;
                            case SysDefine_1.ModalOpacity.OpacityLow:
                                o = 63;
                                break;
                            case SysDefine_1.ModalOpacity.OpacityHalf:
                                o = 126;
                                break;
                            case SysDefine_1.ModalOpacity.OpacityHigh:
                                o = 189;
                                break;
                            case SysDefine_1.ModalOpacity.OpacityFull:
                                o = 255;
                                break;
                        }
                        if (!this.node.active)
                            return [2 /*return*/];
                        if (!isEasing) return [3 /*break*/, 2];
                        return [4 /*yield*/, CocosHelper_1.default.runTweenSync(this.node, cc.tween().to(time, { opacity: o }))];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.node.opacity = o;
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    UIModalScript.prototype.clickMaskWindow = function () {
        return __awaiter(this, void 0, void 0, function () {
            var com;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        com = UIManager_1.default.getInstance().getForm(this.fid);
                        if (!(com && com.modalType.clickMaskClose)) return [3 /*break*/, 2];
                        return [4 /*yield*/, WindowMgr_1.default.close(this.fid)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    UIModalScript.prototype.getSingleTexture = function () {
        if (this._texture)
            return this._texture;
        var data = new Uint8Array(2 * 2 * 4);
        for (var i = 0; i < 2; i++) {
            for (var j = 0; j < 2; j++) {
                data[i * 2 * 4 + j * 4 + 0] = 255;
                data[i * 2 * 4 + j * 4 + 1] = 255;
                data[i * 2 * 4 + j * 4 + 2] = 255;
                data[i * 2 * 4 + j * 4 + 3] = 255;
            }
        }
        var texture = new cc.Texture2D();
        texture.name = 'single color';
        texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, 2, 2);
        texture.handleLoadedTexture();
        this._texture = texture;
        texture.addRef();
        return this._texture;
    };
    UIModalScript.prototype.useNormalSprite = function (sprite) {
        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
        sprite.type = cc.Sprite.Type.SIMPLE;
        sprite.spriteFrame = new cc.SpriteFrame(this.getSingleTexture());
    };
    UIModalScript.prototype.useDualBlurSprite = function (camera) {
        var _this = this;
        var dirtyNodes = [];
        var disRenderChildren = function () {
            // 不渲染tips
            var tips = UIManager_1.default.getInstance().getUIROOT().getChildByName(SysDefine_1.SysDefine.SYS_TOPTIPS_NODE).children;
            for (var _i = 0, tips_1 = tips; _i < tips_1.length; _i++) {
                var node = tips_1[_i];
                if (!node._activeInHierarchy || node.opacity == 0)
                    continue;
                node['_dirtyRenderFlag'] = node._renderFlag;
                node._renderFlag &= ~(cc.RenderFlow.FLAG_CHILDREN | cc.RenderFlow.FLAG_RENDER);
                dirtyNodes.push(node);
            }
            // 不渲染自己和最上层的window
            _this.node._renderFlag &= ~cc.RenderFlow.FLAG_RENDER;
            var windows = UIManager_1.default.getInstance().getUIROOT().getChildByName(SysDefine_1.SysDefine.SYS_POPUP_NODE).children;
            for (var i = windows.length - 1; i >= 0; i--) {
                if (windows[i].zIndex > _this.node.zIndex) {
                    var node = windows[i];
                    if (!node._activeInHierarchy || node.opacity == 0)
                        continue;
                    node['_dirtyRenderFlag'] = node._renderFlag;
                    node._renderFlag &= ~(cc.RenderFlow.FLAG_CHILDREN | cc.RenderFlow.FLAG_RENDER);
                    dirtyNodes.push(node);
                }
            }
        };
        var rerenderChildren = function () {
            for (var _i = 0, dirtyNodes_1 = dirtyNodes; _i < dirtyNodes_1.length; _i++) {
                var node = dirtyNodes_1[_i];
                node._renderFlag = node['_dirtyRenderFlag'];
            }
        };
        if (!this._renderTexture) {
            var renderTexture = this._renderTexture = new cc.RenderTexture();
            renderTexture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.game._renderContext.STENCIL_INDEX8);
        }
        camera.enabled = true;
        camera.targetTexture = this._renderTexture;
        disRenderChildren();
        camera.render();
        rerenderChildren();
        this.sprite.spriteFrame.setTexture(camera.targetTexture);
        this.sprite.markForRender(true);
        this.renderDualBlur(camera, 3);
        camera.enabled = false;
    };
    UIModalScript.prototype.renderDualBlur = function (camera, iterations) {
        var size = cc.view.getVisibleSize();
        if (this._renderTextures.length <= 0) {
            for (var i = 0; i < iterations; i++) {
                var r = Math.pow(2, i);
                var renderTexture = new cc.RenderTexture();
                renderTexture.initWithSize((cc.visibleRect.width / r) | 0, (cc.visibleRect.height / r) | 0);
                this._renderTextures.push(renderTexture);
            }
        }
        if (!MaterialDown) {
            MaterialDown = this.genMaterial(EFFECT_DOWN);
            MaterialDown.setProperty('v_halfpixel', [0.5 / size.width, 0.5 / size.height]);
            MaterialDown.setProperty('v_offset', [4, 4]);
        }
        this.sprite.setMaterial(0, MaterialDown);
        for (var i = 0; i < iterations; i++) {
            camera.targetTexture = this._renderTextures[i];
            camera.render(this.sprite.node);
            this.sprite.spriteFrame.setTexture(camera.targetTexture);
            this.sprite.markForRender(true);
        }
        if (!MaterialUp) {
            MaterialUp = this.genMaterial(EFFECT_UP);
            MaterialUp.setProperty('v_halfpixel', [0.5 / size.width, 0.5 / size.height]);
            MaterialUp.setProperty('v_offset', [4, 4]);
        }
        this.sprite.setMaterial(0, MaterialUp);
        for (var i = iterations - 1; i > 0; i--) {
            camera.targetTexture = this._renderTextures[i - 1];
            camera.render(this.sprite.node);
            this.sprite.spriteFrame.setTexture(camera.targetTexture);
            this.sprite.markForRender(true);
        }
        this.sprite.setMaterial(0, cc.Material.getBuiltinMaterial('2d-sprite'));
    };
    UIModalScript.prototype.genMaterial = function (effect) {
        //@ts-ignore
        var asset = cc.deserialize(effect, { priority: 0, responseType: "json" });
        asset.onLoad && asset.onLoad();
        asset.__onLoadInvoked__ = true;
        return cc.Material.create(asset, 0);
    };
    UIModalScript = __decorate([
        ccclass
    ], UIModalScript);
    return UIModalScript;
}(cc.Component));
exports.default = UIModalScript;
var MaterialDown = null;
var MaterialUp = null;
var EFFECT_UP = {
    "__type__": "cc.EffectAsset",
    "_name": "BlurUp",
    "_objFlags": 0,
    "_native": "",
    "properties": null,
    "techniques": [
        {
            "passes": [
                {
                    "blendState": {
                        "targets": [
                            {
                                "blend": true
                            }
                        ]
                    },
                    "rasterizerState": {
                        "cullMode": 0
                    },
                    "properties": {
                        "texture": {
                            "value": "white",
                            "type": 29
                        },
                        "alphaThreshold": {
                            "value": [
                                0.5
                            ],
                            "type": 13
                        }
                    },
                    "program": "BlurUp|vs|fs"
                }
            ]
        }
    ],
    "shaders": [
        {
            "hash": 3005313742,
            "glsl3": {
                "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
                "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform CustomUniform {\n  vec2 v_halfpixel;\n  vec2 v_offset;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 sum = texture2D(texture, v_uv0) * 4.0;\n  sum += texture2D(texture, v_uv0 - v_halfpixel.xy * v_offset);\n  sum += texture2D(texture, v_uv0 + v_halfpixel.xy * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\n  sum += texture2D(texture, v_uv0 - vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\n  o = sum / 8.0;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"
            },
            "glsl1": {
                "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
                "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 v_halfpixel;\nuniform vec2 v_offset;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 sum = texture2D(texture, v_uv0) * 4.0;\n  sum += texture2D(texture, v_uv0 - v_halfpixel.xy * v_offset);\n  sum += texture2D(texture, v_uv0 + v_halfpixel.xy * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\n  sum += texture2D(texture, v_uv0 - vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset);\n  o = sum / 8.0;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"
            },
            "builtins": {
                "globals": {
                    "blocks": [
                        {
                            "name": "CCGlobal",
                            "defines": []
                        }
                    ],
                    "samplers": []
                },
                "locals": {
                    "blocks": [
                        {
                            "name": "CCLocal",
                            "defines": []
                        }
                    ],
                    "samplers": []
                }
            },
            "defines": [
                {
                    "name": "USE_TEXTURE",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "CC_USE_MODEL",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "USE_ALPHA_TEST",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "USE_BGRA",
                    "type": "boolean",
                    "defines": []
                }
            ],
            "blocks": [
                {
                    "name": "ALPHA_TEST",
                    "members": [
                        {
                            "name": "alphaThreshold",
                            "type": 13,
                            "count": 1
                        }
                    ],
                    "defines": [
                        "USE_ALPHA_TEST"
                    ],
                    "binding": 0
                },
                {
                    "name": "CustomUniform",
                    "members": [
                        {
                            "name": "v_halfpixel",
                            "type": 14,
                            "count": 1
                        },
                        {
                            "name": "v_offset",
                            "type": 14,
                            "count": 1
                        }
                    ],
                    "defines": [],
                    "binding": 1
                }
            ],
            "samplers": [
                {
                    "name": "texture",
                    "type": 29,
                    "count": 1,
                    "defines": [
                        "USE_TEXTURE"
                    ],
                    "binding": 30
                }
            ],
            "record": null,
            "name": "BlurUp|vs|fs"
        }
    ]
};
var EFFECT_DOWN = {
    "__type__": "cc.EffectAsset",
    "_name": "BlurDown",
    "_objFlags": 0,
    "_native": "",
    "properties": null,
    "techniques": [
        {
            "passes": [
                {
                    "blendState": {
                        "targets": [
                            {
                                "blend": true
                            }
                        ]
                    },
                    "rasterizerState": {
                        "cullMode": 0
                    },
                    "properties": {
                        "texture": {
                            "value": "white",
                            "type": 29
                        },
                        "alphaThreshold": {
                            "value": [
                                0.5
                            ],
                            "type": 13
                        }
                    },
                    "program": "BlurDown|vs|fs"
                }
            ]
        }
    ],
    "shaders": [
        {
            "hash": 4206633856,
            "glsl3": {
                "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
                "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform CustomUniform {\n  vec2 v_halfpixel;\n  vec2 v_offset;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 sum = texture2D(texture, v_uv0 + vec2(-v_halfpixel.x * 2.0, 0.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(0.0, v_halfpixel.y * 2.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x * 2.0, 0.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(0.0, -v_halfpixel.y * 2.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\n  o = sum / 12.0;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"
            },
            "glsl1": {
                "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
                "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 v_halfpixel;\nuniform vec2 v_offset;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 sum = texture2D(texture, v_uv0 + vec2(-v_halfpixel.x * 2.0, 0.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(0.0, v_halfpixel.y * 2.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x * 2.0, 0.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\n  sum += texture2D(texture, v_uv0 + vec2(0.0, -v_halfpixel.y * 2.0) * v_offset);\n  sum += texture2D(texture, v_uv0 + vec2(-v_halfpixel.x, -v_halfpixel.y) * v_offset) * 2.0;\n  o = sum / 12.0;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"
            },
            "builtins": {
                "globals": {
                    "blocks": [
                        {
                            "name": "CCGlobal",
                            "defines": []
                        }
                    ],
                    "samplers": []
                },
                "locals": {
                    "blocks": [
                        {
                            "name": "CCLocal",
                            "defines": []
                        }
                    ],
                    "samplers": []
                }
            },
            "defines": [
                {
                    "name": "USE_TEXTURE",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "CC_USE_MODEL",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "USE_ALPHA_TEST",
                    "type": "boolean",
                    "defines": []
                },
                {
                    "name": "USE_BGRA",
                    "type": "boolean",
                    "defines": []
                }
            ],
            "blocks": [
                {
                    "name": "ALPHA_TEST",
                    "members": [
                        {
                            "name": "alphaThreshold",
                            "type": 13,
                            "count": 1
                        }
                    ],
                    "defines": [
                        "USE_ALPHA_TEST"
                    ],
                    "binding": 0
                },
                {
                    "name": "CustomUniform",
                    "members": [
                        {
                            "name": "v_halfpixel",
                            "type": 14,
                            "count": 1
                        },
                        {
                            "name": "v_offset",
                            "type": 14,
                            "count": 1
                        }
                    ],
                    "defines": [],
                    "binding": 1
                }
            ],
            "samplers": [
                {
                    "name": "texture",
                    "type": 29,
                    "count": 1,
                    "defines": [
                        "USE_TEXTURE"
                    ],
                    "binding": 30
                }
            ],
            "record": null,
            "name": "BlurDown|vs|fs"
        }
    ]
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/ToastMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '94686RhMhBGzb0TUqfreBLz', 'ToastMgr');
// Script/UIFrame/ToastMgr.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIManager_1 = require("./UIManager");
var ToastMgr = /** @class */ (function () {
    function ToastMgr() {
        this._pools = cc.js.createMap();
    }
    ToastMgr.prototype.open = function (url, params, formData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    ToastMgr.prototype.close = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().closeForm(url)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return ToastMgr;
}());
exports.default = new ToastMgr();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9Ub2FzdE1nci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLHlDQUFvQztBQUVwQztJQUFBO1FBQ1ksV0FBTSxHQUErQixFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBV25FLENBQUM7SUFUZ0IsdUJBQUksR0FBakIsVUFBa0IsR0FBVyxFQUFFLE1BQVksRUFBRSxRQUFvQjs7Ozs7O0tBR2hFO0lBRVksd0JBQUssR0FBbEIsVUFBbUIsR0FBRzs7Ozs0QkFDbEIscUJBQU0sbUJBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUE7O3dCQUE1QyxTQUE0QyxDQUFDOzs7OztLQUNoRDtJQUVMLGVBQUM7QUFBRCxDQVpBLEFBWUMsSUFBQTtBQUVELGtCQUFlLElBQUksUUFBUSxFQUFFLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb29sIH0gZnJvbSBcIi4uL0NvbW1vbi9VdGlscy9Qb29sXCI7XG5pbXBvcnQgeyBJRm9ybURhdGEgfSBmcm9tIFwiLi9TdHJ1Y3RcIjtcbmltcG9ydCBVSU1hbmFnZXIgZnJvbSBcIi4vVUlNYW5hZ2VyXCI7XG5cbmNsYXNzIFRvYXN0TWdyIHtcbiAgICBwcml2YXRlIF9wb29sczoge1trZXk6IHN0cmluZ106IFBvb2w8YW55Pn0gPSBjYy5qcy5jcmVhdGVNYXAoKTtcblxuICAgIHB1YmxpYyBhc3luYyBvcGVuKHVybDogc3RyaW5nLCBwYXJhbXM/OiBhbnksIGZvcm1EYXRhPzogSUZvcm1EYXRhKSB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2UodXJsKSB7XG4gICAgICAgIGF3YWl0IFVJTWFuYWdlci5nZXRJbnN0YW5jZSgpLmNsb3NlRm9ybSh1cmwpO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgVG9hc3RNZ3IoKTtcblxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIFunction.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '26e9dYfX+tDUpk37S1FVqfx', 'UIFunction');
// Script/UIScript/UIFunction.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var AdapterMgr_1 = require("../UIFrame/AdapterMgr");
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var UIConfig_1 = require("./../UIConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIFunction = /** @class */ (function (_super) {
    __extends(UIFunction, _super);
    function UIFunction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UIFunction.prototype.start = function () {
        AdapterMgr_1.default.inst.adapteByType(AdapterMgr_1.AdapterType.Bottom, this.node, 50);
        this.view.Setting.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UISetting);
        }, this);
        this.view.Skills.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UISkills);
        }, this);
        this.view.ScrollHelper.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIScrollPlus);
        }, this);
    };
    UIFunction = __decorate([
        ccclass
    ], UIFunction);
    return UIFunction;
}(UIForm_1.UIFixed));
exports.default = UIFunction;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlGdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxvREFBZ0U7QUFDaEUsOENBQXlDO0FBQ3pDLDRDQUE0QztBQUU1QywwQ0FBcUM7QUFHL0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBd0MsOEJBQU87SUFBL0M7O0lBd0JBLENBQUM7SUFyQkcsZUFBZTtJQUVmLDBCQUFLLEdBQUw7UUFDSSxvQkFBVSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsd0JBQVcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVoRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDdkIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFVCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDdEIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNwQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFVCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7WUFDNUIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQTtRQUN2QyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFHYixDQUFDO0lBckJnQixVQUFVO1FBRDlCLE9BQU87T0FDYSxVQUFVLENBd0I5QjtJQUFELGlCQUFDO0NBeEJELEFBd0JDLENBeEJ1QyxnQkFBTyxHQXdCOUM7a0JBeEJvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJRnVuY3Rpb25fQXV0byBmcm9tIFwiLi4vQXV0b1NjcmlwdHMvVUlGdW5jdGlvbl9BdXRvXCI7XG5pbXBvcnQgQWRhcHRlck1nciwgeyBBZGFwdGVyVHlwZSB9IGZyb20gXCIuLi9VSUZyYW1lL0FkYXB0ZXJNZ3JcIjtcbmltcG9ydCBGb3JtTWdyIGZyb20gXCIuLi9VSUZyYW1lL0Zvcm1NZ3JcIjtcbmltcG9ydCB7IFVJRml4ZWQgfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcbmltcG9ydCBXaW5kb3dNZ3IgZnJvbSBcIi4uL1VJRnJhbWUvV2luZG93TWdyXCI7XG5pbXBvcnQgVUlDb25maWcgZnJvbSBcIi4vLi4vVUlDb25maWdcIjtcbmltcG9ydCBVSVNraWxscyBmcm9tIFwiLi9VSVNraWxsc1wiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJRnVuY3Rpb24gZXh0ZW5kcyBVSUZpeGVkIHtcbiAgICBcbiAgICB2aWV3OiBVSUZ1bmN0aW9uX0F1dG87XG4gICAgLy8gb25Mb2FkICgpIHt9XG5cbiAgICBzdGFydCAoKSB7XG4gICAgICAgIEFkYXB0ZXJNZ3IuaW5zdC5hZGFwdGVCeVR5cGUoQWRhcHRlclR5cGUuQm90dG9tLCB0aGlzLm5vZGUsIDUwKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudmlldy5TZXR0aW5nLmFkZENsaWNrKCgpID0+IHsgICAgICAgICAgICBcbiAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSVNldHRpbmcpO1xuICAgICAgICB9LCB0aGlzKTtcblxuICAgICAgICB0aGlzLnZpZXcuU2tpbGxzLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSVNraWxscyk7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMudmlldy5TY3JvbGxIZWxwZXIuYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJU2Nyb2xsUGx1cylcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgXG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UILight.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '60605S7mGxLPaah0MJrhkSn', 'UILight');
// Script/UIScript/UILight.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var TexturePlus_1 = require("../Common/Components/TexturePlus");
var Light_1 = require("../Common/Light/Light");
var LightUtils_1 = require("../Common/Light/LightUtils");
var Obstacle_1 = require("../Common/Light/Obstacle");
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILight = /** @class */ (function (_super) {
    __extends(UILight, _super);
    function UILight() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.obstacle = null;
        _this.light = null;
        _this.camera = null;
        _this.spShadow = null;
        _this._shadowTexture = new cc.RenderTexture();
        return _this;
    }
    UILight.prototype.onLoad = function () {
        var _this = this;
        cc.director.on(cc.Director.EVENT_BEFORE_DRAW, function () {
            _this._shadowTexture = new cc.RenderTexture();
            _this._shadowTexture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.game._renderContext.STENCIL_INDEX8);
            _this.camera.targetTexture = _this._shadowTexture;
        }, this);
        cc.director.on(cc.Director.EVENT_AFTER_DRAW, function () {
            _this.spShadow.spriteFrame.setTexture(_this._shadowTexture);
            _this.spShadow.spriteFrame.setFlipY(true);
            _this.spShadow.markForRender(true);
        }, this);
    };
    UILight.prototype.start = function () {
        var viewSize = cc.view.getVisibleSize();
        this.obstacle.addPolygon('', [
            cc.v2(0, 0), cc.v2(viewSize.width, 0), cc.v2(viewSize.width, viewSize.height), cc.v2(0, viewSize.height)
        ]);
        var ndObstacle = this.obstacle.node;
        var _loop_1 = function (i) {
            var node = ndObstacle.children[i];
            var com = node.getComponent(TexturePlus_1.default);
            if (!com)
                return "continue";
            var points = com.polygon.concat([]);
            points = points.map(function (e) { return e.add(node.getPosition()); });
            this_1.obstacle.addPolygon(com.node.uuid, points);
        };
        var this_1 = this;
        for (var i = 0; i < ndObstacle.childrenCount; i++) {
            _loop_1(i);
        }
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UILight.prototype.draw = function () {
        var polygons = this.obstacle.getPolygons(this.light.getBound());
        var intersections = LightUtils_1.default.getIntersections(this.light.node.getPosition(), polygons);
        this.light.draw(intersections);
    };
    UILight.prototype.update = function (dt) {
        this.draw();
    };
    __decorate([
        property(Obstacle_1.default)
    ], UILight.prototype, "obstacle", void 0);
    __decorate([
        property(Light_1.default)
    ], UILight.prototype, "light", void 0);
    __decorate([
        property(cc.Camera)
    ], UILight.prototype, "camera", void 0);
    __decorate([
        property(cc.Sprite)
    ], UILight.prototype, "spShadow", void 0);
    UILight = __decorate([
        ccclass
    ], UILight);
    return UILight;
}(UIForm_1.UIScreen));
exports.default = UILight;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlMaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBMkQ7QUFDM0QsK0NBQTBDO0FBQzFDLHlEQUFvRDtBQUNwRCxxREFBZ0Q7QUFDaEQsOENBQXlDO0FBQ3pDLDRDQUE2QztBQUV2QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFxQywyQkFBUTtJQUE3QztRQUFBLHFFQTZEQztRQTFEVyxjQUFRLEdBQWEsSUFBSSxDQUFDO1FBRTFCLFdBQUssR0FBVSxJQUFJLENBQUM7UUFHNUIsWUFBTSxHQUFjLElBQUksQ0FBQztRQUNKLGNBQVEsR0FBYyxJQUFJLENBQUM7UUFFeEMsb0JBQWMsR0FBcUIsSUFBSSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7O0lBa0R0RSxDQUFDO0lBaERHLHdCQUFNLEdBQU47UUFBQSxpQkFZQztRQVhHLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLEVBQUU7WUFDMUMsS0FBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztZQUM3QyxLQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNySCxLQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBRyxLQUFJLENBQUMsY0FBYyxDQUFDO1FBQ3BELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMs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T0FDYSxPQUFPLENBNkQzQjtJQUFELGNBQUM7Q0E3REQsQUE2REMsQ0E3RG9DLGlCQUFRLEdBNkQ1QztrQkE3RG9CLE9BQU8iLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlMaWdodF9BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSUxpZ2h0X0F1dG9cIjtcbmltcG9ydCBUZXh0dXJlUGx1cyBmcm9tIFwiLi4vQ29tbW9uL0NvbXBvbmVudHMvVGV4dHVyZVBsdXNcIjtcbmltcG9ydCBMaWdodCBmcm9tIFwiLi4vQ29tbW9uL0xpZ2h0L0xpZ2h0XCI7XG5pbXBvcnQgTGlnaHRVdGlscyBmcm9tIFwiLi4vQ29tbW9uL0xpZ2h0L0xpZ2h0VXRpbHNcIjtcbmltcG9ydCBPYnN0YWNsZSBmcm9tIFwiLi4vQ29tbW9uL0xpZ2h0L09ic3RhY2xlXCI7XG5pbXBvcnQgRm9ybU1nciBmcm9tIFwiLi4vVUlGcmFtZS9Gb3JtTWdyXCI7XG5pbXBvcnQgeyBVSVNjcmVlbiB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJTGlnaHQgZXh0ZW5kcyBVSVNjcmVlbiB7XG4gICAgXG4gICAgQHByb3BlcnR5KE9ic3RhY2xlKVxuICAgIHByaXZhdGUgb2JzdGFjbGU6IE9ic3RhY2xlID0gbnVsbDtcbiAgICBAcHJvcGVydHkoTGlnaHQpXG4gICAgcHJpdmF0ZSBsaWdodDogTGlnaHQgPSBudWxsO1xuXG4gICAgQHByb3BlcnR5KGNjLkNhbWVyYSlcbiAgICBjYW1lcmE6IGNjLkNhbWVyYSA9IG51bGw7XG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZSkgc3BTaGFkb3c6IGNjLlNwcml0ZSA9IG51bGw7XG5cbiAgICBwcml2YXRlIF9zaGFkb3dUZXh0dXJlOiBjYy5SZW5kZXJUZXh0dXJlID0gbmV3IGNjLlJlbmRlclRleHR1cmUoKTtcbiAgICB2aWV3OiBVSUxpZ2h0X0F1dG87XG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgY2MuZGlyZWN0b3Iub24oY2MuRGlyZWN0b3IuRVZFTlRfQkVGT1JFX0RSQVcsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3NoYWRvd1RleHR1cmUgPSBuZXcgY2MuUmVuZGVyVGV4dHVyZSgpO1xuICAgICAgICAgICAgdGhpcy5fc2hhZG93VGV4dHVyZS5pbml0V2l0aFNpemUoY2MudmlzaWJsZVJlY3Qud2lkdGgsIGNjLnZpc2libGVSZWN0LmhlaWdodCwgY2MuZ2FtZS5fcmVuZGVyQ29udGV4dC5TVEVOQ0lMX0lOREVYOCk7XG4gICAgICAgICAgICB0aGlzLmNhbWVyYS50YXJnZXRUZXh0dXJlID0gdGhpcy5fc2hhZG93VGV4dHVyZTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgY2MuZGlyZWN0b3Iub24oY2MuRGlyZWN0b3IuRVZFTlRfQUZURVJfRFJBVywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zcFNoYWRvdy5zcHJpdGVGcmFtZS5zZXRUZXh0dXJlKHRoaXMuX3NoYWRvd1RleHR1cmUpO1xuICAgICAgICAgICAgdGhpcy5zcFNoYWRvdy5zcHJpdGVGcmFtZS5zZXRGbGlwWSh0cnVlKTtcbiAgICAgICAgICAgIHRoaXMuc3BTaGFkb3cubWFya0ZvclJlbmRlcih0cnVlKVxuICAgICAgICB9LCB0aGlzKTtcbiAgICB9XG5cbiAgICBzdGFydCAoKSB7XG4gICAgICAgIGxldCB2aWV3U2l6ZSA9IGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZS5hZGRQb2x5Z29uKCcnLCBbXG4gICAgICAgICAgICBjYy52MigwLCAwKSwgY2MudjIodmlld1NpemUud2lkdGgsIDApLCBjYy52Mih2aWV3U2l6ZS53aWR0aCwgdmlld1NpemUuaGVpZ2h0KSwgY2MudjIoMCwgdmlld1NpemUuaGVpZ2h0KVxuICAgICAgICBdKTtcblxuICAgICAgICBsZXQgbmRPYnN0YWNsZSA9IHRoaXMub2JzdGFjbGUubm9kZTtcbiAgICAgICAgZm9yKGxldCBpPTA7IGk8bmRPYnN0YWNsZS5jaGlsZHJlbkNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGxldCBub2RlID0gbmRPYnN0YWNsZS5jaGlsZHJlbltpXTtcbiAgICAgICAgICAgIGxldCBjb20gPSBub2RlLmdldENvbXBvbmVudChUZXh0dXJlUGx1cyk7XG4gICAgICAgICAgICBpZighY29tKSBjb250aW51ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IHBvaW50cyA9IGNvbS5wb2x5Z29uLmNvbmNhdChbXSk7XG4gICAgICAgICAgICBwb2ludHMgPSBwb2ludHMubWFwKGUgPT4gZS5hZGQobm9kZS5nZXRQb3NpdGlvbigpKSk7XG5cbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGUuYWRkUG9seWdvbihjb20ubm9kZS51dWlkLCBwb2ludHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy52aWV3LkJhY2suYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5iYWNrU2NlbmUoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfVxuXG5cbiAgICBwcml2YXRlIGRyYXcoKSB7XG4gICAgICAgIGxldCBwb2x5Z29ucyA9IHRoaXMub2JzdGFjbGUuZ2V0UG9seWdvbnModGhpcy5saWdodC5nZXRCb3VuZCgpKTtcbiAgICAgICAgXG4gICAgICAgIGxldCBpbnRlcnNlY3Rpb25zID0gTGlnaHRVdGlscy5nZXRJbnRlcnNlY3Rpb25zKHRoaXMubGlnaHQubm9kZS5nZXRQb3NpdGlvbigpLCBwb2x5Z29ucyk7XG4gICAgICAgIHRoaXMubGlnaHQuZHJhdyhpbnRlcnNlY3Rpb25zKTtcbiAgICB9XG5cbiAgICB1cGRhdGUgKGR0OiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5kcmF3KCk7ICAgICAgIFxuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIHome.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ce700EVbt5MTrg0Llyxj9zb', 'UIHome');
// Script/UIScript/UIHome.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var UIManager_1 = require("../UIFrame/UIManager");
var UIConfig_1 = require("./../UIConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIHome = /** @class */ (function (_super) {
    __extends(UIHome, _super);
    function UIHome() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.model = 5;
        return _this;
        // update (dt) {}
    }
    UIHome.prototype.load = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, UIManager_1.default.getInstance().openForm(UIConfig_1.default.UISound.prefabUrl)];
                    case 1:
                        _a.sent();
                        ;
                        return [2 /*return*/, null];
                }
            });
        });
    };
    UIHome.prototype.refreshView = function () {
        console.log(this.model);
    };
    UIHome.prototype.start = function () {
        this.view.Start.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIMap);
        }, this);
        this.view.About.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIAbout);
        }, this);
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UIHome = __decorate([
        ccclass
    ], UIHome);
    return UIHome;
}(UIForm_1.UIScreen));
exports.default = UIHome;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlIb21lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDhDQUF5QztBQUN6Qyw0Q0FBc0Q7QUFDdEQsa0RBQTZDO0FBQzdDLDBDQUFxQztBQUcvQixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFvQywwQkFBUTtJQUE1QztRQUFBLHFFQTRCQztRQXBCRyxXQUFLLEdBQUcsQ0FBQyxDQUFDOztRQW1CVixpQkFBaUI7SUFDckIsQ0FBQztJQXpCUyxxQkFBSSxHQUFWOzs7OzRCQUNJLHFCQUFNLG1CQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLGtCQUFRLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFBOzt3QkFBbEUsU0FBa0UsQ0FBQzt3QkFBQSxDQUFDO3dCQUNwRSxzQkFBTyxJQUFJLEVBQUM7Ozs7S0FDZjtJQUdELDRCQUFXLEdBQVg7UUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUMzQixDQUFDO0lBRUQsc0JBQUssR0FBTDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2pDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25DLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNwQixpQkFBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNiLENBQUM7SUF6QmdCLE1BQU07UUFEMUIsT0FBTztPQUNhLE1BQU0sQ0E0QjFCO0lBQUQsYUFBQztDQTVCRCxBQTRCQyxDQTVCbUMsaUJBQVEsR0E0QjNDO2tCQTVCb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSUhvbWVfQXV0byBmcm9tIFwiLi4vQXV0b1NjcmlwdHMvVUlIb21lX0F1dG9cIjtcbmltcG9ydCBGb3JtTWdyIGZyb20gXCIuLi9VSUZyYW1lL0Zvcm1NZ3JcIjtcbmltcG9ydCB7IFVJRml4ZWQsIFVJU2NyZWVuIH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5pbXBvcnQgVUlNYW5hZ2VyIGZyb20gXCIuLi9VSUZyYW1lL1VJTWFuYWdlclwiO1xuaW1wb3J0IFVJQ29uZmlnIGZyb20gXCIuLy4uL1VJQ29uZmlnXCI7XG5cblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUhvbWUgZXh0ZW5kcyBVSVNjcmVlbiB7XG5cbiAgICBwdWJsaWMgdmlldzogVUlIb21lX0F1dG87XG4gICAgYXN5bmMgbG9hZCgpIHtcbiAgICAgICAgYXdhaXQgVUlNYW5hZ2VyLmdldEluc3RhbmNlKCkub3BlbkZvcm0oVUlDb25maWcuVUlTb3VuZC5wcmVmYWJVcmwpOztcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgbW9kZWwgPSA1O1xuICAgIHJlZnJlc2hWaWV3KCkge1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm1vZGVsKVxuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LlN0YXJ0LmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSU1hcCk7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMudmlldy5BYm91dC5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlBYm91dCk7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMudmlldy5CYWNrLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3IuYmFja1NjZW5lKCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UILoading.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2580cHflTxBzYtR5gDT9n2h', 'UILoading');
// Script/UIScript/UILoading.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var AdapterMgr_1 = require("../UIFrame/AdapterMgr");
var CocosHelper_1 = require("../UIFrame/CocosHelper");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILoading = /** @class */ (function (_super) {
    __extends(UILoading, _super);
    function UILoading() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UILoading.prototype.start = function () {
    };
    UILoading.prototype.showEffect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var len;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        len = AdapterMgr_1.default.inst.visibleSize.width / 2 + this.view.Left.width / 2;
                        this.view.Left.x = -len;
                        this.view.Right.x = len;
                        return [4 /*yield*/, Promise.all([
                                CocosHelper_1.default.runTweenSync(this.view.Left, cc.tween().to(0.3, { x: -480 }, cc.easeIn(3.0))),
                                CocosHelper_1.default.runTweenSync(this.view.Right, cc.tween().to(0.3, { x: 480 }, cc.easeIn(3.0)))
                            ])];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UILoading.prototype.hideEffect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var len;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        len = AdapterMgr_1.default.inst.visibleSize.width / 2 + this.view.Left.width / 2;
                        this.view.Left.x = -480;
                        this.view.Right.x = 480;
                        return [4 /*yield*/, CocosHelper_1.default.sleepSync(0.5)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, Promise.all([
                                CocosHelper_1.default.runTweenSync(this.view.Left, cc.tween().to(0.3, { x: -len }, cc.easeIn(3.0))),
                                CocosHelper_1.default.runTweenSync(this.view.Right, cc.tween().to(0.3, { x: len }, cc.easeIn(3.0)))
                            ])];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UILoading = __decorate([
        ccclass
    ], UILoading);
    return UILoading;
}(UIForm_1.UITips));
exports.default = UILoading;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlMb2FkaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxzREFBaUQ7QUFDakQsNENBQTJDO0FBRXJDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXVDLDZCQUFNO0lBQTdDOztJQWtDQSxDQUFDO0lBOUJHLGVBQWU7SUFFZix5QkFBSyxHQUFMO0lBRUEsQ0FBQztJQUVLLDhCQUFVLEdBQWhCOzs7Ozs7d0JBQ1EsR0FBRyxHQUFHLG9CQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUM7d0JBQ3ZFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQzt3QkFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQzt3QkFFeEIscUJBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztnQ0FDZCxxQkFBVyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQ0FDdkYscUJBQVcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBQyxDQUFDLEVBQUUsR0FBRyxFQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDOzZCQUMxRixDQUFDLEVBQUE7O3dCQUhGLFNBR0UsQ0FBQzs7Ozs7S0FDTjtJQUVLLDhCQUFVLEdBQWhCOzs7Ozs7d0JBQ1EsR0FBRyxHQUFHLG9CQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUM7d0JBQ3ZFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQzt3QkFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQzt3QkFFeEIscUJBQU0scUJBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUE7O3dCQUFoQyxTQUFnQyxDQUFDO3dCQUNqQyxxQkFBTSxPQUFPLENBQUMsR0FBRyxDQUFDO2dDQUNkLHFCQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dDQUN2RixxQkFBVyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFDLENBQUMsRUFBRSxHQUFHLEVBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7NkJBQzFGLENBQUMsRUFBQTs7d0JBSEYsU0FHRSxDQUFDOzs7OztLQUNOO0lBL0JnQixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBa0M3QjtJQUFELGdCQUFDO0NBbENELEFBa0NDLENBbENzQyxlQUFNLEdBa0M1QztrQkFsQ29CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlMb2FkaW5nX0F1dG8gZnJvbSBcIi4uL0F1dG9TY3JpcHRzL1VJTG9hZGluZ19BdXRvXCI7XG5pbXBvcnQgQWRhcHRlck1nciBmcm9tIFwiLi4vVUlGcmFtZS9BZGFwdGVyTWdyXCI7XG5pbXBvcnQgQ29jb3NIZWxwZXIgZnJvbSBcIi4uL1VJRnJhbWUvQ29jb3NIZWxwZXJcIjtcbmltcG9ydCB7IFVJVGlwcyB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJTG9hZGluZyBleHRlbmRzIFVJVGlwcyB7XG4gICAgXG4gICAgdmlldzogVUlMb2FkaW5nX0F1dG87XG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIGFzeW5jIHNob3dFZmZlY3QoKSB7XG4gICAgICAgIGxldCBsZW4gPSBBZGFwdGVyTWdyLmluc3QudmlzaWJsZVNpemUud2lkdGgvMiArIHRoaXMudmlldy5MZWZ0LndpZHRoLzI7XG4gICAgICAgIHRoaXMudmlldy5MZWZ0LnggPSAtbGVuO1xuICAgICAgICB0aGlzLnZpZXcuUmlnaHQueCA9IGxlbjtcblxuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy52aWV3LkxlZnQsIGNjLnR3ZWVuKCkudG8oMC4zLCB7eDogLTQ4MH0sIGNjLmVhc2VJbigzLjApKSksXG4gICAgICAgICAgICBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy52aWV3LlJpZ2h0LCBjYy50d2VlbigpLnRvKDAuMywge3g6IDQ4MH0sIGNjLmVhc2VJbigzLjApKSlcbiAgICAgICAgXSk7XG4gICAgfVxuXG4gICAgYXN5bmMgaGlkZUVmZmVjdCgpIHtcbiAgICAgICAgbGV0IGxlbiA9IEFkYXB0ZXJNZ3IuaW5zdC52aXNpYmxlU2l6ZS53aWR0aC8yICsgdGhpcy52aWV3LkxlZnQud2lkdGgvMjtcbiAgICAgICAgdGhpcy52aWV3LkxlZnQueCA9IC00ODA7XG4gICAgICAgIHRoaXMudmlldy5SaWdodC54ID0gNDgwO1xuXG4gICAgICAgIGF3YWl0IENvY29zSGVscGVyLnNsZWVwU3luYygwLjUpO1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy52aWV3LkxlZnQsIGNjLnR3ZWVuKCkudG8oMC4zLCB7eDogLWxlbn0sIGNjLmVhc2VJbigzLjApKSksXG4gICAgICAgICAgICBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy52aWV3LlJpZ2h0LCBjYy50d2VlbigpLnRvKDAuMywge3g6IGxlbn0sIGNjLmVhc2VJbigzLjApKSlcbiAgICAgICAgXSk7XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIMap.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '33fc2k7hdlDAbJbP9yEwnBb', 'UIMap');
// Script/UIScript/UIMap.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var UIConfig_1 = require("./../UIConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIMap = /** @class */ (function (_super) {
    __extends(UIMap, _super);
    function UIMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    UIMap.prototype.load = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // await FormMgr.open(UIConfig.UIFunction);
                return [2 /*return*/, ''];
            });
        });
    };
    UIMap.prototype.start = function () {
        this.view.Round.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIGame);
        }, this);
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UIMap = __decorate([
        ccclass
    ], UIMap);
    return UIMap;
}(UIForm_1.UIScreen));
exports.default = UIMap;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlNYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsOENBQXlDO0FBQ3pDLDRDQUE2QztBQUM3QywwQ0FBcUM7QUFFL0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBbUMseUJBQVE7SUFBM0M7O0lBdUJBLENBQUM7SUFuQkcsd0JBQXdCO0lBRXhCLGVBQWU7SUFFVCxvQkFBSSxHQUFWOzs7Z0JBQ0ksMkNBQTJDO2dCQUMzQyxzQkFBTyxFQUFFLEVBQUM7OztLQUNiO0lBRUQscUJBQUssR0FBTDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNwQixpQkFBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNiLENBQUM7SUFwQmdCLEtBQUs7UUFEekIsT0FBTztPQUNhLEtBQUssQ0F1QnpCO0lBQUQsWUFBQztDQXZCRCxBQXVCQyxDQXZCa0MsaUJBQVEsR0F1QjFDO2tCQXZCb0IsS0FBSyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSU1hcF9BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSU1hcF9BdXRvXCI7XG5pbXBvcnQgRm9ybU1nciBmcm9tIFwiLi4vVUlGcmFtZS9Gb3JtTWdyXCI7XG5pbXBvcnQgeyBVSVNjcmVlbiB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuaW1wb3J0IFVJQ29uZmlnIGZyb20gXCIuLy4uL1VJQ29uZmlnXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlNYXAgZXh0ZW5kcyBVSVNjcmVlbiB7XG5cbiAgICB2aWV3OiBVSU1hcF9BdXRvO1xuXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIGFzeW5jIGxvYWQoKSB7XG4gICAgICAgIC8vIGF3YWl0IEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSUZ1bmN0aW9uKTtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LlJvdW5kLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSUdhbWUpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy52aWV3LkJhY2suYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5iYWNrU2NlbmUoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIPop.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8fc71BDtH9K7Js1AoFqRdoT', 'UIPop');
// Script/UIScript/UIPop.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SysDefine_1 = require("../UIFrame/config/SysDefine");
var Struct_1 = require("../UIFrame/Struct");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIPop = /** @class */ (function (_super) {
    __extends(UIPop, _super);
    function UIPop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modalType = new Struct_1.ModalType(SysDefine_1.ModalOpacity.OpacityHalf);
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UIPop.prototype.start = function () {
        var _this = this;
        this.view.Close.addClick(function () {
            _this.closeSelf();
        }, this);
    };
    UIPop = __decorate([
        ccclass
    ], UIPop);
    return UIPop;
}(UIForm_1.UIWindow));
exports.default = UIPop;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlQb3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEseURBQTJEO0FBQzNELDRDQUE4QztBQUM5Qyw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBbUMseUJBQVE7SUFBM0M7UUFBQSxxRUFnQkM7UUFkRyxlQUFTLEdBQWMsSUFBSSxrQkFBUyxDQUFDLHdCQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7O1FBYS9ELGlCQUFpQjtJQUNyQixDQUFDO0lBVkcsZUFBZTtJQUVmLHFCQUFLLEdBQUw7UUFBQSxpQkFJQztRQUhHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixLQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDckIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQVpnQixLQUFLO1FBRHpCLE9BQU87T0FDYSxLQUFLLENBZ0J6QjtJQUFELFlBQUM7Q0FoQkQsQUFnQkMsQ0FoQmtDLGlCQUFRLEdBZ0IxQztrQkFoQm9CLEtBQUsiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlQb3BfQXV0byBmcm9tIFwiLi4vQXV0b1NjcmlwdHMvVUlQb3BfQXV0b1wiO1xuaW1wb3J0IENvY29zSGVscGVyIGZyb20gXCIuLi9VSUZyYW1lL0NvY29zSGVscGVyXCI7XG5pbXBvcnQgeyBNb2RhbE9wYWNpdHkgfSBmcm9tIFwiLi4vVUlGcmFtZS9jb25maWcvU3lzRGVmaW5lXCI7XG5pbXBvcnQgeyBNb2RhbFR5cGUgfSBmcm9tIFwiLi4vVUlGcmFtZS9TdHJ1Y3RcIjtcbmltcG9ydCB7IFVJV2luZG93IH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlQb3AgZXh0ZW5kcyBVSVdpbmRvdyB7XG5cbiAgICBtb2RhbFR5cGU6IE1vZGFsVHlwZSA9IG5ldyBNb2RhbFR5cGUoTW9kYWxPcGFjaXR5Lk9wYWNpdHlIYWxmKTtcblxuICAgIHZpZXc6IFVJUG9wX0F1dG87XG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LkNsb3NlLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VTZWxmKCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIMeshTexture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7cba6kU26RE2Ls8irff3+Tu', 'UIMeshTexture');
// Script/UIScript/UIMeshTexture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIMeshTexture = /** @class */ (function (_super) {
    __extends(UIMeshTexture, _super);
    function UIMeshTexture() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UIMeshTexture.prototype.start = function () {
    };
    UIMeshTexture = __decorate([
        ccclass
    ], UIMeshTexture);
    return UIMeshTexture;
}(UIForm_1.UIScreen));
exports.default = UIMeshTexture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlNZXNoVGV4dHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQVE7SUFBbkQ7O0lBV0EsQ0FBQztJQVBHLGVBQWU7SUFFZiw2QkFBSyxHQUFMO0lBRUEsQ0FBQztJQVJnQixhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBV2pDO0lBQUQsb0JBQUM7Q0FYRCxBQVdDLENBWDBDLGlCQUFRLEdBV2xEO2tCQVhvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVUlTY3JlZW4gfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSU1lc2hUZXh0dXJlIGV4dGVuZHMgVUlTY3JlZW4ge1xuXG5cblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuXG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIMobx.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f8edzvxDRFL6ID2paZM9Ss', 'UIMobx');
// Script/UIScript/UIMobx.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var mobx_1 = require("../Common/Mobx/mobx");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIMobx = /** @class */ (function (_super) {
    __extends(UIMobx, _super);
    function UIMobx() {
        var _this = _super.call(this) || this;
        _this.num1 = 0;
        _this.num2 = 0;
        _this.obj = { num3: 0 };
        // mobx6版本中使用注解必须调用此方法
        mobx_1.makeAutoObservable(_this);
        return _this;
    }
    Object.defineProperty(UIMobx.prototype, "total", {
        get: function () {
            return this.num1 * this.num2;
        },
        enumerable: false,
        configurable: true
    });
    UIMobx.prototype.refreshView = function () {
        this.view.Txt1.string = '' + this.num1;
        this.view.Txt2.string = '' + this.num2;
        this.view.Txt3.string = '' + this.total;
    };
    // onLoad () {}
    UIMobx.prototype.start = function () {
        var _this = this;
        this.view.Close.addClick(function () {
            _this.closeSelf();
        }, this);
        mobx_1.autorun(this.refreshView.bind(this));
        mobx_1.when(function () { return _this.total > 10; }).then(function () {
            _this.view.Txt4.node.active = _this.total > 10;
        });
        mobx_1.reaction((function () { return _this.obj && _this.obj.num3; }), function (arg, prev, r) {
            if (!cc.isValid(_this.node))
                return;
            _this.view.Txt5.string = '' + arg;
            // r.dispose();
        });
        this.view.Btn1.addClick(function () {
            _this.num1++;
        }, this);
        this.view.Btn2.addClick(function () {
            _this.num2++;
        }, this);
        this.view.Btn3.addClick(function () {
            _this.obj.num3++;
        }, this);
    };
    UIMobx.prototype.onShow = function () {
    };
    __decorate([
        mobx_1.observable
    ], UIMobx.prototype, "num1", void 0);
    __decorate([
        mobx_1.observable
    ], UIMobx.prototype, "num2", void 0);
    __decorate([
        mobx_1.computed
    ], UIMobx.prototype, "total", null);
    __decorate([
        mobx_1.observable
    ], UIMobx.prototype, "obj", void 0);
    UIMobx = __decorate([
        ccclass
    ], UIMobx);
    return UIMobx;
}(UIForm_1.UIWindow));
exports.default = UIMobx;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlNb2J4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDRDQUF5SDtBQUN6SCw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBb0MsMEJBQVE7SUFLeEM7UUFBQSxZQUNJLGlCQUFPLFNBR1Y7UUFFVyxVQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ1QsVUFBSSxHQUFHLENBQUMsQ0FBQztRQUlULFNBQUcsR0FBRyxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUMsQ0FBQztRQVR4QixzQkFBc0I7UUFDdEIseUJBQWtCLENBQUMsS0FBSSxDQUFDLENBQUM7O0lBQzdCLENBQUM7SUFJUyxzQkFBSSx5QkFBSzthQUFUO1lBQ04sT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFHRCw0QkFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDNUMsQ0FBQztJQUVELGVBQWU7SUFFZixzQkFBSyxHQUFMO1FBQUEsaUJBMkJDO1FBMUJHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixLQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDckIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ1QsY0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFckMsV0FBSSxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsRUFBZixDQUFlLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDN0IsS0FBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNqRCxDQUFDLENBQUMsQ0FBQztRQUVILGVBQVEsQ0FBQyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsR0FBRyxJQUFJLEtBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUF6QixDQUF5QixDQUFDLEVBQUUsVUFBQyxHQUFRLEVBQUUsSUFBWSxFQUFFLENBQWtCO1lBQ25GLElBQUcsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQUUsT0FBUTtZQUNuQyxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUNqQyxlQUFlO1FBQ25CLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BCLEtBQUksQ0FBQyxJQUFJLEVBQUcsQ0FBQztRQUNqQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDcEIsS0FBSSxDQUFDLElBQUksRUFBRyxDQUFDO1FBQ2pCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNwQixLQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRyxDQUFDO1FBQ3JCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUViLENBQUM7SUFPRCx1QkFBTSxHQUFOO0lBRUEsQ0FBQztJQW5EVztRQUFYLGlCQUFVO3dDQUFVO0lBQ1Q7UUFBWCxpQkFBVTt3Q0FBVTtJQUNYO1FBQVQsZUFBUTt1Q0FFUjtJQUNXO1FBQVgsaUJBQVU7dUNBQWlCO0lBaEJYLE1BQU07UUFEMUIsT0FBTztPQUNhLE1BQU0sQ0FpRTFCO0lBQUQsYUFBQztDQWpFRCxBQWlFQyxDQWpFbUMsaUJBQVEsR0FpRTNDO2tCQWpFb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSU1vYnhfQXV0byBmcm9tIFwiLi4vQXV0b1NjcmlwdHMvVUlNb2J4X0F1dG9cIjtcbmltcG9ydCB7IG9ic2VydmFibGUsIGNvbXB1dGVkLCByZWFjdGlvbiwgYXV0b3J1biwgd2hlbiwgSVJlYWN0aW9uUHVibGljLCBtYWtlQXV0b09ic2VydmFibGUgfSBmcm9tIFwiLi4vQ29tbW9uL01vYngvbW9ieFwiO1xuaW1wb3J0IHsgVUlXaW5kb3cgfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSU1vYnggZXh0ZW5kcyBVSVdpbmRvdyB7XG5cblxuICAgIHZpZXc6IFVJTW9ieF9BdXRvO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIC8vIG1vYng254mI5pys5Lit5L2/55So5rOo6Kej5b+F6aG76LCD55So5q2k5pa55rOVXG4gICAgICAgIG1ha2VBdXRvT2JzZXJ2YWJsZSh0aGlzKTtcbiAgICB9XG4gICAgXG4gICAgQG9ic2VydmFibGUgbnVtMSA9IDA7XG4gICAgQG9ic2VydmFibGUgbnVtMiA9IDA7XG4gICAgQGNvbXB1dGVkIGdldCB0b3RhbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubnVtMSAqIHRoaXMubnVtMjtcbiAgICB9XG4gICAgQG9ic2VydmFibGUgb2JqID0ge251bTM6IDB9O1xuXG4gICAgcmVmcmVzaFZpZXcoKSB7XG4gICAgICAgIHRoaXMudmlldy5UeHQxLnN0cmluZyA9ICcnICsgdGhpcy5udW0xO1xuICAgICAgICB0aGlzLnZpZXcuVHh0Mi5zdHJpbmcgPSAnJyArIHRoaXMubnVtMjtcbiAgICAgICAgdGhpcy52aWV3LlR4dDMuc3RyaW5nID0gJycgKyB0aGlzLnRvdGFsO1xuICAgIH1cblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuICAgICAgICB0aGlzLnZpZXcuQ2xvc2UuYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZVNlbGYoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIGF1dG9ydW4odGhpcy5yZWZyZXNoVmlldy5iaW5kKHRoaXMpKTtcbiAgICAgICAgXG4gICAgICAgIHdoZW4oKCkgPT4gdGhpcy50b3RhbCA+IDEwKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudmlldy5UeHQ0Lm5vZGUuYWN0aXZlID0gdGhpcy50b3RhbCA+IDEwO1xuICAgICAgICB9KTtcblxuICAgICAgICByZWFjdGlvbigoKCkgPT4gdGhpcy5vYmogJiYgdGhpcy5vYmoubnVtMyksIChhcmc6IGFueSwgcHJldjogbnVtYmVyLCByOiBJUmVhY3Rpb25QdWJsaWMpID0+IHtcbiAgICAgICAgICAgIGlmKCFjYy5pc1ZhbGlkKHRoaXMubm9kZSkpIHJldHVybiA7XG4gICAgICAgICAgICB0aGlzLnZpZXcuVHh0NS5zdHJpbmcgPSAnJyArIGFyZztcbiAgICAgICAgICAgIC8vIHIuZGlzcG9zZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnZpZXcuQnRuMS5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm51bTEgKys7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgICB0aGlzLnZpZXcuQnRuMi5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm51bTIgKys7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMudmlldy5CdG4zLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMub2JqLm51bTMgKys7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgICBcbiAgICB9XG5cbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgb25TaG93KCkge1xuICAgICAgICBcbiAgICB9XG5cblxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UINavigator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '64d76l/v4JPK6JM5Y8OH42G', 'UINavigator');
// Script/UIScript/UINavigator.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var UIConfig_1 = require("./../UIConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UINavigator = /** @class */ (function (_super) {
    __extends(UINavigator, _super);
    function UINavigator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UINavigator.prototype.start = function () {
        var content = this.view.Scroll.content;
        for (var _i = 0, _a = content.children; _i < _a.length; _i++) {
            var e = _a[_i];
            e.on(cc.Node.EventType.TOUCH_END, this.onClickButton, this);
        }
    };
    UINavigator.prototype.onClickButton = function (e) {
        var node = e.getCurrentTarget();
        switch (node.name) {
            case "project":
                FormMgr_1.default.open(UIConfig_1.default.UIHome);
                break;
            case "light":
                FormMgr_1.default.open(UIConfig_1.default.UILight);
                break;
            case "capture":
                FormMgr_1.default.open(UIConfig_1.default.UICapture);
                break;
            case "mobx":
                FormMgr_1.default.open(UIConfig_1.default.UIMobx);
                break;
            case "dungeon":
                FormMgr_1.default.open(UIConfig_1.default.UIDungeon);
                break;
            case "splitTexture":
                FormMgr_1.default.open(UIConfig_1.default.UISplitTexture);
                break;
            case "scrollTexture":
                FormMgr_1.default.open(UIConfig_1.default.UIScrollTexture);
                break;
            case "meshTexture":
                FormMgr_1.default.open(UIConfig_1.default.UIMeshTexture);
                break;
        }
    };
    UINavigator = __decorate([
        ccclass
    ], UINavigator);
    return UINavigator;
}(UIForm_1.UIScreen));
exports.default = UINavigator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlOYXZpZ2F0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsOENBQXlDO0FBQ3pDLDRDQUE2QztBQUM3QywwQ0FBcUM7QUFHL0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBeUMsK0JBQVE7SUFBakQ7O0lBMENBLENBQUM7SUF0Q0csMkJBQUssR0FBTDtRQUNJLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztRQUN2QyxLQUFlLFVBQWdCLEVBQWhCLEtBQUEsT0FBTyxDQUFDLFFBQVEsRUFBaEIsY0FBZ0IsRUFBaEIsSUFBZ0IsRUFBRTtZQUE3QixJQUFNLENBQUMsU0FBQTtZQUNQLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0lBRUQsbUNBQWEsR0FBYixVQUFjLENBQXNCO1FBQ2hDLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ2hDLFFBQU8sSUFBSSxDQUFDLElBQUksRUFBRTtZQUNkLEtBQUssU0FBUztnQkFDVixpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixNQUFNO1lBQ1YsS0FBSyxPQUFPO2dCQUNSLGlCQUFPLENBQUMsSUFBSSxDQUFDLGtCQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQy9CLE1BQU07WUFDVixLQUFLLFNBQVM7Z0JBQ1YsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDakMsTUFBTTtZQUNWLEtBQUssTUFBTTtnQkFDUCxpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixNQUFNO1lBQ1YsS0FBSyxTQUFTO2dCQUNWLGlCQUFPLENBQUMsSUFBSSxDQUFDLGtCQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2pDLE1BQU07WUFDVixLQUFLLGNBQWM7Z0JBQ2YsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztnQkFDdEMsTUFBTTtZQUNWLEtBQUssZUFBZTtnQkFDaEIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDdkMsTUFBTTtZQUNWLEtBQUssYUFBYTtnQkFDZCxpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUNyQyxNQUFNO1NBQ2I7SUFDTCxDQUFDO0lBdkNnQixXQUFXO1FBRC9CLE9BQU87T0FDYSxXQUFXLENBMEMvQjtJQUFELGtCQUFDO0NBMUNELEFBMENDLENBMUN3QyxpQkFBUSxHQTBDaEQ7a0JBMUNvQixXQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJTmF2aWdhdG9yX0F1dG8gZnJvbSBcIi4uL0F1dG9TY3JpcHRzL1VJTmF2aWdhdG9yX0F1dG9cIjtcbmltcG9ydCBGb3JtTWdyIGZyb20gXCIuLi9VSUZyYW1lL0Zvcm1NZ3JcIjtcbmltcG9ydCB7IFVJU2NyZWVuIH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5pbXBvcnQgVUlDb25maWcgZnJvbSBcIi4vLi4vVUlDb25maWdcIjtcblxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJTmF2aWdhdG9yIGV4dGVuZHMgVUlTY3JlZW4ge1xuXG4gICAgdmlldzogVUlOYXZpZ2F0b3JfQXV0bztcblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzLnZpZXcuU2Nyb2xsLmNvbnRlbnQ7XG4gICAgICAgIGZvcihjb25zdCBlIG9mIGNvbnRlbnQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCB0aGlzLm9uQ2xpY2tCdXR0b24sIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25DbGlja0J1dHRvbihlOiBjYy5FdmVudC5FdmVudFRvdWNoKSB7XG4gICAgICAgIGxldCBub2RlID0gZS5nZXRDdXJyZW50VGFyZ2V0KCk7XG4gICAgICAgIHN3aXRjaChub2RlLm5hbWUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJwcm9qZWN0XCI6XG4gICAgICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJSG9tZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibGlnaHRcIjpcbiAgICAgICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlMaWdodCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiY2FwdHVyZVwiOlxuICAgICAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSUNhcHR1cmUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1vYnhcIjpcbiAgICAgICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlNb2J4KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJkdW5nZW9uXCI6XG4gICAgICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJRHVuZ2Vvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwic3BsaXRUZXh0dXJlXCI6XG4gICAgICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJU3BsaXRUZXh0dXJlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY3JvbGxUZXh0dXJlXCI6XG4gICAgICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJU2Nyb2xsVGV4dHVyZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWVzaFRleHR1cmVcIjpcbiAgICAgICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlNZXNoVGV4dHVyZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/config/SysDefine.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7f8ffNRvZxCz4zNi1L6dBHr', 'SysDefine');
// Script/UIFrame/config/SysDefine.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SysDefine = exports.UIState = exports.ModalOpacity = exports.FormType = void 0;
var UIConfig_1 = require("../../UIConfig");
/**窗体类型 */
var FormType;
(function (FormType) {
    /** 屏幕 */
    FormType["Screen"] = "UIScreen";
    /** 固定窗口 */
    FormType["Fixed"] = "UIFixed";
    /** 弹出窗口 */
    FormType["Window"] = "UIWindow";
    /** Toast */
    FormType["Toast"] = "Toast";
    /** 独立窗口 */
    FormType["Tips"] = "UITips";
})(FormType = exports.FormType || (exports.FormType = {}));
/**透明度类型 */
var ModalOpacity;
(function (ModalOpacity) {
    /** 没有mask, 可以穿透 */
    ModalOpacity[ModalOpacity["None"] = 0] = "None";
    /** 完全透明，不能穿透 */
    ModalOpacity[ModalOpacity["OpacityZero"] = 1] = "OpacityZero";
    /** 高透明度，不能穿透 */
    ModalOpacity[ModalOpacity["OpacityLow"] = 2] = "OpacityLow";
    /** 半透明，不能穿透 */
    ModalOpacity[ModalOpacity["OpacityHalf"] = 3] = "OpacityHalf";
    /** 低透明度, 不能穿透 */
    ModalOpacity[ModalOpacity["OpacityHigh"] = 4] = "OpacityHigh";
    /** 完全不透明 */
    ModalOpacity[ModalOpacity["OpacityFull"] = 5] = "OpacityFull";
})(ModalOpacity = exports.ModalOpacity || (exports.ModalOpacity = {}));
/** UI的状态 */
var UIState;
(function (UIState) {
    UIState[UIState["None"] = 0] = "None";
    UIState[UIState["Loading"] = 1] = "Loading";
    UIState[UIState["Showing"] = 2] = "Showing";
    UIState[UIState["Hiding"] = 3] = "Hiding";
})(UIState = exports.UIState || (exports.UIState = {}));
/** 常量 */
var SysDefine = /** @class */ (function () {
    function SysDefine() {
    }
    /* 加载窗体 */
    SysDefine.defaultLoadingForm = UIConfig_1.default.UILoading;
    /* 路径常量 */
    SysDefine.SYS_PATH_CANVAS = "Canvas";
    SysDefine.SYS_PATH_UIFORMS_CONFIG_INFO = "UIFormsConfigInfo";
    SysDefine.SYS_PATH_CONFIG_INFO = "SysConfigInfo";
    /* 标签常量 */
    SysDefine.SYS_UIROOT_NAME = "Canvas/Scene/UIROOT";
    SysDefine.SYS_UIMODAL_NAME = "Canvas/Scene/UIROOT/UIModalManager";
    SysDefine.SYS_UIAdapter_NAME = "Canvas/Scene/UIROOT/UIAdapterManager";
    /* 节点常量 */
    SysDefine.SYS_SCENE_NODE = "Scene";
    SysDefine.SYS_UIROOT_NODE = "UIROOT";
    SysDefine.SYS_SCREEN_NODE = "Screen";
    SysDefine.SYS_FIXED_NODE = "FixedUI";
    SysDefine.SYS_POPUP_NODE = "PopUp";
    SysDefine.SYS_TOPTIPS_NODE = "TopTips";
    SysDefine.SYS_MODAL_NODE = "UIModalNode";
    /** 规范符号 */
    SysDefine.SYS_STANDARD_Prefix = '_';
    SysDefine.SYS_STANDARD_Separator = '$';
    SysDefine.SYS_STANDARD_End = '#';
    SysDefine.UI_PATH_ROOT = 'UIForms/';
    SysDefine.SeparatorMap = {
        "_Node": "cc.Node",
        "_Label": "cc.Label",
        "_Button": "cc.Button",
        "_Sprite": "cc.Sprite",
        "_RichText": "cc.RichText",
        "_Mask": "cc.Mask",
        "_MotionStreak": "cc.MotionStreak",
        "_TiledMap": "cc.TiledMap",
        "_TiledTile": "cc.TiledTile",
        "_Spine": "sp.Skeleton",
        "_Graphics": "cc.Graphics",
        "_Animation": "cc.Animation",
        "_WebView": "cc.WebView",
        "_EditBox": "cc.EditBox",
        "_ScrollView": "cc.ScrollView",
        "_VideoPlayer": "cc.VideoPlayer",
        "_ProgressBar": "cc.ProgressBar",
        "_PageView": "cc.PageView",
        "_Slider": "cc.Slider",
        "_Toggle": "cc.Toggle",
        "_ButtonPlus": "ButtonPlus",
    };
    return SysDefine;
}());
exports.SysDefine = SysDefine;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9jb25maWcvU3lzRGVmaW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzQztBQUd0QyxVQUFVO0FBQ1YsSUFBWSxRQVlYO0FBWkQsV0FBWSxRQUFRO0lBQ2hCLFNBQVM7SUFDVCwrQkFBbUIsQ0FBQTtJQUNuQixXQUFXO0lBQ1gsNkJBQWlCLENBQUE7SUFDakIsV0FBVztJQUNYLCtCQUFtQixDQUFBO0lBQ25CLFlBQVk7SUFDWiwyQkFBZSxDQUFBO0lBQ2YsV0FBVztJQUNYLDJCQUFlLENBQUE7QUFFbkIsQ0FBQyxFQVpXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBWW5CO0FBQ0QsV0FBVztBQUNYLElBQVksWUFhWDtBQWJELFdBQVksWUFBWTtJQUNwQixtQkFBbUI7SUFDbkIsK0NBQUksQ0FBQTtJQUNKLGdCQUFnQjtJQUNoQiw2REFBVyxDQUFBO0lBQ1gsZ0JBQWdCO0lBQ2hCLDJEQUFVLENBQUE7SUFDVixlQUFlO0lBQ2YsNkRBQVcsQ0FBQTtJQUNYLGlCQUFpQjtJQUNqQiw2REFBVyxDQUFBO0lBQ1gsWUFBWTtJQUNaLDZEQUFXLENBQUE7QUFDZixDQUFDLEVBYlcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFhdkI7QUFDRCxZQUFZO0FBQ1osSUFBWSxPQUtYO0FBTEQsV0FBWSxPQUFPO0lBQ2YscUNBQVEsQ0FBQTtJQUNSLDJDQUFXLENBQUE7SUFDWCwyQ0FBVyxDQUFBO0lBQ1gseUNBQVUsQ0FBQTtBQUNkLENBQUMsRUFMVyxPQUFPLEdBQVAsZUFBTyxLQUFQLGVBQU8sUUFLbEI7QUFDRCxTQUFTO0FBQ1Q7SUFBQTtJQWtEQSxDQUFDO0lBakRHLFVBQVU7SUFDSSw0QkFBa0IsR0FBZ0Isa0JBQVEsQ0FBQyxTQUFTLENBQUM7SUFDbkUsVUFBVTtJQUNJLHlCQUFlLEdBQUcsUUFBUSxDQUFDO0lBQzNCLHNDQUE0QixHQUFHLG1CQUFtQixDQUFDO0lBQ25ELDhCQUFvQixHQUFHLGVBQWUsQ0FBQztJQUNyRCxVQUFVO0lBQ0kseUJBQWUsR0FBRyxxQkFBcUIsQ0FBQztJQUN4QywwQkFBZ0IsR0FBRyxvQ0FBb0MsQ0FBQztJQUN4RCw0QkFBa0IsR0FBRyxzQ0FBc0MsQ0FBQztJQUMxRSxVQUFVO0lBQ0ksd0JBQWMsR0FBRyxPQUFPLENBQUE7SUFDeEIseUJBQWUsR0FBRyxRQUFRLENBQUM7SUFDM0IseUJBQWUsR0FBRyxRQUFRLENBQUM7SUFDM0Isd0JBQWMsR0FBRyxTQUFTLENBQUM7SUFDM0Isd0JBQWMsR0FBRyxPQUFPLENBQUM7SUFDekIsMEJBQWdCLEdBQUcsU0FBUyxDQUFDO0lBQzdCLHdCQUFjLEdBQUcsYUFBYSxDQUFDO0lBQzdDLFdBQVc7SUFDRyw2QkFBbUIsR0FBRyxHQUFHLENBQUM7SUFDMUIsZ0NBQXNCLEdBQUcsR0FBRyxDQUFDO0lBQzdCLDBCQUFnQixHQUFHLEdBQUcsQ0FBQztJQUV2QixzQkFBWSxHQUFHLFVBQVUsQ0FBQztJQUUxQixzQkFBWSxHQUE0QjtRQUNsRCxPQUFPLEVBQVUsU0FBUztRQUMxQixRQUFRLEVBQVMsVUFBVTtRQUMzQixTQUFTLEVBQVEsV0FBVztRQUM1QixTQUFTLEVBQVEsV0FBVztRQUM1QixXQUFXLEVBQU0sYUFBYTtRQUM5QixPQUFPLEVBQVUsU0FBUztRQUMxQixlQUFlLEVBQUUsaUJBQWlCO1FBQ2xDLFdBQVcsRUFBTSxhQUFhO1FBQzlCLFlBQVksRUFBSyxjQUFjO1FBQy9CLFFBQVEsRUFBUyxhQUFhO1FBQzlCLFdBQVcsRUFBTSxhQUFhO1FBQzlCLFlBQVksRUFBSyxjQUFjO1FBQy9CLFVBQVUsRUFBTyxZQUFZO1FBQzdCLFVBQVUsRUFBTyxZQUFZO1FBQzdCLGFBQWEsRUFBSSxlQUFlO1FBQ2hDLGNBQWMsRUFBRyxnQkFBZ0I7UUFDakMsY0FBYyxFQUFHLGdCQUFnQjtRQUNqQyxXQUFXLEVBQU0sYUFBYTtRQUM5QixTQUFTLEVBQVEsV0FBVztRQUM1QixTQUFTLEVBQVEsV0FBVztRQUM1QixhQUFhLEVBQUksWUFBWTtLQUNoQyxDQUFDO0lBRU4sZ0JBQUM7Q0FsREQsQUFrREMsSUFBQTtBQWxEWSw4QkFBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSUNvbmZpZyBmcm9tIFwiLi4vLi4vVUlDb25maWdcIjtcbmltcG9ydCB7IElGb3JtQ29uZmlnIH0gZnJvbSBcIi4uL1N0cnVjdFwiO1xuXG4vKirnqpfkvZPnsbvlnosgKi9cbmV4cG9ydCBlbnVtIEZvcm1UeXBlIHtcbiAgICAvKiog5bGP5bmVICovXG4gICAgU2NyZWVuID0gXCJVSVNjcmVlblwiLFxuICAgIC8qKiDlm7rlrprnqpflj6MgKi9cbiAgICBGaXhlZCA9IFwiVUlGaXhlZFwiLFxuICAgIC8qKiDlvLnlh7rnqpflj6MgKi9cbiAgICBXaW5kb3cgPSBcIlVJV2luZG93XCIsXG4gICAgLyoqIFRvYXN0ICovXG4gICAgVG9hc3QgPSBcIlRvYXN0XCIsXG4gICAgLyoqIOeLrOeri+eql+WPoyAqL1xuICAgIFRpcHMgPSBcIlVJVGlwc1wiLFxuXG59XG4vKirpgI/mmI7luqbnsbvlnosgKi9cbmV4cG9ydCBlbnVtIE1vZGFsT3BhY2l0eSB7XG4gICAgLyoqIOayoeaciW1hc2ssIOWPr+S7peepv+mAjyAqL1xuICAgIE5vbmUsXG4gICAgLyoqIOWujOWFqOmAj+aYju+8jOS4jeiDveepv+mAjyAqL1xuICAgIE9wYWNpdHlaZXJvLFxuICAgIC8qKiDpq5jpgI/mmI7luqbvvIzkuI3og73nqb/pgI8gKi9cbiAgICBPcGFjaXR5TG93LFxuICAgIC8qKiDljYrpgI/mmI7vvIzkuI3og73nqb/pgI8gKi9cbiAgICBPcGFjaXR5SGFsZixcbiAgICAvKiog5L2O6YCP5piO5bqmLCDkuI3og73nqb/pgI8gKi9cbiAgICBPcGFjaXR5SGlnaCxcbiAgICAvKiog5a6M5YWo5LiN6YCP5piOICovXG4gICAgT3BhY2l0eUZ1bGxcbn1cbi8qKiBVSeeahOeKtuaAgSAqL1xuZXhwb3J0IGVudW0gVUlTdGF0ZSB7XG4gICAgTm9uZSA9IDAsXG4gICAgTG9hZGluZyA9IDEsXG4gICAgU2hvd2luZyA9IDIsXG4gICAgSGlkaW5nID0gM1xufVxuLyoqIOW4uOmHjyAqL1xuZXhwb3J0IGNsYXNzIFN5c0RlZmluZSB7XG4gICAgLyog5Yqg6L2956qX5L2TICovXG4gICAgcHVibGljIHN0YXRpYyBkZWZhdWx0TG9hZGluZ0Zvcm06IElGb3JtQ29uZmlnID0gVUlDb25maWcuVUlMb2FkaW5nO1xuICAgIC8qIOi3r+W+hOW4uOmHjyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU1lTX1BBVEhfQ0FOVkFTID0gXCJDYW52YXNcIjtcbiAgICBwdWJsaWMgc3RhdGljIFNZU19QQVRIX1VJRk9STVNfQ09ORklHX0lORk8gPSBcIlVJRm9ybXNDb25maWdJbmZvXCI7XG4gICAgcHVibGljIHN0YXRpYyBTWVNfUEFUSF9DT05GSUdfSU5GTyA9IFwiU3lzQ29uZmlnSW5mb1wiO1xuICAgIC8qIOagh+etvuW4uOmHjyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU1lTX1VJUk9PVF9OQU1FID0gXCJDYW52YXMvU2NlbmUvVUlST09UXCI7XG4gICAgcHVibGljIHN0YXRpYyBTWVNfVUlNT0RBTF9OQU1FID0gXCJDYW52YXMvU2NlbmUvVUlST09UL1VJTW9kYWxNYW5hZ2VyXCI7XG4gICAgcHVibGljIHN0YXRpYyBTWVNfVUlBZGFwdGVyX05BTUUgPSBcIkNhbnZhcy9TY2VuZS9VSVJPT1QvVUlBZGFwdGVyTWFuYWdlclwiO1xuICAgIC8qIOiKgueCueW4uOmHjyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU1lTX1NDRU5FX05PREUgPSBcIlNjZW5lXCJcbiAgICBwdWJsaWMgc3RhdGljIFNZU19VSVJPT1RfTk9ERSA9IFwiVUlST09UXCI7XG4gICAgcHVibGljIHN0YXRpYyBTWVNfU0NSRUVOX05PREUgPSBcIlNjcmVlblwiO1xuICAgIHB1YmxpYyBzdGF0aWMgU1lTX0ZJWEVEX05PREUgPSBcIkZpeGVkVUlcIjtcbiAgICBwdWJsaWMgc3RhdGljIFNZU19QT1BVUF9OT0RFID0gXCJQb3BVcFwiOyAgXG4gICAgcHVibGljIHN0YXRpYyBTWVNfVE9QVElQU19OT0RFID0gXCJUb3BUaXBzXCI7XG4gICAgcHVibGljIHN0YXRpYyBTWVNfTU9EQUxfTk9ERSA9IFwiVUlNb2RhbE5vZGVcIjtcbiAgICAvKiog6KeE6IyD56ym5Y+3ICovXG4gICAgcHVibGljIHN0YXRpYyBTWVNfU1RBTkRBUkRfUHJlZml4ID0gJ18nO1xuICAgIHB1YmxpYyBzdGF0aWMgU1lTX1NUQU5EQVJEX1NlcGFyYXRvciA9ICckJztcbiAgICBwdWJsaWMgc3RhdGljIFNZU19TVEFOREFSRF9FbmQgPSAnIyc7XG5cbiAgICBwdWJsaWMgc3RhdGljIFVJX1BBVEhfUk9PVCA9ICdVSUZvcm1zLyc7XG4gICAgXG4gICAgcHVibGljIHN0YXRpYyBTZXBhcmF0b3JNYXA6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgICAgICBcIl9Ob2RlXCIgICAgICAgIDogXCJjYy5Ob2RlXCIsXG4gICAgICAgIFwiX0xhYmVsXCIgICAgICAgOiBcImNjLkxhYmVsXCIsXG4gICAgICAgIFwiX0J1dHRvblwiICAgICAgOiBcImNjLkJ1dHRvblwiLFxuICAgICAgICBcIl9TcHJpdGVcIiAgICAgIDogXCJjYy5TcHJpdGVcIixcbiAgICAgICAgXCJfUmljaFRleHRcIiAgICA6IFwiY2MuUmljaFRleHRcIixcbiAgICAgICAgXCJfTWFza1wiICAgICAgICA6IFwiY2MuTWFza1wiLFxuICAgICAgICBcIl9Nb3Rpb25TdHJlYWtcIjogXCJjYy5Nb3Rpb25TdHJlYWtcIixcbiAgICAgICAgXCJfVGlsZWRNYXBcIiAgICA6IFwiY2MuVGlsZWRNYXBcIixcbiAgICAgICAgXCJfVGlsZWRUaWxlXCIgICA6IFwiY2MuVGlsZWRUaWxlXCIsXG4gICAgICAgIFwiX1NwaW5lXCIgICAgICAgOiBcInNwLlNrZWxldG9uXCIsXG4gICAgICAgIFwiX0dyYXBoaWNzXCIgICAgOiBcImNjLkdyYXBoaWNzXCIsXG4gICAgICAgIFwiX0FuaW1hdGlvblwiICAgOiBcImNjLkFuaW1hdGlvblwiLFxuICAgICAgICBcIl9XZWJWaWV3XCIgICAgIDogXCJjYy5XZWJWaWV3XCIsXG4gICAgICAgIFwiX0VkaXRCb3hcIiAgICAgOiBcImNjLkVkaXRCb3hcIixcbiAgICAgICAgXCJfU2Nyb2xsVmlld1wiICA6IFwiY2MuU2Nyb2xsVmlld1wiLFxuICAgICAgICBcIl9WaWRlb1BsYXllclwiIDogXCJjYy5WaWRlb1BsYXllclwiLFxuICAgICAgICBcIl9Qcm9ncmVzc0JhclwiIDogXCJjYy5Qcm9ncmVzc0JhclwiLFxuICAgICAgICBcIl9QYWdlVmlld1wiICAgIDogXCJjYy5QYWdlVmlld1wiLFxuICAgICAgICBcIl9TbGlkZXJcIiAgICAgIDogXCJjYy5TbGlkZXJcIixcbiAgICAgICAgXCJfVG9nZ2xlXCIgICAgICA6IFwiY2MuVG9nZ2xlXCIsXG4gICAgICAgIFwiX0J1dHRvblBsdXNcIiAgOiBcIkJ1dHRvblBsdXNcIixcbiAgICB9O1xuXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIScrollPlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '560e1xSQSJMfZRGHo2ilXIy', 'UIScrollPlus');
// Script/UIScript/UIScrollPlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScrollPlusProxy = void 0;
var ScrollViewHelper_1 = require("../Common/Components/ScrollViewHelper");
var SysDefine_1 = require("../UIFrame/config/SysDefine");
var Struct_1 = require("../UIFrame/Struct");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ScrollPlusProxy = /** @class */ (function (_super) {
    __extends(ScrollPlusProxy, _super);
    function ScrollPlusProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ScrollPlusProxy;
}(ScrollViewHelper_1.ScrollViewElementProxy));
exports.ScrollPlusProxy = ScrollPlusProxy;
var UIScrollPlus = /** @class */ (function (_super) {
    __extends(UIScrollPlus, _super);
    function UIScrollPlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollHelper = null;
        _this.pfItem = null;
        _this.modalType = new Struct_1.ModalType(SysDefine_1.ModalOpacity.OpacityHalf, true);
        _this._nodePool = new cc.NodePool();
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UIScrollPlus.prototype.start = function () {
        var _this = this;
        this.layoutItems();
        this.scrollHelper.onAllocUI = function (proxy) {
            var ui = _this._nodePool.get() || cc.instantiate(_this.pfItem);
            proxy.ui = ui;
            ui.parent = _this.scrollHelper.scrollView.content;
            ui.setPosition(proxy.region.x, proxy.region.y);
            proxy.ui.getChildByName('lab').getComponent(cc.Label).string = '' + proxy.lab;
        };
        this.scrollHelper.onFreeUI = function (proxy) {
            _this._nodePool.put(proxy.ui);
            proxy.ui = null;
        };
        this.scrollHelper.isUIPooled = function () {
            return _this._nodePool.size() > 0;
        };
        this.scrollHelper.checkUI();
    };
    UIScrollPlus.prototype.layoutItems = function () {
        var d = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
        this.scrollHelper.clearData();
        var ypos = 0;
        for (var i = 0; i < d.length; i++) {
            var proxy = new ScrollPlusProxy();
            proxy.lab = d[i];
            proxy.region = cc.rect(-this.pfItem.data.width / 2, ypos - this.pfItem.data.height, this.pfItem.data.width, this.pfItem.data.height);
            this.scrollHelper.addData(proxy);
            ypos -= this.pfItem.data.height + 10;
        }
        this.scrollHelper.scrollView.content.height = (this.pfItem.data.height + 10) * d.length;
    };
    __decorate([
        property(ScrollViewHelper_1.ScrollViewHelper)
    ], UIScrollPlus.prototype, "scrollHelper", void 0);
    __decorate([
        property(cc.Prefab)
    ], UIScrollPlus.prototype, "pfItem", void 0);
    UIScrollPlus = __decorate([
        ccclass
    ], UIScrollPlus);
    return UIScrollPlus;
}(UIForm_1.UIWindow));
exports.default = UIScrollPlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlTY3JvbGxQbHVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwRUFBaUc7QUFDakcseURBQTJEO0FBQzNELDRDQUE4QztBQUM5Qyw0Q0FBNkM7QUFFdkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBcUMsbUNBQXNCO0lBQTNEOztJQUVBLENBQUM7SUFBRCxzQkFBQztBQUFELENBRkEsQUFFQyxDQUZvQyx5Q0FBc0IsR0FFMUQ7QUFGWSwwQ0FBZTtBQUs1QjtJQUEwQyxnQ0FBUTtJQUFsRDtRQUFBLHFFQWdEQztRQTlDK0Isa0JBQVksR0FBcUIsSUFBSSxDQUFDO1FBRTdDLFlBQU0sR0FBYyxJQUFJLENBQUM7UUFFOUMsZUFBUyxHQUFHLElBQUksa0JBQVMsQ0FBQyx3QkFBWSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUVqRCxlQUFTLEdBQUcsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7O1FBdUN0QyxpQkFBaUI7SUFDckIsQ0FBQztJQXZDRyxlQUFlO0lBRWYsNEJBQUssR0FBTDtRQUFBLGlCQWtCQztRQWpCRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsVUFBQyxLQUFzQjtZQUNqRCxJQUFJLEVBQUUsR0FBRyxLQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1lBQzVELEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ2QsRUFBRSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7WUFDakQsRUFBRSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9DLEtBQUssQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQ2xGLENBQUMsQ0FBQTtRQUNELElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxHQUFHLFVBQUMsS0FBNkI7WUFDdkQsS0FBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzdCLEtBQUssQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLENBQUMsQ0FBQTtRQUNELElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxHQUFHO1lBQzNCLE9BQU8sS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDckMsQ0FBQyxDQUFBO1FBQ0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBSU8sa0NBQVcsR0FBbkI7UUFDSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7UUFDYixLQUFJLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQixJQUFJLEtBQUssR0FBRyxJQUFJLGVBQWUsRUFBRSxDQUFDO1lBQ2xDLEtBQUssQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLEtBQUssQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBQyxDQUFDLEVBQUUsSUFBSSxHQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDakksSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDakMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7U0FDeEM7UUFDRCxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDNUYsQ0FBQztJQTNDMkI7UUFBM0IsUUFBUSxDQUFDLG1DQUFnQixDQUFDO3NEQUF1QztJQUU3QztRQUFwQixRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnREFBMEI7SUFKN0IsWUFBWTtRQURoQyxPQUFPO09BQ2EsWUFBWSxDQWdEaEM7SUFBRCxtQkFBQztDQWhERCxBQWdEQyxDQWhEeUMsaUJBQVEsR0FnRGpEO2tCQWhEb0IsWUFBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjcm9sbFZpZXdFbGVtZW50UHJveHksIFNjcm9sbFZpZXdIZWxwZXIgfSBmcm9tIFwiLi4vQ29tbW9uL0NvbXBvbmVudHMvU2Nyb2xsVmlld0hlbHBlclwiO1xuaW1wb3J0IHsgTW9kYWxPcGFjaXR5IH0gZnJvbSBcIi4uL1VJRnJhbWUvY29uZmlnL1N5c0RlZmluZVwiO1xuaW1wb3J0IHsgTW9kYWxUeXBlIH0gZnJvbSBcIi4uL1VJRnJhbWUvU3RydWN0XCI7XG5pbXBvcnQgeyBVSVdpbmRvdyB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuZXhwb3J0IGNsYXNzIFNjcm9sbFBsdXNQcm94eSBleHRlbmRzIFNjcm9sbFZpZXdFbGVtZW50UHJveHkge1xuICAgIGxhYjogbnVtYmVyO1xufVxuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlTY3JvbGxQbHVzIGV4dGVuZHMgVUlXaW5kb3cge1xuXG4gICAgQHByb3BlcnR5KFNjcm9sbFZpZXdIZWxwZXIpIHNjcm9sbEhlbHBlcjogU2Nyb2xsVmlld0hlbHBlciA9IG51bGw7XG5cbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKSBwZkl0ZW06IGNjLlByZWZhYiA9IG51bGw7XG5cbiAgICBtb2RhbFR5cGUgPSBuZXcgTW9kYWxUeXBlKE1vZGFsT3BhY2l0eS5PcGFjaXR5SGFsZiwgdHJ1ZSlcbiAgICBcbiAgICBwcml2YXRlIF9ub2RlUG9vbCA9IG5ldyBjYy5Ob2RlUG9vbCgpO1xuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuICAgICAgICB0aGlzLmxheW91dEl0ZW1zKCk7XG5cbiAgICAgICAgdGhpcy5zY3JvbGxIZWxwZXIub25BbGxvY1VJID0gKHByb3h5OiBTY3JvbGxQbHVzUHJveHkpID0+IHtcbiAgICAgICAgICAgIGxldCB1aSA9IHRoaXMuX25vZGVQb29sLmdldCgpIHx8IGNjLmluc3RhbnRpYXRlKHRoaXMucGZJdGVtKVxuICAgICAgICAgICAgcHJveHkudWkgPSB1aTtcbiAgICAgICAgICAgIHVpLnBhcmVudCA9IHRoaXMuc2Nyb2xsSGVscGVyLnNjcm9sbFZpZXcuY29udGVudDtcbiAgICAgICAgICAgIHVpLnNldFBvc2l0aW9uKHByb3h5LnJlZ2lvbi54LCBwcm94eS5yZWdpb24ueSk7XG4gICAgICAgICAgICBwcm94eS51aS5nZXRDaGlsZEJ5TmFtZSgnbGFiJykuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSAnJyArIHByb3h5LmxhYjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNjcm9sbEhlbHBlci5vbkZyZWVVSSA9IChwcm94eTogU2Nyb2xsVmlld0VsZW1lbnRQcm94eSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fbm9kZVBvb2wucHV0KHByb3h5LnVpKTtcbiAgICAgICAgICAgIHByb3h5LnVpID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNjcm9sbEhlbHBlci5pc1VJUG9vbGVkID0gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVQb29sLnNpemUoKSA+IDA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zY3JvbGxIZWxwZXIuY2hlY2tVSSgpO1xuICAgIH1cblxuXG5cbiAgICBwcml2YXRlIGxheW91dEl0ZW1zKCkge1xuICAgICAgICBsZXQgZCA9IFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1XTtcbiAgICAgICAgdGhpcy5zY3JvbGxIZWxwZXIuY2xlYXJEYXRhKCk7XG4gICAgICAgIGxldCB5cG9zID0gMDtcbiAgICAgICAgZm9yKGxldCBpPTA7IGk8ZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IHByb3h5ID0gbmV3IFNjcm9sbFBsdXNQcm94eSgpO1xuICAgICAgICAgICAgcHJveHkubGFiID0gZFtpXTtcbiAgICAgICAgICAgIHByb3h5LnJlZ2lvbiA9IGNjLnJlY3QoLXRoaXMucGZJdGVtLmRhdGEud2lkdGgvMiwgeXBvcy10aGlzLnBmSXRlbS5kYXRhLmhlaWdodCwgdGhpcy5wZkl0ZW0uZGF0YS53aWR0aCwgdGhpcy5wZkl0ZW0uZGF0YS5oZWlnaHQpO1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxIZWxwZXIuYWRkRGF0YShwcm94eSk7XG4gICAgICAgICAgICB5cG9zIC09IHRoaXMucGZJdGVtLmRhdGEuaGVpZ2h0ICsgMTA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zY3JvbGxIZWxwZXIuc2Nyb2xsVmlldy5jb250ZW50LmhlaWdodCA9ICh0aGlzLnBmSXRlbS5kYXRhLmhlaWdodCArIDEwKSAqIGQubGVuZ3RoO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UISkills.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4004bJq0M9Cooeh3WQfDjpu', 'UISkills');
// Script/UIScript/UISkills.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISkills = /** @class */ (function (_super) {
    __extends(UISkills, _super);
    function UISkills() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UISkills.prototype.start = function () {
        var _this = this;
        this.view.Close.addClick(function () {
            _this.closeSelf();
        }, this);
    };
    UISkills = __decorate([
        ccclass
    ], UISkills);
    return UISkills;
}(UIForm_1.UIWindow));
exports.default = UISkills;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlTa2lsbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsNENBQTZDO0FBRXZDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXNDLDRCQUFRO0lBQTlDOztJQWFBLENBQUM7SUFURyxlQUFlO0lBRWYsd0JBQUssR0FBTDtRQUFBLGlCQUlDO1FBSEcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQ3JCLEtBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBVmdCLFFBQVE7UUFENUIsT0FBTztPQUNhLFFBQVEsQ0FhNUI7SUFBRCxlQUFDO0NBYkQsQUFhQyxDQWJxQyxpQkFBUSxHQWE3QztrQkFib0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSVNraWxsc19BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSVNraWxsc19BdXRvXCI7XG5pbXBvcnQgeyBVSVdpbmRvdyB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJU2tpbGxzIGV4dGVuZHMgVUlXaW5kb3cge1xuXG4gICAgdmlldzogVUlTa2lsbHNfQXV0bztcblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuICAgICAgICB0aGlzLnZpZXcuQ2xvc2UuYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZVNlbGYoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UISound.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c1bbcSeeFFDW6AB+mQtYDv7', 'UISound');
// Script/UIScript/UISound.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var AdapterMgr_1 = require("../UIFrame/AdapterMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISound = /** @class */ (function (_super) {
    __extends(UISound, _super);
    function UISound() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    UISound.prototype.start = function () {
        AdapterMgr_1.default.inst.adapteByType(AdapterMgr_1.AdapterType.Right | AdapterMgr_1.AdapterType.Top, this.node);
    };
    UISound = __decorate([
        ccclass
    ], UISound);
    return UISound;
}(UIForm_1.UIFixed));
exports.default = UISound;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlTb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvREFBZ0U7QUFDaEUsNENBQTRDO0FBRXRDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXFDLDJCQUFPO0lBQTVDOztJQWFBLENBQUM7SUFWRyx3QkFBd0I7SUFFeEIsZUFBZTtJQUVmLHVCQUFLLEdBQUw7UUFFSSxvQkFBVSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsd0JBQVcsQ0FBQyxLQUFLLEdBQUcsd0JBQVcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFWZ0IsT0FBTztRQUQzQixPQUFPO09BQ2EsT0FBTyxDQWEzQjtJQUFELGNBQUM7Q0FiRCxBQWFDLENBYm9DLGdCQUFPLEdBYTNDO2tCQWJvQixPQUFPIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFkYXB0ZXJNZ3IsIHsgQWRhcHRlclR5cGUgfSBmcm9tIFwiLi4vVUlGcmFtZS9BZGFwdGVyTWdyXCI7XG5pbXBvcnQgeyBVSUZpeGVkIH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlTb3VuZCBleHRlbmRzIFVJRml4ZWQge1xuXG5cbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuICAgICAgICBcbiAgICAgICAgQWRhcHRlck1nci5pbnN0LmFkYXB0ZUJ5VHlwZShBZGFwdGVyVHlwZS5SaWdodCB8IEFkYXB0ZXJUeXBlLlRvcCwgdGhpcy5ub2RlKTtcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/ModalMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a6cfbGOowFD6rGCFIN9QFMs', 'ModalMgr');
// Script/UIFrame/ModalMgr.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var SysDefine_1 = require("./config/SysDefine");
var UIModalScript_1 = require("./UIModalScript");
/**
 * 遮罩管理
 */
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ModalMgr = /** @class */ (function (_super) {
    __extends(ModalMgr, _super);
    function ModalMgr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.uiModal = null;
        return _this;
    }
    ModalMgr_1 = ModalMgr;
    Object.defineProperty(ModalMgr, "inst", {
        get: function () {
            if (this._inst == null) {
                this._inst = new ModalMgr_1();
                var node = new cc.Node("UIModalNode");
                ModalMgr_1.popUpRoot = SysDefine_1.SysDefine.SYS_UIROOT_NAME + '/' + SysDefine_1.SysDefine.SYS_POPUP_NODE;
                var rootNode = cc.find(ModalMgr_1.popUpRoot);
                rootNode.addChild(node);
                this._inst.uiModal = node.addComponent(UIModalScript_1.default);
                this._inst.uiModal.init();
            }
            return this._inst;
        },
        enumerable: false,
        configurable: true
    });
    /** 为mask添加颜色 */
    ModalMgr.prototype.showModal = function (maskType) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.uiModal.showModal(maskType.opacity, maskType.easingTime, maskType.isEasing, maskType.dualBlur)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ModalMgr.prototype.checkModalWindow = function (coms) {
        if (coms.length <= 0) {
            this.uiModal.node.active = false;
            return;
        }
        this.uiModal.node.active = true;
        if (this.uiModal.node.parent) {
            this.uiModal.node.removeFromParent();
        }
        for (var i = coms.length - 1; i >= 0; i--) {
            if (coms[i].modalType.opacity > 0) {
                cc.find(ModalMgr_1.popUpRoot).addChild(this.uiModal.node, Math.max(coms[i].node.zIndex - 1, 0));
                this.uiModal.fid = coms[i].fid;
                this.showModal(coms[i].modalType);
                break;
            }
        }
    };
    var ModalMgr_1;
    ModalMgr.popUpRoot = '';
    ModalMgr._inst = null;
    ModalMgr = ModalMgr_1 = __decorate([
        ccclass
    ], ModalMgr);
    return ModalMgr;
}(cc.Component));
exports.default = ModalMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9Nb2RhbE1nci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnREFBK0M7QUFDL0MsaURBQTRDO0FBSTVDOztHQUVHO0FBQ0csSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0MsNEJBQVk7SUFBbEQ7UUFBQSxxRUEyQ0M7UUF6QlcsYUFBTyxHQUFpQixJQUFJLENBQUM7O0lBeUJ6QyxDQUFDO2lCQTNDb0IsUUFBUTtJQUd6QixzQkFBa0IsZ0JBQUk7YUFBdEI7WUFDSSxJQUFHLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO2dCQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksVUFBUSxFQUFFLENBQUM7Z0JBRTVCLElBQUksSUFBSSxHQUFHLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDdEMsVUFBUSxDQUFDLFNBQVMsR0FBRyxxQkFBUyxDQUFDLGVBQWUsR0FBRyxHQUFHLEdBQUcscUJBQVMsQ0FBQyxjQUFjLENBQUE7Z0JBRS9FLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUMzQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHVCQUFhLENBQUMsQ0FBQztnQkFDdEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDN0I7WUFDRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFJRCxnQkFBZ0I7SUFDRiw0QkFBUyxHQUF2QixVQUF3QixRQUFtQjs7Ozs0QkFDdkMscUJBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFBOzt3QkFBekcsU0FBeUcsQ0FBQzs7Ozs7S0FDN0c7SUFFTSxtQ0FBZ0IsR0FBdkIsVUFBd0IsSUFBZ0I7UUFDcEMsSUFBRyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ2pDLE9BQVE7U0FDWDtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDaEMsSUFBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUN4QztRQUNELEtBQUksSUFBSSxDQUFDLEdBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNoQyxJQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFHLENBQUMsRUFBRTtnQkFDOUIsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVGLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUNsQyxNQUFNO2FBQ1Q7U0FDSjtJQUNMLENBQUM7O0lBekNhLGtCQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ2YsY0FBSyxHQUFhLElBQUksQ0FBQztJQUZwQixRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBMkM1QjtJQUFELGVBQUM7Q0EzQ0QsQUEyQ0MsQ0EzQ3FDLEVBQUUsQ0FBQyxTQUFTLEdBMkNqRDtrQkEzQ29CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IFN5c0RlZmluZSB9IGZyb20gXCIuL2NvbmZpZy9TeXNEZWZpbmVcIjtcbmltcG9ydCBVSU1vZGFsU2NyaXB0IGZyb20gXCIuL1VJTW9kYWxTY3JpcHRcIjtcbmltcG9ydCB7IE1vZGFsVHlwZSB9IGZyb20gXCIuL1N0cnVjdFwiO1xuaW1wb3J0IHsgVUlXaW5kb3cgfSBmcm9tIFwiLi9VSUZvcm1cIjtcblxuLyoqXG4gKiDpga7nvannrqHnkIZcbiAqL1xuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb2RhbE1nciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG4gICAgcHVibGljIHN0YXRpYyBwb3BVcFJvb3QgPSAnJztcbiAgICBwdWJsaWMgc3RhdGljIF9pbnN0OiBNb2RhbE1nciA9IG51bGw7XG4gICAgcHVibGljIHN0YXRpYyBnZXQgaW5zdCgpIHtcbiAgICAgICAgaWYodGhpcy5faW5zdCA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0ID0gbmV3IE1vZGFsTWdyKCk7XG5cbiAgICAgICAgICAgIGxldCBub2RlID0gbmV3IGNjLk5vZGUoXCJVSU1vZGFsTm9kZVwiKTtcbiAgICAgICAgICAgIE1vZGFsTWdyLnBvcFVwUm9vdCA9IFN5c0RlZmluZS5TWVNfVUlST09UX05BTUUgKyAnLycgKyBTeXNEZWZpbmUuU1lTX1BPUFVQX05PREVcblxuICAgICAgICAgICAgbGV0IHJvb3ROb2RlID0gY2MuZmluZChNb2RhbE1nci5wb3BVcFJvb3QpO1xuICAgICAgICAgICAgcm9vdE5vZGUuYWRkQ2hpbGQobm9kZSk7XG4gICAgICAgICAgICB0aGlzLl9pbnN0LnVpTW9kYWwgPSBub2RlLmFkZENvbXBvbmVudChVSU1vZGFsU2NyaXB0KTtcbiAgICAgICAgICAgIHRoaXMuX2luc3QudWlNb2RhbC5pbml0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3Q7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1aU1vZGFsOlVJTW9kYWxTY3JpcHQgPSBudWxsO1xuXG4gICAgLyoqIOS4um1hc2vmt7vliqDpopzoibIgKi9cbiAgICBwcml2YXRlIGFzeW5jIHNob3dNb2RhbChtYXNrVHlwZTogTW9kYWxUeXBlKSB7XG4gICAgICAgIGF3YWl0IHRoaXMudWlNb2RhbC5zaG93TW9kYWwobWFza1R5cGUub3BhY2l0eSwgbWFza1R5cGUuZWFzaW5nVGltZSwgbWFza1R5cGUuaXNFYXNpbmcsIG1hc2tUeXBlLmR1YWxCbHVyKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hlY2tNb2RhbFdpbmRvdyhjb21zOiBVSVdpbmRvd1tdKSB7XG4gICAgICAgIGlmKGNvbXMubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgIHRoaXMudWlNb2RhbC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVpTW9kYWwubm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICBpZih0aGlzLnVpTW9kYWwubm9kZS5wYXJlbnQpIHtcbiAgICAgICAgICAgIHRoaXMudWlNb2RhbC5ub2RlLnJlbW92ZUZyb21QYXJlbnQoKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IobGV0IGk9Y29tcy5sZW5ndGgtMTsgaT49MDsgaS0tKSB7XG4gICAgICAgICAgICBpZihjb21zW2ldLm1vZGFsVHlwZS5vcGFjaXR5ID4gMCkge1xuICAgICAgICAgICAgICAgIGNjLmZpbmQoTW9kYWxNZ3IucG9wVXBSb290KS5hZGRDaGlsZCh0aGlzLnVpTW9kYWwubm9kZSwgTWF0aC5tYXgoY29tc1tpXS5ub2RlLnpJbmRleC0xLCAwKSk7XG4gICAgICAgICAgICAgICAgdGhpcy51aU1vZGFsLmZpZCA9IGNvbXNbaV0uZmlkO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd01vZGFsKGNvbXNbaV0ubW9kYWxUeXBlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSAgIFxuICAgIH1cbn1cblxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UISetting.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8384b6jqxlDuraR/lQRKE1C', 'UISetting');
// Script/UIScript/UISetting.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var AdapterMgr_1 = require("../UIFrame/AdapterMgr");
var CocosHelper_1 = require("../UIFrame/CocosHelper");
var SysDefine_1 = require("../UIFrame/config/SysDefine");
var FormMgr_1 = require("../UIFrame/FormMgr");
var Struct_1 = require("../UIFrame/Struct");
var UIForm_1 = require("../UIFrame/UIForm");
;
var UIConfig_1 = require("./../UIConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISetting = /** @class */ (function (_super) {
    __extends(UISetting, _super);
    function UISetting() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modalType = new Struct_1.ModalType(SysDefine_1.ModalOpacity.OpacityHalf, true);
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UISetting.prototype.start = function () {
        this.view.Pop.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIPop);
            // FormMgr.open(UIConfig.UITips, "关闭后才显示的弹窗1", {showWait: true});
            // FormMgr.open(UIConfig.UITips, "关闭后才显示的弹窗2", {showWait: true})
        }, this);
        this.view.Mobx.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIMobx);
        }, this);
        this.view.Capture.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UICapture);
        }, this);
        this.view.Light.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UILight);
        }, this);
    };
    UISetting.prototype.showEffect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var len;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        len = AdapterMgr_1.default.inst.visibleSize.height / 2 + 300;
                        this.node.y = len;
                        return [4 /*yield*/, CocosHelper_1.default.runTweenSync(this.node, cc.tween().to(0.5, { y: 0 }, cc.easeBackOut()))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UISetting.prototype.hideEffect = function () {
        return __awaiter(this, void 0, void 0, function () {
            var len;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        len = AdapterMgr_1.default.inst.visibleSize.height / 2 + 300;
                        this.node.y = 0;
                        return [4 /*yield*/, CocosHelper_1.default.runTweenSync(this.node, cc.tween().to(0.3, { y: len }, cc.easeBackIn()))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UISetting = __decorate([
        ccclass
    ], UISetting);
    return UISetting;
}(UIForm_1.UIWindow));
exports.default = UISetting;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlTZXR0aW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxzREFBaUQ7QUFDakQseURBQTJEO0FBQzNELDhDQUF5QztBQUN6Qyw0Q0FBOEM7QUFDOUMsNENBQTZDO0FBQ0EsQ0FBQztBQUM5QywwQ0FBcUM7QUFFL0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVE7SUFBL0M7UUFBQSxxRUF5Q0M7UUF0Q0csZUFBUyxHQUFHLElBQUksa0JBQVMsQ0FBQyx3QkFBWSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQzs7UUFxQzFELGlCQUFpQjtJQUNyQixDQUFDO0lBcENHLGVBQWU7SUFFZix5QkFBSyxHQUFMO1FBRUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQ25CLGlCQUFPLENBQUMsSUFBSSxDQUFDLGtCQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0IsaUVBQWlFO1lBQ2pFLGdFQUFnRTtRQUNwRSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFVCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDcEIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFVCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDdkIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFVCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDckIsaUJBQU8sQ0FBQyxJQUFJLENBQUMsa0JBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNuQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUssOEJBQVUsR0FBaEI7Ozs7Ozt3QkFDUSxHQUFHLEdBQUcsb0JBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO3dCQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7d0JBQ2xCLHFCQUFNLHFCQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBQyxDQUFDLEVBQUUsQ0FBQyxFQUFDLEVBQUUsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsRUFBQTs7d0JBQXZGLFNBQXVGLENBQUM7Ozs7O0tBQzNGO0lBRUssOEJBQVUsR0FBaEI7Ozs7Ozt3QkFDUSxHQUFHLEdBQUcsb0JBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO3dCQUNyRCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7d0JBQ2hCLHFCQUFNLHFCQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBQyxDQUFDLEVBQUUsR0FBRyxFQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBQTs7d0JBQXhGLFNBQXdGLENBQUM7Ozs7O0tBQzVGO0lBdENnQixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBeUM3QjtJQUFELGdCQUFDO0NBekNELEFBeUNDLENBekNzQyxpQkFBUSxHQXlDOUM7a0JBekNvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJU2V0dGluZ19BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSVNldHRpbmdfQXV0b1wiO1xuaW1wb3J0IEFkYXB0ZXJNZ3IgZnJvbSBcIi4uL1VJRnJhbWUvQWRhcHRlck1nclwiO1xuaW1wb3J0IENvY29zSGVscGVyIGZyb20gXCIuLi9VSUZyYW1lL0NvY29zSGVscGVyXCI7XG5pbXBvcnQgeyBNb2RhbE9wYWNpdHkgfSBmcm9tIFwiLi4vVUlGcmFtZS9jb25maWcvU3lzRGVmaW5lXCI7XG5pbXBvcnQgRm9ybU1nciBmcm9tIFwiLi4vVUlGcmFtZS9Gb3JtTWdyXCI7XG5pbXBvcnQgeyBNb2RhbFR5cGUgfSBmcm9tIFwiLi4vVUlGcmFtZS9TdHJ1Y3RcIjtcbmltcG9ydCB7IFVJV2luZG93IH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5pbXBvcnQgV2luZG93TWdyIGZyb20gXCIuLi9VSUZyYW1lL1dpbmRvd01nclwiOztcbmltcG9ydCBVSUNvbmZpZyBmcm9tIFwiLi8uLi9VSUNvbmZpZ1wiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJU2V0dGluZyBleHRlbmRzIFVJV2luZG93IHtcbiAgICB2aWV3OiBVSVNldHRpbmdfQXV0bztcblxuICAgIG1vZGFsVHlwZSA9IG5ldyBNb2RhbFR5cGUoTW9kYWxPcGFjaXR5Lk9wYWNpdHlIYWxmLCB0cnVlKTtcblxuICAgIC8vIG9uTG9hZCAoKSB7fVxuXG4gICAgc3RhcnQgKCkge1xuXG4gICAgICAgIHRoaXMudmlldy5Qb3AuYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJUG9wKTtcbiAgICAgICAgICAgIC8vIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSVRpcHMsIFwi5YWz6Zet5ZCO5omN5pi+56S655qE5by556qXMVwiLCB7c2hvd1dhaXQ6IHRydWV9KTtcbiAgICAgICAgICAgIC8vIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSVRpcHMsIFwi5YWz6Zet5ZCO5omN5pi+56S655qE5by556qXMlwiLCB7c2hvd1dhaXQ6IHRydWV9KVxuICAgICAgICB9LCB0aGlzKTtcblxuICAgICAgICB0aGlzLnZpZXcuTW9ieC5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlNb2J4KTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgdGhpcy52aWV3LkNhcHR1cmUuYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5vcGVuKFVJQ29uZmlnLlVJQ2FwdHVyZSk7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMudmlldy5MaWdodC5hZGRDbGljaygoKSA9PiB7XG4gICAgICAgICAgICBGb3JtTWdyLm9wZW4oVUlDb25maWcuVUlMaWdodCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuICAgIGFzeW5jIHNob3dFZmZlY3QoKSB7XG4gICAgICAgIGxldCBsZW4gPSBBZGFwdGVyTWdyLmluc3QudmlzaWJsZVNpemUuaGVpZ2h0LzIgKyAzMDA7XG4gICAgICAgIHRoaXMubm9kZS55ID0gbGVuO1xuICAgICAgICBhd2FpdCBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy5ub2RlLCBjYy50d2VlbigpLnRvKDAuNSwge3k6IDB9LCBjYy5lYXNlQmFja091dCgpKSk7XG4gICAgfVxuXG4gICAgYXN5bmMgaGlkZUVmZmVjdCgpIHtcbiAgICAgICAgbGV0IGxlbiA9IEFkYXB0ZXJNZ3IuaW5zdC52aXNpYmxlU2l6ZS5oZWlnaHQvMiArIDMwMDtcbiAgICAgICAgdGhpcy5ub2RlLnkgPSAwO1xuICAgICAgICBhd2FpdCBDb2Nvc0hlbHBlci5ydW5Ud2VlblN5bmModGhpcy5ub2RlLCBjYy50d2VlbigpLnRvKDAuMywge3k6IGxlbn0sIGNjLmVhc2VCYWNrSW4oKSkpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UISplitTexture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7b812zUAqRCDKXwz6AOISUT', 'UISplitTexture');
// Script/UIScript/UISplitTexture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var TexturePlus_1 = require("../Common/Components/TexturePlus");
var PolygonUtil_1 = require("../Common/Utils/PolygonUtil");
var UIForm_1 = require("../UIFrame/UIForm");
var FormMgr_1 = require("../UIFrame/FormMgr");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISplitTexture = /** @class */ (function (_super) {
    __extends(UISplitTexture, _super);
    function UISplitTexture() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.textureRoot = null;
        _this.graphics = null;
        _this.pic = null;
        _this.textures = [];
        _this.startPoint = null;
        _this.endPoint = null;
        return _this;
    }
    UISplitTexture.prototype.start = function () {
        this.init();
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
        this.graphics.node.x = -cc.visibleRect.width / 2;
        this.graphics.node.y = -cc.visibleRect.height / 2;
        this.view.Close.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UISplitTexture.prototype.init = function () {
        var node = new cc.Node();
        var t = node.addComponent(TexturePlus_1.default);
        node.parent = this.textureRoot;
        t.texture = this.pic;
        this.textures.push(t);
    };
    UISplitTexture.prototype.onTouchStart = function (e) {
        this.startPoint = e.getLocation();
    };
    UISplitTexture.prototype.onTouchMove = function (e) {
        this.graphics.clear();
        this.graphics.moveTo(this.startPoint.x, this.startPoint.y);
        var p = e.getLocation();
        this.graphics.lineTo(p.x, p.y);
        this.graphics.stroke();
    };
    UISplitTexture.prototype.onTouchEnd = function (e) {
        this.graphics.clear();
        this.endPoint = e.getLocation();
        this.useLineCutPolygon(this.startPoint, this.endPoint);
    };
    UISplitTexture.prototype.doSplit = function () {
        var h = this.pic.height, w = this.pic.width;
        for (var i = 0; i < 15; i++) {
            var p0 = cc.v2(-(w / 2 + 10), (Math.random() * h) - h / 2);
            var p1 = cc.v2(w / 2 + 10, (Math.random() * h) - h / 2);
            this.useLineCutPolygon(p0, p1, false);
        }
        for (var i = 0; i < 15; i++) {
            var p0 = cc.v2(Math.random() * w - w / 2, -(h / 2 + 10));
            var p1 = cc.v2(Math.random() * w - w / 2, (h / 2 + 10));
            this.useLineCutPolygon(p0, p1, false);
        }
    };
    UISplitTexture.prototype.useLineCutPolygon = function (p0, p1, isWorld) {
        if (isWorld === void 0) { isWorld = true; }
        for (var i = this.textures.length - 1; i >= 0; i--) {
            var texture = this.textures[i];
            var pa = p0.clone();
            var pb = p1.clone();
            if (isWorld) {
                pa = texture.node.convertToNodeSpaceAR(p0);
                pb = texture.node.convertToNodeSpaceAR(p1);
            }
            var polygons = PolygonUtil_1.PolygonUtil.lineCutPolygon(pa, pb, texture.polygon);
            if (polygons.length <= 0)
                continue;
            this.splitTexture(texture, polygons);
        }
    };
    UISplitTexture.prototype.splitTexture = function (texture, polygons) {
        texture.polygon = polygons[0];
        for (var i = 1; i < polygons.length; i++) {
            var node = new cc.Node();
            var t = node.addComponent(TexturePlus_1.default);
            node.parent = this.textureRoot;
            node.setPosition(texture.node.position);
            t.texture = this.pic;
            t.polygon = polygons[i];
            this.textures.push(t);
        }
    };
    UISplitTexture.prototype.onClickFly = function () {
        for (var i = 0; i < this.textures.length; i++) {
            var center = this.getPolygonCenter(this.textures[i].polygon);
            var dir = center.normalize();
            cc.tween(this.textures[i].node).by(5, { x: dir.x * 500, y: dir.y * 500 }).start();
        }
    };
    UISplitTexture.prototype.onClickReset = function () {
        var _this = this;
        var _loop_1 = function (i) {
            var center = this_1.getPolygonCenter(this_1.textures[i].polygon);
            var dir = center.normalize();
            cc.tween(this_1.textures[i].node).by(5, { x: -dir.x * 500, y: -dir.y * 500 }).call(function () {
                if (i === _this.textures.length - 1) {
                    _this.textureRoot.destroyAllChildren();
                    _this.textureRoot.removeAllChildren();
                    _this.textures = [];
                    _this.init();
                }
            }).start();
        };
        var this_1 = this;
        for (var i = 0; i < this.textures.length; i++) {
            _loop_1(i);
        }
    };
    UISplitTexture.prototype.onFallDown = function () {
        for (var i = 0; i < this.textures.length; i++) {
            var center = this.getPolygonCenter(this.textures[i].polygon);
            cc.tween(this.textures[i].node).delay((center.y + this.pic.height) / this.pic.height).by(2, { y: -500 }, cc.easeCircleActionIn()).start();
        }
    };
    UISplitTexture.prototype.onResetFallDown = function () {
    };
    UISplitTexture.prototype.getPolygonCenter = function (polygon) {
        var x = 0, y = 0;
        for (var i = 0; i < polygon.length; i++) {
            x += polygon[i].x;
            y += polygon[i].y;
        }
        x = x / polygon.length;
        y = y / polygon.length;
        return cc.v2(x, y);
    };
    __decorate([
        property(cc.Node)
    ], UISplitTexture.prototype, "textureRoot", void 0);
    __decorate([
        property(cc.Graphics)
    ], UISplitTexture.prototype, "graphics", void 0);
    __decorate([
        property(cc.Texture2D)
    ], UISplitTexture.prototype, "pic", void 0);
    UISplitTexture = __decorate([
        ccclass
    ], UISplitTexture);
    return UISplitTexture;
}(UIForm_1.UIScreen));
exports.default = UISplitTexture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/test/Item.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '53cebnLrQVNLaKgdj5qGYQV', 'Item');
// Script/test/Item.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Item = /** @class */ (function (_super) {
    __extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    Item.prototype.start = function () {
        var _this = this;
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (e) {
            _this.node.x += e.getDeltaX();
            _this.node.y += e.getDeltaY();
        }, this);
    };
    Item = __decorate([
        ccclass
    ], Item);
    return Item;
}(cc.Component));
exports.default = Item;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvdGVzdC9JdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWtDLHdCQUFZO0lBQTlDOztJQWNBLENBQUM7SUFWRyxlQUFlO0lBRWYsb0JBQUssR0FBTDtRQUFBLGlCQUtDO1FBSkcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBc0I7WUFDOUQsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQzdCLEtBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNqQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBWGdCLElBQUk7UUFEeEIsT0FBTztPQUNhLElBQUksQ0FjeEI7SUFBRCxXQUFDO0NBZEQsQUFjQyxDQWRpQyxFQUFFLENBQUMsU0FBUyxHQWM3QztrQkFkb0IsSUFBSSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJdGVtIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIFxuXG4gICAgLy8gb25Mb2FkICgpIHt9XG5cbiAgICBzdGFydCAoKSB7XG4gICAgICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9NT1ZFLCAoZTogY2MuRXZlbnQuRXZlbnRUb3VjaCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ub2RlLnggKz0gZS5nZXREZWx0YVgoKTtcbiAgICAgICAgICAgIHRoaXMubm9kZS55ICs9IGUuZ2V0RGVsdGFZKCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UITips.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ff954WkF+tGYpoJLOVBFST0', 'UITips');
// Script/UIScript/UITips.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SysDefine_1 = require("../UIFrame/config/SysDefine");
var Struct_1 = require("../UIFrame/Struct");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UITips = /** @class */ (function (_super) {
    __extends(UITips, _super);
    function UITips() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modalType = new Struct_1.ModalType(SysDefine_1.ModalOpacity.OpacityHalf, true);
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UITips.prototype.start = function () {
    };
    UITips.prototype.onShow = function (str) {
        this.view.Tips.string = str;
    };
    UITips = __decorate([
        ccclass
    ], UITips);
    return UITips;
}(UIForm_1.UIWindow));
exports.default = UITips;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlUaXBzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHlEQUEyRDtBQUMzRCw0Q0FBOEM7QUFDOUMsNENBQTZDO0FBRXZDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQW9DLDBCQUFRO0lBQTVDO1FBQUEscUVBa0JDO1FBaEJHLGVBQVMsR0FBRyxJQUFJLGtCQUFTLENBQUMsd0JBQVksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7O1FBZTFELGlCQUFpQjtJQUNyQixDQUFDO0lBWEcsZUFBZTtJQUVmLHNCQUFLLEdBQUw7SUFFQSxDQUFDO0lBRUQsdUJBQU0sR0FBTixVQUFPLEdBQVc7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO0lBQ2hDLENBQUM7SUFmZ0IsTUFBTTtRQUQxQixPQUFPO09BQ2EsTUFBTSxDQWtCMUI7SUFBRCxhQUFDO0NBbEJELEFBa0JDLENBbEJtQyxpQkFBUSxHQWtCM0M7a0JBbEJvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVJVGlwc19BdXRvIGZyb20gXCIuLi9BdXRvU2NyaXB0cy9VSVRpcHNfQXV0b1wiO1xuaW1wb3J0IHsgTW9kYWxPcGFjaXR5IH0gZnJvbSBcIi4uL1VJRnJhbWUvY29uZmlnL1N5c0RlZmluZVwiO1xuaW1wb3J0IHsgTW9kYWxUeXBlIH0gZnJvbSBcIi4uL1VJRnJhbWUvU3RydWN0XCI7XG5pbXBvcnQgeyBVSVdpbmRvdyB9IGZyb20gXCIuLi9VSUZyYW1lL1VJRm9ybVwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJVGlwcyBleHRlbmRzIFVJV2luZG93IHtcblxuICAgIG1vZGFsVHlwZSA9IG5ldyBNb2RhbFR5cGUoTW9kYWxPcGFjaXR5Lk9wYWNpdHlIYWxmLCB0cnVlKTtcblxuICAgIHZpZXc6IFVJVGlwc19BdXRvO1xuICAgIFxuXG4gICAgLy8gb25Mb2FkICgpIHt9XG5cbiAgICBzdGFydCAoKSB7XG5cbiAgICB9XG5cbiAgICBvblNob3coc3RyOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy52aWV3LlRpcHMuc3RyaW5nID0gc3RyO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIAbout.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '573a6vNZF1O7raeu9W+SfEO', 'UIAbout');
// Script/UIScript/UIAbout.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIAbout = /** @class */ (function (_super) {
    __extends(UIAbout, _super);
    function UIAbout() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    UIAbout.prototype.start = function () {
        this.view.Close.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
    };
    UIAbout = __decorate([
        ccclass
    ], UIAbout);
    return UIAbout;
}(UIForm_1.UIScreen));
exports.default = UIAbout;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlBYm91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSw4Q0FBeUM7QUFDekMsNENBQTZDO0FBRXZDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXFDLDJCQUFRO0lBQTdDOztJQWVBLENBQUM7SUFYRyx3QkFBd0I7SUFFeEIsZUFBZTtJQUVmLHVCQUFLLEdBQUw7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDckIsaUJBQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN4QixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBWmdCLE9BQU87UUFEM0IsT0FBTztPQUNhLE9BQU8sQ0FlM0I7SUFBRCxjQUFDO0NBZkQsQUFlQyxDQWZvQyxpQkFBUSxHQWU1QztrQkFmb0IsT0FBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSUFib3V0X0F1dG8gZnJvbSBcIi4uL0F1dG9TY3JpcHRzL1VJQWJvdXRfQXV0b1wiO1xuaW1wb3J0IEZvcm1NZ3IgZnJvbSBcIi4uL1VJRnJhbWUvRm9ybU1nclwiO1xuaW1wb3J0IHsgVUlTY3JlZW4gfSBmcm9tIFwiLi4vVUlGcmFtZS9VSUZvcm1cIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUFib3V0IGV4dGVuZHMgVUlTY3JlZW4ge1xuXG4gICAgdmlldzogVUlBYm91dF9BdXRvO1xuXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LkNsb3NlLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3IuYmFja1NjZW5lKCk7XG4gICAgICAgIH0sIHRoaXMpO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIWave.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '80a09Nx+l9II75ZmMkvlSAs', 'UIWave');
// Script/UIScript/UIWave.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIWave = /** @class */ (function (_super) {
    __extends(UIWave, _super);
    function UIWave() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.polygonCollider = null;
        return _this;
        // update (dt) {}
    }
    // onLoad () {}
    UIWave.prototype.start = function () {
        this.polygonCollider.points = [];
    };
    __decorate([
        property(cc.PhysicsPolygonCollider)
    ], UIWave.prototype, "polygonCollider", void 0);
    UIWave = __decorate([
        ccclass
    ], UIWave);
    return UIWave;
}(cc.Component));
exports.default = UIWave;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlXYXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQW9DLDBCQUFZO0lBQWhEO1FBQUEscUVBWUM7UUFWd0MscUJBQWUsR0FBOEIsSUFBSSxDQUFDOztRQVN2RixpQkFBaUI7SUFDckIsQ0FBQztJQVBHLGVBQWU7SUFFZixzQkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFBO0lBQ3BDLENBQUM7SUFQb0M7UUFBcEMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzttREFBbUQ7SUFGdEUsTUFBTTtRQUQxQixPQUFPO09BQ2EsTUFBTSxDQVkxQjtJQUFELGFBQUM7Q0FaRCxBQVlDLENBWm1DLEVBQUUsQ0FBQyxTQUFTLEdBWS9DO2tCQVpvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSVdhdmUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KGNjLlBoeXNpY3NQb2x5Z29uQ29sbGlkZXIpIHBvbHlnb25Db2xsaWRlcjogY2MuUGh5c2ljc1BvbHlnb25Db2xsaWRlciA9IG51bGw7XG4gICAgXG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy5wb2x5Z29uQ29sbGlkZXIucG9pbnRzID0gW11cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'da248zQUHNGAYyaJMo+rhIL', 'UIConfig');
// Script/UIConfig.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UIConfig = /** @class */ (function () {
    function UIConfig() {
    }
    UIConfig.UIFunction = {
        prefabUrl: "Forms/Fixed/UIFunction",
        type: "UIFixed"
    };
    UIConfig.UISound = {
        prefabUrl: "Forms/Fixed/UISound",
        type: "UIFixed"
    };
    UIConfig.UIAbout = {
        prefabUrl: "Forms/Screen/UIAbout",
        type: "UIScreen"
    };
    UIConfig.UICapture = {
        prefabUrl: "Forms/Screen/UICapture",
        type: "UIScreen"
    };
    UIConfig.UIDungeon = {
        prefabUrl: "Forms/Screen/UIDungeon",
        type: "UIScreen"
    };
    UIConfig.UIECSView = {
        prefabUrl: "Forms/Screen/UIECSView",
        type: "UIScreen"
    };
    UIConfig.UIGame = {
        prefabUrl: "Forms/Screen/UIGame",
        type: "UIScreen"
    };
    UIConfig.UIHome = {
        prefabUrl: "Forms/Screen/UIHome",
        type: "UIScreen"
    };
    UIConfig.UILight = {
        prefabUrl: "Forms/Screen/UILight",
        type: "UIScreen"
    };
    UIConfig.UIMap = {
        prefabUrl: "Forms/Screen/UIMap",
        type: "UIScreen"
    };
    UIConfig.UIMeshTexture = {
        prefabUrl: "Forms/Screen/UIMeshTexture",
        type: "UIScreen"
    };
    UIConfig.UINavigator = {
        prefabUrl: "Forms/Screen/UINavigator",
        type: "UIScreen"
    };
    UIConfig.UIScrollTexture = {
        prefabUrl: "Forms/Screen/UIScrollTexture",
        type: "UIScreen"
    };
    UIConfig.UISplitTexture = {
        prefabUrl: "Forms/Screen/UISplitTexture",
        type: "UIScreen"
    };
    UIConfig.UILoading = {
        prefabUrl: "Forms/Tips/UILoading",
        type: "UITips"
    };
    UIConfig.UIMobx = {
        prefabUrl: "Forms/Windows/UIMobx",
        type: "UIWindow"
    };
    UIConfig.UIPop = {
        prefabUrl: "Forms/Windows/UIPop",
        type: "UIWindow"
    };
    UIConfig.UIScrollPlus = {
        prefabUrl: "Forms/Windows/UIScrollPlus",
        type: "UIWindow"
    };
    UIConfig.UISetting = {
        prefabUrl: "Forms/Windows/UISetting",
        type: "UIWindow"
    };
    UIConfig.UISkills = {
        prefabUrl: "Forms/Windows/UISkills",
        type: "UIWindow"
    };
    UIConfig.UITips = {
        prefabUrl: "Forms/Windows/UITips",
        type: "UIWindow"
    };
    return UIConfig;
}());
exports.default = UIConfig;
cc.game.on(cc.game.EVENT_GAME_INITED, function () {
    for (var key in UIConfig) {
        var constourt = cc.js.getClassByName(key);
        if (constourt)
            constourt['UIConfig'] = UIConfig[key];
    }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtJQUFBO0lBc0ZBLENBQUM7SUFyRlUsbUJBQVUsR0FBRztRQUNoQixTQUFTLEVBQUUsd0JBQXdCO1FBQ25DLElBQUksRUFBRSxTQUFTO0tBQ2xCLENBQUE7SUFDTSxnQkFBTyxHQUFHO1FBQ2IsU0FBUyxFQUFFLHFCQUFxQjtRQUNoQyxJQUFJLEVBQUUsU0FBUztLQUNsQixDQUFBO0lBQ00sZ0JBQU8sR0FBRztRQUNiLFNBQVMsRUFBRSxzQkFBc0I7UUFDakMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGtCQUFTLEdBQUc7UUFDZixTQUFTLEVBQUUsd0JBQXdCO1FBQ25DLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxrQkFBUyxHQUFHO1FBQ2YsU0FBUyxFQUFFLHdCQUF3QjtRQUNuQyxJQUFJLEVBQUUsVUFBVTtLQUNuQixDQUFBO0lBQ00sa0JBQVMsR0FBRztRQUNmLFNBQVMsRUFBRSx3QkFBd0I7UUFDbkMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGVBQU0sR0FBRztRQUNaLFNBQVMsRUFBRSxxQkFBcUI7UUFDaEMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGVBQU0sR0FBRztRQUNaLFNBQVMsRUFBRSxxQkFBcUI7UUFDaEMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGdCQUFPLEdBQUc7UUFDYixTQUFTLEVBQUUsc0JBQXNCO1FBQ2pDLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxjQUFLLEdBQUc7UUFDWCxTQUFTLEVBQUUsb0JBQW9CO1FBQy9CLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxzQkFBYSxHQUFHO1FBQ25CLFNBQVMsRUFBRSw0QkFBNEI7UUFDdkMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLG9CQUFXLEdBQUc7UUFDakIsU0FBUyxFQUFFLDBCQUEwQjtRQUNyQyxJQUFJLEVBQUUsVUFBVTtLQUNuQixDQUFBO0lBQ00sd0JBQWUsR0FBRztRQUNyQixTQUFTLEVBQUUsOEJBQThCO1FBQ3pDLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSx1QkFBYyxHQUFHO1FBQ3BCLFNBQVMsRUFBRSw2QkFBNkI7UUFDeEMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGtCQUFTLEdBQUc7UUFDZixTQUFTLEVBQUUsc0JBQXNCO1FBQ2pDLElBQUksRUFBRSxRQUFRO0tBQ2pCLENBQUE7SUFDTSxlQUFNLEdBQUc7UUFDWixTQUFTLEVBQUUsc0JBQXNCO1FBQ2pDLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxjQUFLLEdBQUc7UUFDWCxTQUFTLEVBQUUscUJBQXFCO1FBQ2hDLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxxQkFBWSxHQUFHO1FBQ2xCLFNBQVMsRUFBRSw0QkFBNEI7UUFDdkMsSUFBSSxFQUFFLFVBQVU7S0FDbkIsQ0FBQTtJQUNNLGtCQUFTLEdBQUc7UUFDZixTQUFTLEVBQUUseUJBQXlCO1FBQ3BDLElBQUksRUFBRSxVQUFVO0tBQ25CLENBQUE7SUFDTSxpQkFBUSxHQUFHO1FBQ2QsU0FBUyxFQUFFLHdCQUF3QjtRQUNuQyxJQUFJLEVBQUUsVUFBVTtLQUNuQixDQUFBO0lBQ00sZUFBTSxHQUFHO1FBQ1osU0FBUyxFQUFFLHNCQUFzQjtRQUNqQyxJQUFJLEVBQUUsVUFBVTtLQUNuQixDQUFBO0lBRUwsZUFBQztDQXRGRCxBQXNGQyxJQUFBO2tCQXRGb0IsUUFBUTtBQXVGN0IsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtJQUNsQyxLQUFJLElBQU0sR0FBRyxJQUFJLFFBQVEsRUFBRTtRQUN2QixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxQyxJQUFHLFNBQVM7WUFBRSxTQUFTLENBQUMsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ3ZEO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJQ29uZmlnIHtcbiAgICBzdGF0aWMgVUlGdW5jdGlvbiA9IHtcbiAgICAgICAgcHJlZmFiVXJsOiBcIkZvcm1zL0ZpeGVkL1VJRnVuY3Rpb25cIixcbiAgICAgICAgdHlwZTogXCJVSUZpeGVkXCJcbiAgICB9XG4gICAgc3RhdGljIFVJU291bmQgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9GaXhlZC9VSVNvdW5kXCIsXG4gICAgICAgIHR5cGU6IFwiVUlGaXhlZFwiXG4gICAgfVxuICAgIHN0YXRpYyBVSUFib3V0ID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvU2NyZWVuL1VJQWJvdXRcIixcbiAgICAgICAgdHlwZTogXCJVSVNjcmVlblwiXG4gICAgfVxuICAgIHN0YXRpYyBVSUNhcHR1cmUgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlDYXB0dXJlXCIsXG4gICAgICAgIHR5cGU6IFwiVUlTY3JlZW5cIlxuICAgIH1cbiAgICBzdGF0aWMgVUlEdW5nZW9uID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvU2NyZWVuL1VJRHVuZ2VvblwiLFxuICAgICAgICB0eXBlOiBcIlVJU2NyZWVuXCJcbiAgICB9XG4gICAgc3RhdGljIFVJRUNTVmlldyA9IHtcbiAgICAgICAgcHJlZmFiVXJsOiBcIkZvcm1zL1NjcmVlbi9VSUVDU1ZpZXdcIixcbiAgICAgICAgdHlwZTogXCJVSVNjcmVlblwiXG4gICAgfVxuICAgIHN0YXRpYyBVSUdhbWUgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlHYW1lXCIsXG4gICAgICAgIHR5cGU6IFwiVUlTY3JlZW5cIlxuICAgIH1cbiAgICBzdGF0aWMgVUlIb21lID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvU2NyZWVuL1VJSG9tZVwiLFxuICAgICAgICB0eXBlOiBcIlVJU2NyZWVuXCJcbiAgICB9XG4gICAgc3RhdGljIFVJTGlnaHQgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlMaWdodFwiLFxuICAgICAgICB0eXBlOiBcIlVJU2NyZWVuXCJcbiAgICB9XG4gICAgc3RhdGljIFVJTWFwID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvU2NyZWVuL1VJTWFwXCIsXG4gICAgICAgIHR5cGU6IFwiVUlTY3JlZW5cIlxuICAgIH1cbiAgICBzdGF0aWMgVUlNZXNoVGV4dHVyZSA9IHtcbiAgICAgICAgcHJlZmFiVXJsOiBcIkZvcm1zL1NjcmVlbi9VSU1lc2hUZXh0dXJlXCIsXG4gICAgICAgIHR5cGU6IFwiVUlTY3JlZW5cIlxuICAgIH1cbiAgICBzdGF0aWMgVUlOYXZpZ2F0b3IgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlOYXZpZ2F0b3JcIixcbiAgICAgICAgdHlwZTogXCJVSVNjcmVlblwiXG4gICAgfVxuICAgIHN0YXRpYyBVSVNjcm9sbFRleHR1cmUgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlTY3JvbGxUZXh0dXJlXCIsXG4gICAgICAgIHR5cGU6IFwiVUlTY3JlZW5cIlxuICAgIH1cbiAgICBzdGF0aWMgVUlTcGxpdFRleHR1cmUgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9TY3JlZW4vVUlTcGxpdFRleHR1cmVcIixcbiAgICAgICAgdHlwZTogXCJVSVNjcmVlblwiXG4gICAgfVxuICAgIHN0YXRpYyBVSUxvYWRpbmcgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9UaXBzL1VJTG9hZGluZ1wiLFxuICAgICAgICB0eXBlOiBcIlVJVGlwc1wiXG4gICAgfVxuICAgIHN0YXRpYyBVSU1vYnggPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9XaW5kb3dzL1VJTW9ieFwiLFxuICAgICAgICB0eXBlOiBcIlVJV2luZG93XCJcbiAgICB9XG4gICAgc3RhdGljIFVJUG9wID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvV2luZG93cy9VSVBvcFwiLFxuICAgICAgICB0eXBlOiBcIlVJV2luZG93XCJcbiAgICB9XG4gICAgc3RhdGljIFVJU2Nyb2xsUGx1cyA9IHtcbiAgICAgICAgcHJlZmFiVXJsOiBcIkZvcm1zL1dpbmRvd3MvVUlTY3JvbGxQbHVzXCIsXG4gICAgICAgIHR5cGU6IFwiVUlXaW5kb3dcIlxuICAgIH1cbiAgICBzdGF0aWMgVUlTZXR0aW5nID0ge1xuICAgICAgICBwcmVmYWJVcmw6IFwiRm9ybXMvV2luZG93cy9VSVNldHRpbmdcIixcbiAgICAgICAgdHlwZTogXCJVSVdpbmRvd1wiXG4gICAgfVxuICAgIHN0YXRpYyBVSVNraWxscyA9IHtcbiAgICAgICAgcHJlZmFiVXJsOiBcIkZvcm1zL1dpbmRvd3MvVUlTa2lsbHNcIixcbiAgICAgICAgdHlwZTogXCJVSVdpbmRvd1wiXG4gICAgfVxuICAgIHN0YXRpYyBVSVRpcHMgPSB7XG4gICAgICAgIHByZWZhYlVybDogXCJGb3Jtcy9XaW5kb3dzL1VJVGlwc1wiLFxuICAgICAgICB0eXBlOiBcIlVJV2luZG93XCJcbiAgICB9XG4gICAgXG59XG5jYy5nYW1lLm9uKGNjLmdhbWUuRVZFTlRfR0FNRV9JTklURUQsICgpID0+IHtcbiAgICBmb3IoY29uc3Qga2V5IGluIFVJQ29uZmlnKSB7XG4gICAgICAgIGxldCBjb25zdG91cnQgPSBjYy5qcy5nZXRDbGFzc0J5TmFtZShrZXkpO1xuICAgICAgICBpZihjb25zdG91cnQpIGNvbnN0b3VydFsnVUlDb25maWcnXSA9IFVJQ29uZmlnW2tleV07XG4gICAgfVxufSk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '229db7NNuRBFL06xiDLurpB', 'UIGame');
// Script/UIScript/UIGame.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var GuideConfig_1 = require("../config/GuideConfig");
var UIConfig_1 = require("../UIConfig");
var FormMgr_1 = require("../UIFrame/FormMgr");
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIGame = /** @class */ (function (_super) {
    __extends(UIGame, _super);
    function UIGame() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // onLoad () {}
    UIGame.prototype.start = function () {
        this.view.Back.addClick(function () {
            FormMgr_1.default.backScene();
        }, this);
        this.view.toMap.addClick(function () {
            FormMgr_1.default.open(UIConfig_1.default.UIECSView);
        }, this);
        this.view.GuideNode.addClick(this.onBtnGuide.bind(this), this);
        this.onBtnGuide();
        for (var index = 1; index < 14; index++) {
            // const element = array[index];
            var key = "jianzhu";
            if (index < 10) {
                key = key + "0" + index;
            }
            else {
                key = key + index;
            }
            var ksp = cc.sys.localStorage.getItem(key);
            var sp = this.view.items.getChildByName(key);
            if (ksp == null) {
                sp.getComponent(cc.Sprite).enabled = false;
            }
            else {
                sp.getComponent(cc.Sprite).enabled = true;
            }
        }
    };
    UIGame.prototype.onBtnGuide = function () {
        var guideIdx = cc.sys.localStorage.getItem("guidxIdx");
        if (guideIdx == null) {
            cc.sys.localStorage.setItem("guidxIdx", 0);
            guideIdx = 0;
        }
        var txt = GuideConfig_1.GuideConfig[Number(guideIdx)];
        if (txt != null) {
            this.view.LblTip.string = txt;
            ++guideIdx;
            cc.sys.localStorage.setItem("guidxIdx", guideIdx);
        }
        else {
            this.view.guidNode.active = false;
        }
    };
    UIGame.prototype.onBuildItem = function (ev, dat) {
        var _this = this;
        var target = ev.target;
        // console.log(target)
        var key = target.name;
        var ksp = cc.sys.localStorage.getItem(key);
        if (ksp == null) {
            this.view.buldtool.active = true;
            this.view.buldtool.position = target.position;
            this.view.buldtool.getComponent(cc.Animation).play();
            cc.tween(this.node)
                .delay(1.5)
                .call(function () {
                _this.view.buldtool.active = false;
                target.getComponent(cc.Sprite).enabled = true;
                cc.sys.localStorage.setItem(key, 1);
            }).start();
        }
    };
    UIGame = __decorate([
        ccclass
    ], UIGame);
    return UIGame;
}(UIForm_1.UIScreen));
exports.default = UIGame;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlHYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHFEQUFvRDtBQUNwRCx3Q0FBbUM7QUFDbkMsOENBQXlDO0FBQ3pDLDRDQUE2QztBQUV2QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFvQywwQkFBUTtJQUE1Qzs7SUEwRUEsQ0FBQztJQXRFRyxlQUFlO0lBRWYsc0JBQUssR0FBTDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNwQixpQkFBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUNyQixpQkFBTyxDQUFDLElBQUksQ0FBQyxrQkFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUdULElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFHbEIsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUNyQyxnQ0FBZ0M7WUFDaEMsSUFBSSxHQUFHLEdBQUcsU0FBUyxDQUFBO1lBQ25CLElBQUcsS0FBSyxHQUFDLEVBQUUsRUFBQztnQkFDUixHQUFHLEdBQUcsR0FBRyxHQUFDLEdBQUcsR0FBQyxLQUFLLENBQUE7YUFDdEI7aUJBQUk7Z0JBQ0QsR0FBRyxHQUFHLEdBQUcs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QztrQkExRW9CLE1BQU0iLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVUlHYW1lX0F1dG8gZnJvbSBcIi4uL0F1dG9TY3JpcHRzL1VJR2FtZV9BdXRvXCI7XG5pbXBvcnQgeyBHdWlkZUNvbmZpZyB9IGZyb20gXCIuLi9jb25maWcvR3VpZGVDb25maWdcIjtcbmltcG9ydCBVSUNvbmZpZyBmcm9tIFwiLi4vVUlDb25maWdcIjtcbmltcG9ydCBGb3JtTWdyIGZyb20gXCIuLi9VSUZyYW1lL0Zvcm1NZ3JcIjtcbmltcG9ydCB7IFVJU2NyZWVuIH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlHYW1lIGV4dGVuZHMgVUlTY3JlZW4ge1xuXG5cbiAgICB2aWV3OiBVSUdhbWVfQXV0bztcbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy52aWV3LkJhY2suYWRkQ2xpY2soKCkgPT4ge1xuICAgICAgICAgICAgRm9ybU1nci5iYWNrU2NlbmUoKTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgdGhpcy52aWV3LnRvTWFwLmFkZENsaWNrKCgpID0+IHtcbiAgICAgICAgICAgIEZvcm1NZ3Iub3BlbihVSUNvbmZpZy5VSUVDU1ZpZXcpO1xuICAgICAgICB9LCB0aGlzKTtcblxuXG4gICAgICAgIHRoaXMudmlldy5HdWlkZU5vZGUuYWRkQ2xpY2sodGhpcy5vbkJ0bkd1aWRlLmJpbmQodGhpcyksdGhpcyk7XG4gICAgICAgIHRoaXMub25CdG5HdWlkZSgpOyBcblxuXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCAxNDsgaW5kZXgrKykge1xuICAgICAgICAgICAgLy8gY29uc3QgZWxlbWVudCA9IGFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGxldCBrZXkgPSBcImppYW56aHVcIlxuICAgICAgICAgICAgaWYoaW5kZXg8MTApe1xuICAgICAgICAgICAgICAgIGtleSA9IGtleStcIjBcIitpbmRleFxuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAga2V5ID0ga2V5K2luZGV4XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQga3NwID0gY2Muc3lzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSlcbiAgICAgICAgICAgIGxldCBzcCA9IHRoaXMudmlldy5pdGVtcy5nZXRDaGlsZEJ5TmFtZShrZXkpXG4gICAgICAgICAgICBpZihrc3A9PW51bGwpe1xuICAgICAgICAgICAgICAgIHNwLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIHNwLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25CdG5HdWlkZSgpe1xuICAgICAgICBsZXQgZ3VpZGVJZHggPSBjYy5zeXMubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJndWlkeElkeFwiKVxuICAgICAgICBpZihndWlkZUlkeD09bnVsbCl7XG4gICAgICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJndWlkeElkeFwiLDApO1xuICAgICAgICAgICAgZ3VpZGVJZHggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGxldCB0eHQgPSBHdWlkZUNvbmZpZ1tOdW1iZXIoZ3VpZGVJZHgpXTtcbiAgICAgICAgaWYodHh0ICE9IG51bGwpe1xuICAgICAgICAgICB0aGlzLnZpZXcuTGJsVGlwLnN0cmluZyA9IHR4dDtcbiAgICAgICAgICAgKytndWlkZUlkeDtcbiAgICAgICAgICAgY2Muc3lzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZ3VpZHhJZHhcIixndWlkZUlkeCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgdGhpcy52aWV3Lmd1aWROb2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25CdWlsZEl0ZW0oZXYsIGRhdCl7XG4gICAgICAgIGxldCB0YXJnZXQgPSBldi50YXJnZXQ7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRhcmdldClcbiAgICAgICAgbGV0IGtleSA9IHRhcmdldC5uYW1lO1xuICAgICAgICBsZXQga3NwID0gY2Muc3lzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSlcbiAgICAgICAgaWYoa3NwPT1udWxsKXtcbiAgICAgICAgICAgIHRoaXMudmlldy5idWxkdG9vbC5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy52aWV3LmJ1bGR0b29sLnBvc2l0aW9uID0gdGFyZ2V0LnBvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy52aWV3LmJ1bGR0b29sLmdldENvbXBvbmVudChjYy5BbmltYXRpb24pLnBsYXkoKTtcbiAgICAgICAgICAgIGNjLnR3ZWVuKHRoaXMubm9kZSlcbiAgICAgICAgICAgIC5kZWxheSgxLjUpXG4gICAgICAgICAgICAuY2FsbCgoKT0+e1xuICAgICAgICAgICAgICAgIHRoaXMudmlldy5idWxkdG9vbC5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0YXJnZXQuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZW5hYmxlZD10cnVlO1xuICAgICAgICAgICAgICAgIGNjLnN5cy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksMSk7XG4gICAgICAgICAgICB9KS5zdGFydCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/UIForm.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fecebM0tgRBP4NNiSEz6NLd', 'UIForm');
// Script/UIFrame/UIForm.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UITips = exports.UIFixed = exports.UIWindow = exports.UIScreen = void 0;
var CocosHelper_1 = require("./CocosHelper");
var SysDefine_1 = require("./config/SysDefine");
var FormMgr_1 = require("./FormMgr");
var Struct_1 = require("./Struct");
var UIBase_1 = require("./UIBase");
var UIScreen = /** @class */ (function (_super) {
    __extends(UIScreen, _super);
    function UIScreen() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.formType = SysDefine_1.FormType.Screen;
        _this.closeType = Struct_1.ECloseType.CloseAndDestory;
        return _this;
    }
    UIScreen.prototype.closeSelf = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FormMgr_1.default.close({ prefabUrl: this.fid, type: this.formType })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return UIScreen;
}(UIBase_1.default));
exports.UIScreen = UIScreen;
var UIWindow = /** @class */ (function (_super) {
    __extends(UIWindow, _super);
    function UIWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.formType = SysDefine_1.FormType.Window;
        _this.modalType = new Struct_1.ModalType(SysDefine_1.ModalOpacity.OpacityFull); // 阴影类型
        _this.closeType = Struct_1.ECloseType.LRU;
        return _this;
    }
    /** 显示效果 */
    UIWindow.prototype.showEffect = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.node.scale = 0;
                        return [4 /*yield*/, CocosHelper_1.default.runTweenSync(this.node, cc.tween().to(0.3, { scale: 1 }, cc.easeBackOut()))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    UIWindow.prototype.closeSelf = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FormMgr_1.default.close({ prefabUrl: this.fid, type: this.formType })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return UIWindow;
}(UIBase_1.default));
exports.UIWindow = UIWindow;
var UIFixed = /** @class */ (function (_super) {
    __extends(UIFixed, _super);
    function UIFixed() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.formType = SysDefine_1.FormType.Fixed;
        _this.closeType = Struct_1.ECloseType.LRU;
        return _this;
    }
    UIFixed.prototype.closeSelf = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FormMgr_1.default.close({ prefabUrl: this.fid, type: this.formType })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return UIFixed;
}(UIBase_1.default));
exports.UIFixed = UIFixed;
var UITips = /** @class */ (function (_super) {
    __extends(UITips, _super);
    function UITips() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.formType = SysDefine_1.FormType.Tips;
        _this.closeType = Struct_1.ECloseType.CloseAndHide;
        return _this;
    }
    UITips.prototype.closeSelf = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FormMgr_1.default.close({ prefabUrl: this.fid, type: this.formType })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return UITips;
}(UIBase_1.default));
exports.UITips = UITips;
// @ts-ignore
cc.UIScreen = UIScreen;
// @ts-ignore
cc.UIWindow = UIWindow;
// @ts-ignore
cc.UIFixed = UIFixed;
// @ts-ignore
cc.UITips = UITips;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9VSUZvcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUF3QztBQUN4QyxnREFBNEQ7QUFDNUQscUNBQWdDO0FBQ2hDLG1DQUFpRDtBQUNqRCxtQ0FBOEI7QUFHOUI7SUFBOEIsNEJBQU07SUFBcEM7UUFBQSxxRUFPQztRQU5HLGNBQVEsR0FBRyxvQkFBUSxDQUFDLE1BQU0sQ0FBQztRQUMzQixlQUFTLEdBQUcsbUJBQVUsQ0FBQyxlQUFlLENBQUM7O0lBSzNDLENBQUM7SUFIZ0IsNEJBQVMsR0FBdEI7dUNBQTBCLE9BQU87Ozs0QkFDdEIscUJBQU0saUJBQU8sQ0FBQyxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUE7NEJBQXRFLHNCQUFPLFNBQStELEVBQUM7Ozs7S0FDMUU7SUFDTCxlQUFDO0FBQUQsQ0FQQSxBQU9DLENBUDZCLGdCQUFNLEdBT25DO0FBUFksNEJBQVE7QUFTckI7SUFBOEIsNEJBQU07SUFBcEM7UUFBQSxxRUFlQztRQWRHLGNBQVEsR0FBRyxvQkFBUSxDQUFDLE1BQU0sQ0FBQztRQUMzQixlQUFTLEdBQUcsSUFBSSxrQkFBUyxDQUFDLHdCQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBZ0IsT0FBTztRQUMzRSxlQUFTLEdBQUcsbUJBQVUsQ0FBQyxHQUFHLENBQUM7O0lBWS9CLENBQUM7SUFWRyxXQUFXO0lBQ0UsNkJBQVUsR0FBdkI7Ozs7O3dCQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQzt3QkFDcEIscUJBQU0scUJBQVcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUMsRUFBRSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxFQUFBOzt3QkFBM0YsU0FBMkYsQ0FBQzs7Ozs7S0FDL0Y7SUFFWSw0QkFBUyxHQUF0Qjt1Q0FBMEIsT0FBTzs7OzRCQUN0QixxQkFBTSxpQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFDLENBQUMsRUFBQTs0QkFBdEUsc0JBQU8sU0FBK0QsRUFBQzs7OztLQUMxRTtJQUVMLGVBQUM7QUFBRCxDQWZBLEFBZUMsQ0FmNkIsZ0JBQU0sR0FlbkM7QUFmWSw0QkFBUTtBQWlCckI7SUFBNkIsMkJBQU07SUFBbkM7UUFBQSxxRUFRQztRQVBHLGNBQVEsR0FBRyxvQkFBUSxDQUFDLEtBQUssQ0FBQztRQUMxQixlQUFTLEdBQUcsbUJBQVUsQ0FBQyxHQUFHLENBQUM7O0lBTS9CLENBQUM7SUFKZ0IsMkJBQVMsR0FBdEI7dUNBQTBCLE9BQU87Ozs0QkFDdEIscUJBQU0saUJBQU8sQ0FBQyxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUE7NEJBQXRFLHNCQUFPLFNBQStELEVBQUM7Ozs7S0FDMUU7SUFFTCxjQUFDO0FBQUQsQ0FSQSxBQVFDLENBUjRCLGdCQUFNLEdBUWxDO0FBUlksMEJBQU87QUFVcEI7SUFBNEIsMEJBQU07SUFBbEM7UUFBQSxxRUFPQztRQU5HLGNBQVEsR0FBRyxvQkFBUSxDQUFDLElBQUksQ0FBQztRQUN6QixlQUFTLEdBQUcsbUJBQVUsQ0FBQyxZQUFZLENBQUM7O0lBS3hDLENBQUM7SUFIZ0IsMEJBQVMsR0FBdEI7dUNBQTBCLE9BQU87Ozs0QkFDdEIscUJBQU0saUJBQU8sQ0FBQyxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUE7NEJBQXRFLHNCQUFPLFNBQStELEVBQUM7Ozs7S0FDMUU7SUFDTCxhQUFDO0FBQUQsQ0FQQSxBQU9DLENBUDJCLGdCQUFNLEdBT2pDO0FBUFksd0JBQU07QUFTbkIsYUFBYTtBQUNiLEVBQUUsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBQ3ZCLGFBQWE7QUFDYixFQUFFLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUN2QixhQUFhO0FBQ2IsRUFBRSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDckIsYUFBYTtBQUNiLEVBQUUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvY29zSGVscGVyIGZyb20gXCIuL0NvY29zSGVscGVyXCI7XG5pbXBvcnQgeyBGb3JtVHlwZSwgTW9kYWxPcGFjaXR5IH0gZnJvbSBcIi4vY29uZmlnL1N5c0RlZmluZVwiO1xuaW1wb3J0IEZvcm1NZ3IgZnJvbSBcIi4vRm9ybU1nclwiO1xuaW1wb3J0IHsgRUNsb3NlVHlwZSwgTW9kYWxUeXBlIH0gZnJvbSBcIi4vU3RydWN0XCI7XG5pbXBvcnQgVUlCYXNlIGZyb20gXCIuL1VJQmFzZVwiO1xuXG5cbmV4cG9ydCBjbGFzcyBVSVNjcmVlbiBleHRlbmRzIFVJQmFzZSB7XG4gICAgZm9ybVR5cGUgPSBGb3JtVHlwZS5TY3JlZW47XG4gICAgY2xvc2VUeXBlID0gRUNsb3NlVHlwZS5DbG9zZUFuZERlc3Rvcnk7XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2VTZWxmKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgRm9ybU1nci5jbG9zZSh7cHJlZmFiVXJsOiB0aGlzLmZpZCwgdHlwZTogdGhpcy5mb3JtVHlwZX0pO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVJV2luZG93IGV4dGVuZHMgVUlCYXNlIHtcbiAgICBmb3JtVHlwZSA9IEZvcm1UeXBlLldpbmRvdzsgICAgXG4gICAgbW9kYWxUeXBlID0gbmV3IE1vZGFsVHlwZShNb2RhbE9wYWNpdHkuT3BhY2l0eUZ1bGwpOyAgICAgICAgICAgICAgICAvLyDpmLTlvbHnsbvlnotcbiAgICBjbG9zZVR5cGUgPSBFQ2xvc2VUeXBlLkxSVTtcblxuICAgIC8qKiDmmL7npLrmlYjmnpwgKi9cbiAgICBwdWJsaWMgYXN5bmMgc2hvd0VmZmVjdCgpIHtcbiAgICAgICAgdGhpcy5ub2RlLnNjYWxlID0gMDtcbiAgICAgICAgYXdhaXQgQ29jb3NIZWxwZXIucnVuVHdlZW5TeW5jKHRoaXMubm9kZSwgY2MudHdlZW4oKS50bygwLjMsIHtzY2FsZTogMX0sIGNjLmVhc2VCYWNrT3V0KCkpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2VTZWxmKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgRm9ybU1nci5jbG9zZSh7cHJlZmFiVXJsOiB0aGlzLmZpZCwgdHlwZTogdGhpcy5mb3JtVHlwZX0pO1xuICAgIH1cblxufVxuXG5leHBvcnQgY2xhc3MgVUlGaXhlZCBleHRlbmRzIFVJQmFzZSB7XG4gICAgZm9ybVR5cGUgPSBGb3JtVHlwZS5GaXhlZDtcbiAgICBjbG9zZVR5cGUgPSBFQ2xvc2VUeXBlLkxSVTtcblxuICAgIHB1YmxpYyBhc3luYyBjbG9zZVNlbGYoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIHJldHVybiBhd2FpdCBGb3JtTWdyLmNsb3NlKHtwcmVmYWJVcmw6IHRoaXMuZmlkLCB0eXBlOiB0aGlzLmZvcm1UeXBlfSk7XG4gICAgfVxuICAgIFxufVxuXG5leHBvcnQgY2xhc3MgVUlUaXBzIGV4dGVuZHMgVUlCYXNlIHtcbiAgICBmb3JtVHlwZSA9IEZvcm1UeXBlLlRpcHM7XG4gICAgY2xvc2VUeXBlID0gRUNsb3NlVHlwZS5DbG9zZUFuZEhpZGU7XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2VTZWxmKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgRm9ybU1nci5jbG9zZSh7cHJlZmFiVXJsOiB0aGlzLmZpZCwgdHlwZTogdGhpcy5mb3JtVHlwZX0pO1xuICAgIH1cbn1cblxuLy8gQHRzLWlnbm9yZVxuY2MuVUlTY3JlZW4gPSBVSVNjcmVlbjtcbi8vIEB0cy1pZ25vcmVcbmNjLlVJV2luZG93ID0gVUlXaW5kb3c7XG4vLyBAdHMtaWdub3JlXG5jYy5VSUZpeGVkID0gVUlGaXhlZDtcbi8vIEB0cy1pZ25vcmVcbmNjLlVJVGlwcyA9IFVJVGlwcztcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIScript/UIScrollTexture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f727ajIaBJPYHecdX0LjtZ', 'UIScrollTexture');
// Script/UIScript/UIScrollTexture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var UIForm_1 = require("../UIFrame/UIForm");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIScrollTexture = /** @class */ (function (_super) {
    __extends(UIScrollTexture, _super);
    function UIScrollTexture() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.spTexture = null;
        _this.turn = 1;
        _this.progress = 0;
        return _this;
    }
    // onLoad () {}
    UIScrollTexture.prototype.start = function () {
    };
    UIScrollTexture.prototype.update = function (dt) {
        this.progress += dt * this.turn * 0.2;
        this.spTexture.getMaterial(0).setProperty('progress', this.progress);
        if (this.progress >= 1) {
            this.turn = -1;
        }
        if (this.progress <= 0) {
            this.turn = 1;
        }
    };
    __decorate([
        property(cc.Sprite)
    ], UIScrollTexture.prototype, "spTexture", void 0);
    UIScrollTexture = __decorate([
        ccclass
    ], UIScrollTexture);
    return UIScrollTexture;
}(UIForm_1.UIScreen));
exports.default = UIScrollTexture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlTY3JpcHQvVUlTY3JvbGxUZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDRDQUE2QztBQUV2QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUE2QyxtQ0FBUTtJQUFyRDtRQUFBLHFFQXVCQztRQXJCd0IsZUFBUyxHQUFjLElBQUksQ0FBQztRQVN6QyxVQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ1QsY0FBUSxHQUFHLENBQUMsQ0FBQzs7SUFXekIsQ0FBQztJQWxCRyxlQUFlO0lBRWYsK0JBQUssR0FBTDtJQUVBLENBQUM7SUFJRCxnQ0FBTSxHQUFOLFVBQVEsRUFBRTtRQUNOLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JFLElBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLEVBQUU7WUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNsQjtRQUNELElBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLEVBQUU7WUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7U0FDakI7SUFDTCxDQUFDO0lBcEJvQjtRQUFwQixRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztzREFBNkI7SUFGaEMsZUFBZTtRQURuQyxPQUFPO09BQ2EsZUFBZSxDQXVCbkM7SUFBRCxzQkFBQztDQXZCRCxBQXVCQyxDQXZCNEMsaUJBQVEsR0F1QnBEO2tCQXZCb0IsZUFBZSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVJU2NyZWVuIH0gZnJvbSBcIi4uL1VJRnJhbWUvVUlGb3JtXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlTY3JvbGxUZXh0dXJlIGV4dGVuZHMgVUlTY3JlZW4ge1xuXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZSkgc3BUZXh0dXJlOiBjYy5TcHJpdGUgPSBudWxsO1xuXG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH1cblxuICAgIHByaXZhdGUgdHVybiA9IDE7XG4gICAgcHJpdmF0ZSBwcm9ncmVzcyA9IDA7XG4gICAgdXBkYXRlIChkdCkge1xuICAgICAgICB0aGlzLnByb2dyZXNzICs9IGR0ICogdGhpcy50dXJuICogMC4yO1xuICAgICAgICB0aGlzLnNwVGV4dHVyZS5nZXRNYXRlcmlhbCgwKS5zZXRQcm9wZXJ0eSgncHJvZ3Jlc3MnLCB0aGlzLnByb2dyZXNzKTtcbiAgICAgICAgaWYodGhpcy5wcm9ncmVzcyA+PSAxKSB7XG4gICAgICAgICAgICB0aGlzLnR1cm4gPSAtMTtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnByb2dyZXNzIDw9IDApIHtcbiAgICAgICAgICAgIHRoaXMudHVybiA9IDE7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Assemblers/MeshAssembler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9ba87xSitVM9boajZ/wQdaJ', 'MeshAssembler');
// Script/Common/Assemblers/MeshAssembler.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var gfx = cc['gfx'];
// 顶点格式 -> 位置 UV, 颜色
var vfmtPosUvColor = new gfx.VertexFormat([
    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },
]);
var MeshAssembler = /** @class */ (function (_super) {
    __extends(MeshAssembler, _super);
    function MeshAssembler() {
        var _this = _super.call(this) || this;
        _this.row = 0; // 行数
        _this.col = 0; // 列数
        _this._realRow = 0; // 实际行数
        _this._realCol = 0; // 实际列数
        _this.stepRow = 0; // 步长
        _this.StepCol = 0; // 步长
        _this.verticesCount = 4;
        _this.indicesCount = 6;
        _this.floatsPerVert = 5;
        _this.uvOffset = 2;
        _this.colorOffset = 4;
        _this._renderData = null;
        _this._local = null;
        _this._renderData = new cc.RenderData();
        _this._renderData.init(_this);
        _this.initData();
        _this.initLocal();
        return _this;
    }
    Object.defineProperty(MeshAssembler.prototype, "verticesFloats", {
        get: function () {
            return this.verticesCount * this.floatsPerVert;
        },
        enumerable: false,
        configurable: true
    });
    /** 获得三角形片段的数量 */
    MeshAssembler.prototype.getTriangleCount = function () {
        return (this.row - 1) * (this.col - 1) * 2;
    };
    MeshAssembler.prototype.getTriangle = function (idx) {
        if (idx < 0 || idx >= this.getTriangleCount())
            return null;
        var verts = this._renderData.vDatas[0];
        var vertIdx = Math.floor(idx / this._realCol) * this._realCol * 2 + idx;
        var arr = [];
        if (idx % 2 == 0) {
            arr = [
                cc.v2(verts[vertIdx * this.floatsPerVert], verts[vertIdx * this.floatsPerVert + 1]),
                cc.v2(verts[(vertIdx + 1) * this.floatsPerVert], verts[(vertIdx + 1) * this.floatsPerVert + 1]),
                cc.v2(verts[(vertIdx + this._realCol) * this.floatsPerVert], verts[(vertIdx + this._realCol) * this.floatsPerVert + 1]),
            ];
        }
        else {
            arr = [
                cc.v2(verts[vertIdx * this.floatsPerVert], verts[vertIdx * this.floatsPerVert + 1]),
                cc.v2(verts[(vertIdx + this._realCol) * this.floatsPerVert], verts[(vertIdx + this._realCol) * this.floatsPerVert + 1]),
                cc.v2(verts[(vertIdx + this._realCol - 1) * this.floatsPerVert], verts[(vertIdx + this._realCol - 1) * this.floatsPerVert + 1]),
            ];
        }
        return arr;
    };
    MeshAssembler.prototype.setTriangle = function (idx, arr, comp) {
        if (idx < 0 || idx >= this.getTriangleCount())
            return;
        var verts = this._renderData.vDatas[0];
        var vertIdx = Math.floor(idx / this._realCol) * this._realCol * 2 + idx;
        if (idx % 2 == 0) {
            verts[vertIdx * this.floatsPerVert] = arr[0].x;
            verts[vertIdx * this.floatsPerVert + 1] = arr[0].y;
            verts[(vertIdx + 1) * this.floatsPerVert] = arr[1].x;
            verts[(vertIdx + 1) * this.floatsPerVert + 1] = arr[1].y;
            verts[(vertIdx + this._realCol) * this.floatsPerVert] = arr[2].x;
            verts[(vertIdx + this._realCol) * this.floatsPerVert + 1] = arr[2].y;
        }
        else {
            verts[vertIdx * this.floatsPerVert] = arr[0].x;
            verts[vertIdx * this.floatsPerVert + 1] = arr[0].y;
            verts[(vertIdx + this._realCol) * this.floatsPerVert] = arr[1].x;
            verts[(vertIdx + this._realCol) * this.floatsPerVert + 1] = arr[1].y;
            verts[(vertIdx + this._realCol - 1) * this.floatsPerVert] = arr[2].x;
            verts[(vertIdx + this._realCol - 1) * this.floatsPerVert + 1] = arr[2].y;
        }
        comp._vertsDirty = true;
    };
    MeshAssembler.prototype.getRectCount = function () {
        return (this.row - 1) * (this.col - 1);
    };
    MeshAssembler.prototype.getRect = function (idx) {
        if (idx < 0 || idx >= this.getRectCount())
            return null;
        var verts = this._renderData.vDatas[0];
        var vertIdx = Math.floor(idx * 2 / this._realCol) * this._realCol * 2 + (idx * 2 % this._realCol);
        var arr = [
            cc.v2(verts[vertIdx * this.floatsPerVert], verts[vertIdx * this.floatsPerVert + 1]),
            cc.v2(verts[(vertIdx + 1) * this.floatsPerVert], verts[(vertIdx + 1) * this.floatsPerVert + 1]),
            cc.v2(verts[(vertIdx + this._realCol) * this.floatsPerVert], verts[(vertIdx + this._realCol) * this.floatsPerVert + 1]),
            cc.v2(verts[(vertIdx + this._realCol + 1) * this.floatsPerVert], verts[(vertIdx + this._realCol + 1) * this.floatsPerVert + 1]),
        ];
        return arr;
    };
    MeshAssembler.prototype.setRect = function (idx, arr) {
        if (idx < 0 || idx >= this.getRectCount())
            return;
        var verts = this._renderData.vDatas[0];
        var vertIdx = Math.floor((idx * 2) / this._realCol) * this._realCol * 2 + (idx * 2 % this._realCol);
        verts[vertIdx * this.floatsPerVert] = arr[0].x;
        verts[vertIdx * this.floatsPerVert + 1] = arr[0].y;
        verts[(vertIdx + 1) * this.floatsPerVert] = arr[1].x;
        verts[(vertIdx + 1) * this.floatsPerVert + 1] = arr[1].y;
        verts[(vertIdx + this._realCol) * this.floatsPerVert] = arr[2].x;
        verts[(vertIdx + this._realCol) * this.floatsPerVert + 1] = arr[2].y;
        verts[(vertIdx + this._realCol + 1) * this.floatsPerVert] = arr[3].x;
        verts[(vertIdx + this._realCol + 1) * this.floatsPerVert + 1] = arr[3].y;
    };
    MeshAssembler.prototype.resetData = function (comp) {
        if (!comp.texture)
            return;
        var width = comp.texture.width;
        var height = comp.texture.height;
        var step = comp.step;
        this.row = Math.floor(height / step) + 1;
        this.col = Math.floor(width / step) + 1;
        this.stepRow = height / (this.row - 1);
        this.StepCol = width / (this.col - 1);
        this._realRow = 2 + (this.row - 2) * 2;
        this._realCol = 2 + (this.col - 2) * 2;
        cc.log(this.row, this.col);
        this.verticesCount = this._realRow * this._realCol;
        this.indicesCount = (this.row - 1) * (this.col - 1) * 6;
        this._renderData['clear']();
        this.initData();
    };
    MeshAssembler.prototype.getVfmt = function () {
        return vfmtPosUvColor;
    };
    MeshAssembler.prototype.getBuffer = function () {
        return cc.renderer['_handle'].getBuffer('mesh', this.getVfmt());
    };
    MeshAssembler.prototype.initData = function () {
        var data = this._renderData;
        data.createQuadData(0, this.verticesFloats, this.indicesCount);
        var indices = this._renderData.iDatas[0];
        var indexOffset = 0;
        for (var r = 0; r < this.row - 1; ++r) {
            for (var c = 0; c < this.col - 1; ++c) {
                var start = r * 2 * this._realCol + c * 2;
                indices[indexOffset++] = start;
                indices[indexOffset++] = start + 1;
                indices[indexOffset++] = start + this._realCol;
                indices[indexOffset++] = start + 1;
                indices[indexOffset++] = start + this._realCol + 1;
                indices[indexOffset++] = start + this._realCol;
            }
        }
    };
    MeshAssembler.prototype.initLocal = function () {
        this._local = [];
        this._local.length = 4;
    };
    /** 填充顶点的color */
    MeshAssembler.prototype.updateColor = function (comp, color) {
        var uintVerts = this._renderData.uintVDatas[0];
        if (!uintVerts)
            return;
        color = color != null ? color : comp.node.color['_val'];
        var floatsPerVert = this.floatsPerVert;
        var colorOffset = this.colorOffset;
        for (var i = 0; i < this.verticesCount; i++) {
            uintVerts[colorOffset + i * floatsPerVert] = color;
        }
    };
    /** 更新uv */
    MeshAssembler.prototype.updateUVs = function (comp) {
        var _this = this;
        var uvOffset = this.uvOffset;
        var floatsPerVert = this.floatsPerVert;
        var verts = this._renderData.vDatas[0];
        var vid = 0;
        var _setUv = function (uv_x, uv_y, vid) {
            var voffset = vid * floatsPerVert;
            verts[voffset + uvOffset] = uv_x;
            verts[voffset + uvOffset + 1] = uv_y;
        };
        var _fillOneRow = function (uv_y) {
            for (var col = 0; col < _this.col; col++) {
                var uv_x = col / (_this.col - 1);
                _setUv(uv_x, uv_y, vid++);
                if (col !== 0 && col !== _this.col - 1) {
                    _setUv(uv_x, uv_y, vid++);
                }
            }
        };
        for (var row = 0; row < this.row; row++) {
            var uv_y = 1 - row / (this.row - 1);
            _fillOneRow(uv_y);
            if (row !== 0 && row !== this.row - 1) {
                _fillOneRow(uv_y);
            }
        }
    };
    MeshAssembler.prototype.updateWorldVertsWebGL = function (comp) {
        var _this = this;
        var local = this._local;
        var verts = this._renderData.vDatas[0];
        var matrix = comp.node['_worldMatrix'];
        var matrixm = matrix.m, a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5], tx = matrixm[12], ty = matrixm[13];
        var vl = local[0], vr = local[2], vb = local[1], vt = local[3];
        var justTranslate = a === 1 && b === 0 && c === 0 && d === 1;
        var floatsPerVert = this.floatsPerVert;
        var vertIdx = 0;
        var _setVert = function (localColX, localRowY, vertIdx) {
            var worldIndex = floatsPerVert * vertIdx;
            verts[worldIndex] = localColX + tx;
            verts[worldIndex + 1] = localRowY + ty;
        };
        var _setVert2 = function (localColX, localRowY, vertIdx) {
            var worldIndex = vertIdx * floatsPerVert;
            verts[worldIndex] = localColX * a + localRowY * c + tx;
            verts[worldIndex + 1] = localColX * b + localRowY * d + ty;
        };
        var _fillOneRow = function (localRowY, setVert) {
            for (var col = 0; col < _this.col; col++) {
                var localColX = (col == _this.col - 1) ? vr : (vl + col * _this.StepCol);
                setVert(localColX, localRowY, vertIdx++);
                if (col !== 0 && col !== _this.col - 1) {
                    // 插入一列
                    setVert(localColX, localRowY, vertIdx++);
                }
            }
        };
        if (justTranslate) {
            for (var row = 0; row < this.row; row++) {
                var localRowY = (row == this.row - 1) ? vt : (vb + row * this.stepRow);
                _fillOneRow(localRowY, _setVert);
                if (row !== 0 && row !== this.row - 1) {
                    // 插入一行
                    _fillOneRow(localRowY, _setVert);
                }
            }
        }
        else {
            for (var row = 0; row < this.row; row++) {
                var localRowY = (row == this.row - 1) ? vt : (vb + row * this.stepRow);
                _fillOneRow(localRowY, _setVert2);
                if (row !== 0 && row !== this.row - 1) {
                    // 插入一行
                    _fillOneRow(localRowY, _setVert2);
                }
            }
        }
    };
    MeshAssembler.prototype.updateWorldVertsNative = function (comp) {
        var local = this._local;
        var verts = this._renderData.vDatas[0];
        var floatsPerVert = this.floatsPerVert;
        var vl = local[0], vr = local[2], vb = local[1], vt = local[3];
        var index = 0;
        // left bottom
        verts[index] = vl;
        verts[index + 1] = vb;
        index += floatsPerVert;
        // right bottom
        verts[index] = vr;
        verts[index + 1] = vb;
        index += floatsPerVert;
        // left top
        verts[index] = vl;
        verts[index + 1] = vt;
        index += floatsPerVert;
        // right top
        verts[index] = vr;
        verts[index + 1] = vt;
    };
    MeshAssembler.prototype.updateWorldVerts = function (comp) {
        if (CC_NATIVERENDERER) {
            this.updateWorldVertsNative(comp);
        }
        else {
            this.updateWorldVertsWebGL(comp);
        }
    };
    /** 更新顶点数据 */
    MeshAssembler.prototype.updateVerts = function (comp) {
        var node = comp.node, cw = node.width, ch = node.height, appx = node.anchorX * cw, appy = node.anchorY * ch, l, b, r, t;
        l = -appx;
        b = -appy;
        r = cw - appx;
        t = ch - appy;
        var local = this._local;
        local[0] = l;
        local[1] = b;
        local[2] = r;
        local[3] = t;
        this.updateWorldVerts(comp);
    };
    /** 更新renderdata */
    MeshAssembler.prototype.updateRenderData = function (comp) {
        if (comp._vertsDirty) {
            this.resetData(comp);
            this.updateUVs(comp);
            this.updateVerts(comp);
            comp._vertsDirty = false;
        }
    };
    MeshAssembler.prototype.fillBuffers = function (comp, renderer) {
        if (renderer.worldMatDirty) {
            this.updateWorldVerts(comp);
        }
        var renderData = this._renderData;
        // vData里包含 pos， uv， color数据， iData中包含顶点索引
        var vData = renderData.vDatas[0];
        var iData = renderData.iDatas[0];
        var buffer = this.getBuffer();
        var offsetInfo = buffer.request(this.verticesCount, this.indicesCount);
        // buffer data may be realloc, need get reference after request.
        // fill vertices
        var vertexOffset = offsetInfo.byteOffset >> 2, vbuf = buffer._vData;
        if (vData.length + vertexOffset > vbuf.length) {
            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);
        }
        else {
            vbuf.set(vData, vertexOffset);
        }
        // fill indices
        var ibuf = buffer._iData, indiceOffset = offsetInfo.indiceOffset, vertexId = offsetInfo.vertexOffset;
        for (var i = 0, l = iData.length; i < l; i++) {
            ibuf[indiceOffset++] = vertexId + iData[i];
        }
    };
    MeshAssembler.prototype.packToDynamicAtlas = function (comp, frame) {
        if (CC_TEST)
            return;
        if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {
            var packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame);
            //@ts-ignore
            if (packedFrame) {
                frame._setDynamicAtlasFrame(packedFrame);
            }
        }
        var material = comp._materials[0];
        if (!material)
            return;
        if (material.getProperty('texture') !== frame._texture) {
            // texture was packed to dynamic atlas, should update uvs
            comp._vertsDirty = true;
            comp._updateMaterial();
        }
    };
    return MeshAssembler;
}(cc.Assembler));
exports.default = MeshAssembler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0Fzc2VtYmxlcnMvTWVzaEFzc2VtYmxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFdEIsb0JBQW9CO0FBQ3BCLElBQUksY0FBYyxHQUFHLElBQUksR0FBRyxDQUFDLFlBQVksQ0FBQztJQUN0QyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsYUFBYSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRTtJQUNoRSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRTtJQUMzRCxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRTtDQUMvRSxDQUFDLENBQUM7QUFFSDtJQUEyQyxpQ0FBWTtJQUVuRDtRQUFBLFlBQ0ksaUJBQU8sU0FNVjtRQUVPLFNBQUcsR0FBRyxDQUFDLENBQUMsQ0FBZ0IsS0FBSztRQUM3QixTQUFHLEdBQUcsQ0FBQyxDQUFDLENBQWdCLEtBQUs7UUFDN0IsY0FBUSxHQUFHLENBQUMsQ0FBQyxDQUFXLE9BQU87UUFDL0IsY0FBUSxHQUFHLENBQUMsQ0FBQyxDQUFXLE9BQU87UUFDL0IsYUFBTyxHQUFHLENBQUMsQ0FBQyxDQUFZLEtBQUs7UUFDN0IsYUFBTyxHQUFHLENBQUMsQ0FBQyxDQUFZLEtBQUs7UUFDN0IsbUJBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsa0JBQVksR0FBRyxDQUFDLENBQUM7UUFHekIsbUJBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsY0FBUSxH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LENBQUMsZUFBZSxFQUFFLENBQUM7U0FDMUI7SUFDTCxDQUFDO0lBRUwsb0JBQUM7QUFBRCxDQS9ZQSxBQStZQyxDQS9ZMEMsRUFBRSxDQUFDLFNBQVMsR0ErWXREIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lc2hUZXh0dXJlIGZyb20gXCIuLi9Db21wb25lbnRzL01lc2hUZXh0dXJlXCI7XG5cbmNvbnN0IGdmeCA9IGNjWydnZngnXTtcblxuLy8g6aG254K55qC85byPIC0+IOS9jee9riBVViwg6aKc6ImyXG5sZXQgdmZtdFBvc1V2Q29sb3IgPSBuZXcgZ2Z4LlZlcnRleEZvcm1hdChbXG4gICAgeyBuYW1lOiBnZnguQVRUUl9QT1NJVElPTiwgdHlwZTogZ2Z4LkFUVFJfVFlQRV9GTE9BVDMyLCBudW06IDIgfSxcbiAgICB7IG5hbWU6IGdmeC5BVFRSX1VWMCwgdHlwZTogZ2Z4LkFUVFJfVFlQRV9GTE9BVDMyLCBudW06IDIgfSxcbiAgICB7IG5hbWU6IGdmeC5BVFRSX0NPTE9SLCB0eXBlOiBnZnguQVRUUl9UWVBFX1VJTlQ4LCBudW06IDQsIG5vcm1hbGl6ZTogdHJ1ZSB9LFxuXSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lc2hBc3NlbWJsZXIgZXh0ZW5kcyBjYy5Bc3NlbWJsZXJ7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fcmVuZGVyRGF0YSA9IG5ldyBjYy5SZW5kZXJEYXRhKCk7XG4gICAgICAgIHRoaXMuX3JlbmRlckRhdGEuaW5pdCh0aGlzKTtcblxuICAgICAgICB0aGlzLmluaXREYXRhKCk7XG4gICAgICAgIHRoaXMuaW5pdExvY2FsKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByb3cgPSAwOyAgICAgICAgICAgICAgICAvLyDooYzmlbBcbiAgICBwcml2YXRlIGNvbCA9IDA7ICAgICAgICAgICAgICAgIC8vIOWIl+aVsFxuICAgIHByaXZhdGUgX3JlYWxSb3cgPSAwOyAgICAgICAgICAgLy8g5a6e6ZmF6KGM5pWwXG4gICAgcHJpdmF0ZSBfcmVhbENvbCA9IDA7ICAgICAgICAgICAvLyDlrp7pmYXliJfmlbBcbiAgICBwcml2YXRlIHN0ZXBSb3cgPSAwOyAgICAgICAgICAgIC8vIOatpemVv1xuICAgIHByaXZhdGUgU3RlcENvbCA9IDA7ICAgICAgICAgICAgLy8g5q2l6ZW/XG4gICAgcHJpdmF0ZSB2ZXJ0aWNlc0NvdW50ID0gNDtcbiAgICBwcml2YXRlIGluZGljZXNDb3VudCA9IDY7XG5cblxuICAgIGZsb2F0c1BlclZlcnQgPSA1O1xuICAgIHV2T2Zmc2V0ID0gMjsgICAgICAgXG4gICAgY29sb3JPZmZzZXQgPSA0O1xuXG4gICAgcHJpdmF0ZSBfcmVuZGVyRGF0YTogY2MuUmVuZGVyRGF0YSA9IG51bGw7XG4gICAgcHJpdmF0ZSBfbG9jYWw6IG51bWJlcltdID0gbnVsbDtcblxuICAgIGdldCB2ZXJ0aWNlc0Zsb2F0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmVydGljZXNDb3VudCAqIHRoaXMuZmxvYXRzUGVyVmVydDtcbiAgICB9XG5cbiAgICAvKiog6I635b6X5LiJ6KeS5b2i54mH5q6155qE5pWw6YePICovXG4gICAgcHVibGljIGdldFRyaWFuZ2xlQ291bnQoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5yb3ctMSkgKiAodGhpcy5jb2wgLSAxKSAqIDI7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFRyaWFuZ2xlKGlkeDogbnVtYmVyKSB7XG4gICAgICAgIGlmKGlkeCA8IDAgfHwgaWR4ID49IHRoaXMuZ2V0VHJpYW5nbGVDb3VudCgpKSByZXR1cm4gbnVsbDtcbiAgICAgICAgbGV0IHZlcnRzID0gdGhpcy5fcmVuZGVyRGF0YS52RGF0YXNbMF0gYXMgQXJyYXk8bnVtYmVyPjtcbiAgICAgICAgbGV0IHZlcnRJZHggPSBNYXRoLmZsb29yKGlkeCAvIHRoaXMuX3JlYWxDb2wpICogdGhpcy5fcmVhbENvbCAqIDIgKyBpZHg7XG4gICAgICAgIGxldCBhcnI6IGNjLlZlYzJbXSA9IFtdO1xuICAgICAgICBpZihpZHggJSAyID09IDApIHtcbiAgICAgICAgICAgIGFyciA9IFtcbiAgICAgICAgICAgICAgICBjYy52Mih2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0XSwgdmVydHNbdmVydElkeCAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSksXG4gICAgICAgICAgICAgICAgY2MudjIodmVydHNbKHZlcnRJZHggKyAxKSAqIHRoaXMuZmxvYXRzUGVyVmVydF0sIHZlcnRzWyh2ZXJ0SWR4ICsgMSkgKiB0aGlzLmZsb2F0c1BlclZlcnQrMV0pLFxuICAgICAgICAgICAgICAgIGNjLnYyKHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCkgKiB0aGlzLmZsb2F0c1BlclZlcnRdLCB2ZXJ0c1sodmVydElkeCArIHRoaXMuX3JlYWxDb2wpICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdKSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgYXJyID0gW1xuICAgICAgICAgICAgICAgIGNjLnYyKHZlcnRzW3ZlcnRJZHggKiB0aGlzLmZsb2F0c1BlclZlcnRdLCB2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdKSxcbiAgICAgICAgICAgICAgICBjYy52Mih2ZXJ0c1sodmVydElkeCArIHRoaXMuX3JlYWxDb2wpICogdGhpcy5mbG9hdHNQZXJWZXJ0XSwgdmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSksXG4gICAgICAgICAgICAgICAgY2MudjIodmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sLTEpICogdGhpcy5mbG9hdHNQZXJWZXJ0XSwgdmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sLTEpICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdKSwgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0VHJpYW5nbGUoaWR4OiBudW1iZXIsIGFycjogY2MuVmVjMltdLCBjb21wOiBhbnkpIHtcbiAgICAgICAgaWYoaWR4IDwgMCB8fCBpZHggPj0gdGhpcy5nZXRUcmlhbmdsZUNvdW50KCkpIHJldHVybiA7XG4gICAgICAgIGxldCB2ZXJ0cyA9IHRoaXMuX3JlbmRlckRhdGEudkRhdGFzWzBdIGFzIEFycmF5PG51bWJlcj47XG4gICAgICAgIGxldCB2ZXJ0SWR4ID0gTWF0aC5mbG9vcihpZHggLyB0aGlzLl9yZWFsQ29sKSAqIHRoaXMuX3JlYWxDb2wgKiAyICsgaWR4O1xuICAgICAgICBcbiAgICAgICAgaWYoaWR4ICUgMiA9PSAwKSB7XG4gICAgICAgICAgICB2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0XSA9IGFyclswXS54O1xuICAgICAgICAgICAgdmVydHNbdmVydElkeCAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclswXS55O1xuXG4gICAgICAgICAgICB2ZXJ0c1sodmVydElkeCArIDEpICogdGhpcy5mbG9hdHNQZXJWZXJ0XSA9IGFyclsxXS54O1xuICAgICAgICAgICAgdmVydHNbKHZlcnRJZHggKyAxKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclsxXS55O1xuXG4gICAgICAgICAgICB2ZXJ0c1sodmVydElkeCArIHRoaXMuX3JlYWxDb2wpICogdGhpcy5mbG9hdHNQZXJWZXJ0XSA9IGFyclsyXS54O1xuICAgICAgICAgICAgdmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclsyXS55O1xuXG4gICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgIHZlcnRzW3ZlcnRJZHggKiB0aGlzLmZsb2F0c1BlclZlcnRdID0gYXJyWzBdLng7XG4gICAgICAgICAgICB2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdID0gYXJyWzBdLnk7XG5cbiAgICAgICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCkgKiB0aGlzLmZsb2F0c1BlclZlcnRdID0gYXJyWzFdLng7XG4gICAgICAgICAgICB2ZXJ0c1sodmVydElkeCArIHRoaXMuX3JlYWxDb2wpICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdID0gYXJyWzFdLnk7XG5cbiAgICAgICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbC0xKSAqIHRoaXMuZmxvYXRzUGVyVmVydF0gPSBhcnJbMl0ueDtcbiAgICAgICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbC0xKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclsyXS55O1xuICAgICAgICB9XG5cbiAgICAgICAgY29tcC5fdmVydHNEaXJ0eSA9IHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFJlY3RDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLnJvdy0xKSAqICh0aGlzLmNvbCAtIDEpO1xuICAgIH1cbiAgICBwdWJsaWMgZ2V0UmVjdChpZHg6IG51bWJlcikge1xuICAgICAgICBpZihpZHggPCAwIHx8IGlkeCA+PSB0aGlzLmdldFJlY3RDb3VudCgpKSByZXR1cm4gbnVsbDtcbiAgICAgICAgbGV0IHZlcnRzID0gdGhpcy5fcmVuZGVyRGF0YS52RGF0YXNbMF0gYXMgQXJyYXk8bnVtYmVyPjtcbiAgICAgICAgbGV0IHZlcnRJZHggPSBNYXRoLmZsb29yKGlkeCoyIC8gdGhpcy5fcmVhbENvbCkgKiB0aGlzLl9yZWFsQ29sICogMiArIChpZHggKiAyICUgdGhpcy5fcmVhbENvbCk7XG5cbiAgICAgICAgbGV0IGFycjogY2MuVmVjMltdID0gW1xuICAgICAgICAgICAgY2MudjIodmVydHNbdmVydElkeCAqIHRoaXMuZmxvYXRzUGVyVmVydF0sIHZlcnRzW3ZlcnRJZHggKiB0aGlzLmZsb2F0c1BlclZlcnQrMV0pLFxuICAgICAgICAgICAgY2MudjIodmVydHNbKHZlcnRJZHggKyAxKSAqIHRoaXMuZmxvYXRzUGVyVmVydF0sIHZlcnRzWyh2ZXJ0SWR4ICsgMSkgKiB0aGlzLmZsb2F0c1BlclZlcnQrMV0pLFxuICAgICAgICAgICAgY2MudjIodmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sKSAqIHRoaXMuZmxvYXRzUGVyVmVydF0sIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCkgKiB0aGlzLmZsb2F0c1BlclZlcnQrMV0pLFxuICAgICAgICAgICAgY2MudjIodmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sKzEpICogdGhpcy5mbG9hdHNQZXJWZXJ0XSwgdmVydHNbKHZlcnRJZHggKyB0aGlzLl9yZWFsQ29sKzEpICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdKSwgICAgICAgICAgICAgICAgXG4gICAgICAgIF07XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfVxuICAgIHB1YmxpYyBzZXRSZWN0KGlkeDogbnVtYmVyLCBhcnI6IGNjLlZlYzJbXSkge1xuICAgICAgICBpZihpZHggPCAwIHx8IGlkeCA+PSB0aGlzLmdldFJlY3RDb3VudCgpKSByZXR1cm4gO1xuICAgICAgICBsZXQgdmVydHMgPSB0aGlzLl9yZW5kZXJEYXRhLnZEYXRhc1swXSBhcyBBcnJheTxudW1iZXI+O1xuICAgICAgICBsZXQgdmVydElkeCA9IE1hdGguZmxvb3IoKGlkeCAqIDIpIC8gdGhpcy5fcmVhbENvbCkgKiB0aGlzLl9yZWFsQ29sICogMiArIChpZHggKiAyICUgdGhpcy5fcmVhbENvbCk7XG4gICAgICAgIFxuICAgICAgICB2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0XSA9IGFyclswXS54O1xuICAgICAgICB2ZXJ0c1t2ZXJ0SWR4ICogdGhpcy5mbG9hdHNQZXJWZXJ0KzFdID0gYXJyWzBdLnk7XG5cbiAgICAgICAgdmVydHNbKHZlcnRJZHggKyAxKSAqIHRoaXMuZmxvYXRzUGVyVmVydF0gPSBhcnJbMV0ueDtcbiAgICAgICAgdmVydHNbKHZlcnRJZHggKyAxKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclsxXS55O1xuXG4gICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCkgKiB0aGlzLmZsb2F0c1BlclZlcnRdID0gYXJyWzJdLng7XG4gICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCkgKiB0aGlzLmZsb2F0c1BlclZlcnQrMV0gPSBhcnJbMl0ueTtcblxuICAgICAgICB2ZXJ0c1sodmVydElkeCArIHRoaXMuX3JlYWxDb2wrMSkgKiB0aGlzLmZsb2F0c1BlclZlcnRdID0gYXJyWzNdLng7XG4gICAgICAgIHZlcnRzWyh2ZXJ0SWR4ICsgdGhpcy5fcmVhbENvbCsxKSAqIHRoaXMuZmxvYXRzUGVyVmVydCsxXSA9IGFyclszXS55O1xuICAgIH1cblxuICAgIHB1YmxpYyByZXNldERhdGEoY29tcDogTWVzaFRleHR1cmUpIHtcbiAgICAgICAgaWYoIWNvbXAudGV4dHVyZSkgcmV0dXJuIDtcbiAgICAgICAgbGV0IHdpZHRoID0gY29tcC50ZXh0dXJlLndpZHRoO1xuICAgICAgICBsZXQgaGVpZ2h0ID0gY29tcC50ZXh0dXJlLmhlaWdodDtcbiAgICAgICAgbGV0IHN0ZXAgPSBjb21wLnN0ZXA7XG4gICAgICAgIHRoaXMucm93ID0gTWF0aC5mbG9vcihoZWlnaHQgLyBzdGVwKSArIDE7XG4gICAgICAgIHRoaXMuY29sID0gTWF0aC5mbG9vcih3aWR0aCAvIHN0ZXApICsgMTtcbiAgICAgICAgdGhpcy5zdGVwUm93ID0gaGVpZ2h0IC8gKHRoaXMucm93LTEpO1xuICAgICAgICB0aGlzLlN0ZXBDb2wgPSB3aWR0aCAvICh0aGlzLmNvbCAtIDEpO1xuXG4gICAgICAgIHRoaXMuX3JlYWxSb3cgPSAyICsgKHRoaXMucm93IC0gMikgKiAyO1xuICAgICAgICB0aGlzLl9yZWFsQ29sID0gMiArICh0aGlzLmNvbCAtIDIpICogMjtcblxuICAgICAgICBjYy5sb2codGhpcy5yb3csIHRoaXMuY29sKTtcblxuICAgICAgICB0aGlzLnZlcnRpY2VzQ291bnQgPSB0aGlzLl9yZWFsUm93ICogdGhpcy5fcmVhbENvbDtcbiAgICAgICAgdGhpcy5pbmRpY2VzQ291bnQgPSAodGhpcy5yb3ctMSkgKiAodGhpcy5jb2wgLSAxKSAqIDY7XG4gICAgICAgIHRoaXMuX3JlbmRlckRhdGFbJ2NsZWFyJ10oKTtcbiAgICAgICAgdGhpcy5pbml0RGF0YSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRWZm10KCkge1xuICAgICAgICByZXR1cm4gdmZtdFBvc1V2Q29sb3I7XG4gICAgfVxuICAgIHB1YmxpYyBnZXRCdWZmZXIoKSB7XG4gICAgICAgIHJldHVybiBjYy5yZW5kZXJlclsnX2hhbmRsZSddLmdldEJ1ZmZlcignbWVzaCcsIHRoaXMuZ2V0VmZtdCgpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdERhdGEoKSB7XG4gICAgICAgIGxldCBkYXRhID0gdGhpcy5fcmVuZGVyRGF0YTtcbiAgICAgICAgZGF0YS5jcmVhdGVRdWFkRGF0YSgwLCB0aGlzLnZlcnRpY2VzRmxvYXRzLCB0aGlzLmluZGljZXNDb3VudCk7XG5cbiAgICAgICAgbGV0IGluZGljZXMgPSB0aGlzLl9yZW5kZXJEYXRhLmlEYXRhc1swXTtcbiAgICAgICAgbGV0IGluZGV4T2Zmc2V0ID0gMDtcbiAgICAgICAgZm9yIChsZXQgciA9IDA7IHIgPCB0aGlzLnJvdy0xOyArK3IpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgdGhpcy5jb2wtMTsgKytjKSB7XG4gICAgICAgICAgICAgICAgbGV0IHN0YXJ0ID0gciAqIDIgKiB0aGlzLl9yZWFsQ29sICsgYyAqIDI7XG4gICAgICAgICAgICAgICAgaW5kaWNlc1tpbmRleE9mZnNldCsrXSA9IHN0YXJ0O1xuICAgICAgICAgICAgICAgIGluZGljZXNbaW5kZXhPZmZzZXQrK10gPSBzdGFydCArIDE7XG4gICAgICAgICAgICAgICAgaW5kaWNlc1tpbmRleE9mZnNldCsrXSA9IHN0YXJ0ICsgdGhpcy5fcmVhbENvbDtcbiAgICAgICAgICAgICAgICBpbmRpY2VzW2luZGV4T2Zmc2V0KytdID0gc3RhcnQgKyAxO1xuICAgICAgICAgICAgICAgIGluZGljZXNbaW5kZXhPZmZzZXQrK10gPSBzdGFydCArIHRoaXMuX3JlYWxDb2wrMTtcbiAgICAgICAgICAgICAgICBpbmRpY2VzW2luZGV4T2Zmc2V0KytdID0gc3RhcnQgKyB0aGlzLl9yZWFsQ29sO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHB1YmxpYyBpbml0TG9jYWwoKSB7XG4gICAgICAgIHRoaXMuX2xvY2FsID0gW107XG4gICAgICAgIHRoaXMuX2xvY2FsLmxlbmd0aCA9IDQ7XG4gICAgfVxuXG4gICAgLyoqIOWhq+WFhemhtueCueeahGNvbG9yICovXG4gICAgcHVibGljIHVwZGF0ZUNvbG9yKGNvbXA6IGNjLlJlbmRlckNvbXBvbmVudCwgY29sb3I6IG51bWJlcikge1xuICAgICAgICBsZXQgdWludFZlcnRzID0gdGhpcy5fcmVuZGVyRGF0YS51aW50VkRhdGFzWzBdO1xuICAgICAgICBpZighdWludFZlcnRzKSByZXR1cm4gO1xuICAgICAgICBjb2xvciA9IGNvbG9yICE9IG51bGwgPyBjb2xvciA6IGNvbXAubm9kZS5jb2xvclsnX3ZhbCddO1xuICAgICAgICBsZXQgZmxvYXRzUGVyVmVydCA9IHRoaXMuZmxvYXRzUGVyVmVydDtcbiAgICAgICAgbGV0IGNvbG9yT2Zmc2V0ID0gdGhpcy5jb2xvck9mZnNldDtcbiAgICAgICAgZm9yKGxldCBpPTA7IGk8dGhpcy52ZXJ0aWNlc0NvdW50OyBpKyspIHtcbiAgICAgICAgICAgIHVpbnRWZXJ0c1tjb2xvck9mZnNldCArIGkgKiBmbG9hdHNQZXJWZXJ0XSA9IGNvbG9yO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKiDmm7TmlrB1diAqL1xuICAgIHByb3RlY3RlZCB1cGRhdGVVVnMoY29tcDogY2MuUmVuZGVyQ29tcG9uZW50KSB7XG4gICAgICAgIGxldCB1dk9mZnNldCA9IHRoaXMudXZPZmZzZXQ7XG4gICAgICAgIGxldCBmbG9hdHNQZXJWZXJ0ID0gdGhpcy5mbG9hdHNQZXJWZXJ0O1xuICAgICAgICBsZXQgdmVydHMgPSB0aGlzLl9yZW5kZXJEYXRhLnZEYXRhc1swXTtcbiAgICAgICAgbGV0IHZpZCA9IDA7XG5cbiAgICAgICAgbGV0IF9zZXRVdiA9ICh1dl94OiBudW1iZXIsIHV2X3k6IG51bWJlciwgdmlkOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgIGxldCB2b2Zmc2V0ID0gdmlkICogZmxvYXRzUGVyVmVydDtcbiAgICAgICAgICAgIHZlcnRzW3ZvZmZzZXQgKyB1dk9mZnNldF0gPSB1dl94O1xuICAgICAgICAgICAgdmVydHNbdm9mZnNldCArIHV2T2Zmc2V0ICsgMV0gPSB1dl95O1xuICAgICAgICB9XG4gICAgICAgIGxldCBfZmlsbE9uZVJvdyA9ICh1dl95OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgIGZvcihsZXQgY29sPTA7IGNvbDx0aGlzLmNvbDsgY29sKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgdXZfeCA9IGNvbC8odGhpcy5jb2wtMSk7XG4gICAgICAgICAgICAgICAgX3NldFV2KHV2X3gsIHV2X3ksIHZpZCsrKTtcbiAgICAgICAgICAgICAgICBpZihjb2wgIT09IDAgJiYgY29sICE9PSB0aGlzLmNvbC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIF9zZXRVdih1dl94LCB1dl95LCB2aWQrKyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcihsZXQgcm93PTA7IHJvdzx0aGlzLnJvdzsgcm93KyspIHtcbiAgICAgICAgICAgIGxldCB1dl95ID0gMS1yb3cvKHRoaXMucm93LTEpO1xuICAgICAgICAgICAgX2ZpbGxPbmVSb3codXZfeSk7XG4gICAgICAgICAgICBpZihyb3cgIT09IDAgJiYgcm93ICE9PSB0aGlzLnJvdy0xKSB7XG4gICAgICAgICAgICAgICAgX2ZpbGxPbmVSb3codXZfeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHVwZGF0ZVdvcmxkVmVydHNXZWJHTChjb21wOiBjYy5SZW5kZXJDb21wb25lbnQpIHtcbiAgICAgICAgbGV0IGxvY2FsID0gdGhpcy5fbG9jYWw7XG4gICAgICAgIGxldCB2ZXJ0cyA9IHRoaXMuX3JlbmRlckRhdGEudkRhdGFzWzBdO1xuXG4gICAgICAgIGxldCBtYXRyaXg6IGNjLk1hdDQgPSBjb21wLm5vZGVbJ193b3JsZE1hdHJpeCddO1xuICAgICAgICBsZXQgbWF0cml4bSA9IG1hdHJpeC5tLFxuICAgICAgICBhID0gbWF0cml4bVswXSwgYiA9IG1hdHJpeG1bMV0sIGMgPSBtYXRyaXhtWzRdLCBkID0gbWF0cml4bVs1XSwgXG4gICAgICAgIHR4ID0gbWF0cml4bVsxMl0sIHR5ID0gbWF0cml4bVsxM107XG5cbiAgICAgICAgbGV0IHZsID0gbG9jYWxbMF0sIHZyID0gbG9jYWxbMl0sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgIHZiID0gbG9jYWxbMV0sIHZ0ID0gbG9jYWxbM107XG5cbiAgICAgICAgbGV0IGp1c3RUcmFuc2xhdGUgPSBhID09PSAxICYmIGIgPT09IDAgJiYgYyA9PT0gMCAmJiBkID09PSAxO1xuICAgICAgICBsZXQgZmxvYXRzUGVyVmVydCA9IHRoaXMuZmxvYXRzUGVyVmVydDtcbiAgICAgICAgbGV0IHZlcnRJZHggPSAwO1xuICAgICAgICBcbiAgICAgICAgbGV0IF9zZXRWZXJ0ID0gKGxvY2FsQ29sWDogbnVtYmVyLCBsb2NhbFJvd1k6IG51bWJlciwgdmVydElkeDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICBsZXQgd29ybGRJbmRleCA9IGZsb2F0c1BlclZlcnQgKiB2ZXJ0SWR4O1xuICAgICAgICAgICAgdmVydHNbd29ybGRJbmRleF0gPSBsb2NhbENvbFggKyB0eDtcbiAgICAgICAgICAgIHZlcnRzW3dvcmxkSW5kZXggKyAxXSA9IGxvY2FsUm93WSArIHR5O1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IF9zZXRWZXJ0MiA9IChsb2NhbENvbFg6IG51bWJlciwgbG9jYWxSb3dZOiBudW1iZXIsIHZlcnRJZHg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgbGV0IHdvcmxkSW5kZXggPSB2ZXJ0SWR4ICogZmxvYXRzUGVyVmVydDtcbiAgICAgICAgICAgIHZlcnRzW3dvcmxkSW5kZXhdID0gbG9jYWxDb2xYICogYSArIGxvY2FsUm93WSAqIGMgKyB0eDtcbiAgICAgICAgICAgIHZlcnRzW3dvcmxkSW5kZXggKyAxXSA9IGxvY2FsQ29sWCAqIGIgKyBsb2NhbFJvd1kgKiBkICsgdHk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgX2ZpbGxPbmVSb3cgPSAobG9jYWxSb3dZOiBudW1iZXIsIHNldFZlcnQ6IEZ1bmN0aW9uKSA9PiB7XG4gICAgICAgICAgICBmb3IobGV0IGNvbD0wOyBjb2w8dGhpcy5jb2w7IGNvbCsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IGxvY2FsQ29sWCA9IChjb2wgPT0gdGhpcy5jb2wtMSkgPyB2ciA6ICh2bCArIGNvbCAqIHRoaXMuU3RlcENvbCk7XG4gICAgICAgICAgICAgICAgc2V0VmVydChsb2NhbENvbFgsIGxvY2FsUm93WSwgdmVydElkeCArKyk7XG4gICAgICAgICAgICAgICAgaWYoY29sICE9PSAwICYmIGNvbCAhPT0gdGhpcy5jb2wtMSkge1xuICAgICAgICAgICAgICAgICAgICAvLyDmj5LlhaXkuIDliJdcbiAgICAgICAgICAgICAgICAgICAgc2V0VmVydChsb2NhbENvbFgsIGxvY2FsUm93WSwgdmVydElkeCArKyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYoanVzdFRyYW5zbGF0ZSkge1xuICAgICAgICAgICAgZm9yKGxldCByb3c9MDsgcm93PHRoaXMucm93OyByb3crKykge1xuICAgICAgICAgICAgICAgIGxldCBsb2NhbFJvd1kgPSAocm93ID09IHRoaXMucm93LTEpID8gdnQgOiAodmIgKyByb3cgKiB0aGlzLnN0ZXBSb3cpO1xuICAgICAgICAgICAgICAgIF9maWxsT25lUm93KGxvY2FsUm93WSwgX3NldFZlcnQpO1xuICAgICAgICAgICAgICAgIGlmKHJvdyAhPT0gMCAmJiByb3cgIT09IHRoaXMucm93LTEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8g5o+S5YWl5LiA6KGMXG4gICAgICAgICAgICAgICAgICAgIF9maWxsT25lUm93KGxvY2FsUm93WSwgX3NldFZlcnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgZm9yKGxldCByb3c9MDsgcm93PHRoaXMucm93OyByb3crKykge1xuICAgICAgICAgICAgICAgIGxldCBsb2NhbFJvd1kgPSAocm93ID09IHRoaXMucm93LTEpID8gdnQgOiAodmIgKyByb3cgKiB0aGlzLnN0ZXBSb3cpO1xuICAgICAgICAgICAgICAgIF9maWxsT25lUm93KGxvY2FsUm93WSwgX3NldFZlcnQyKTtcbiAgICAgICAgICAgICAgICBpZihyb3cgIT09IDAgJiYgcm93ICE9PSB0aGlzLnJvdy0xKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIOaPkuWFpeS4gOihjFxuICAgICAgICAgICAgICAgICAgICBfZmlsbE9uZVJvdyhsb2NhbFJvd1ksIF9zZXRWZXJ0Mik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHVwZGF0ZVdvcmxkVmVydHNOYXRpdmUoY29tcDogY2MuUmVuZGVyQ29tcG9uZW50KSB7XG4gICAgICAgIGxldCBsb2NhbCA9IHRoaXMuX2xvY2FsO1xuICAgICAgICBsZXQgdmVydHMgPSB0aGlzLl9yZW5kZXJEYXRhLnZEYXRhc1swXTtcbiAgICAgICAgbGV0IGZsb2F0c1BlclZlcnQgPSB0aGlzLmZsb2F0c1BlclZlcnQ7XG4gICAgICBcbiAgICAgICAgbGV0IHZsID0gbG9jYWxbMF0sXG4gICAgICAgICAgICB2ciA9IGxvY2FsWzJdLFxuICAgICAgICAgICAgdmIgPSBsb2NhbFsxXSxcbiAgICAgICAgICAgIHZ0ID0gbG9jYWxbM107XG4gICAgICBcbiAgICAgICAgbGV0IGluZGV4OiBudW1iZXIgPSAwO1xuICAgICAgICAvLyBsZWZ0IGJvdHRvbVxuICAgICAgICB2ZXJ0c1tpbmRleF0gPSB2bDtcbiAgICAgICAgdmVydHNbaW5kZXgrMV0gPSB2YjtcbiAgICAgICAgaW5kZXggKz0gZmxvYXRzUGVyVmVydDtcbiAgICAgICAgLy8gcmlnaHQgYm90dG9tXG4gICAgICAgIHZlcnRzW2luZGV4XSA9IHZyO1xuICAgICAgICB2ZXJ0c1tpbmRleCsxXSA9IHZiO1xuICAgICAgICBpbmRleCArPSBmbG9hdHNQZXJWZXJ0O1xuICAgICAgICAvLyBsZWZ0IHRvcFxuICAgICAgICB2ZXJ0c1tpbmRleF0gPSB2bDtcbiAgICAgICAgdmVydHNbaW5kZXgrMV0gPSB2dDtcbiAgICAgICAgaW5kZXggKz0gZmxvYXRzUGVyVmVydDtcbiAgICAgICAgLy8gcmlnaHQgdG9wXG4gICAgICAgIHZlcnRzW2luZGV4XSA9IHZyO1xuICAgICAgICB2ZXJ0c1tpbmRleCsxXSA9IHZ0O1xuICAgIH1cblxuICAgIHByb3RlY3RlZCB1cGRhdGVXb3JsZFZlcnRzKGNvbXA6IGNjLlJlbmRlckNvbXBvbmVudCkge1xuICAgICAgICBpZiAoQ0NfTkFUSVZFUkVOREVSRVIpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlV29ybGRWZXJ0c05hdGl2ZShjb21wKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlV29ybGRWZXJ0c1dlYkdMKGNvbXApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOmhtueCueaVsOaNriAqL1xuICAgIHByb3RlY3RlZCB1cGRhdGVWZXJ0cyhjb21wOiBjYy5SZW5kZXJDb21wb25lbnQpIHtcbiAgICAgICAgbGV0IG5vZGU6IGNjLk5vZGUgPSBjb21wLm5vZGUsXG4gICAgICAgICAgICBjdzogbnVtYmVyID0gbm9kZS53aWR0aCxcbiAgICAgICAgICAgIGNoOiBudW1iZXIgPSBub2RlLmhlaWdodCxcbiAgICAgICAgICAgIGFwcHg6IG51bWJlciA9IG5vZGUuYW5jaG9yWCAqIGN3LFxuICAgICAgICAgICAgYXBweTogbnVtYmVyID0gbm9kZS5hbmNob3JZICogY2gsXG4gICAgICAgICAgICBsOiBudW1iZXIsXG4gICAgICAgICAgICBiOiBudW1iZXIsIFxuICAgICAgICAgICAgcjogbnVtYmVyLFxuICAgICAgICAgICAgdDogbnVtYmVyO1xuXG4gICAgICAgIGwgPSAtIGFwcHg7XG4gICAgICAgIGIgPSAtIGFwcHk7XG4gICAgICAgIHIgPSBjdyAtIGFwcHg7XG4gICAgICAgIHQgPSBjaCAtIGFwcHk7XG5cbiAgICAgICAgbGV0IGxvY2FsID0gdGhpcy5fbG9jYWw7XG4gICAgICAgIGxvY2FsWzBdID0gbDtcbiAgICAgICAgbG9jYWxbMV0gPSBiO1xuICAgICAgICBsb2NhbFsyXSA9IHI7XG4gICAgICAgIGxvY2FsWzNdID0gdDtcbiAgICAgICAgdGhpcy51cGRhdGVXb3JsZFZlcnRzKGNvbXApO1xuICAgIH1cblxuICAgIC8qKiDmm7TmlrByZW5kZXJkYXRhICovXG4gICAgcHJvdGVjdGVkIHVwZGF0ZVJlbmRlckRhdGEoY29tcDogTWVzaFRleHR1cmUpIHtcbiAgICAgICAgaWYgKGNvbXAuX3ZlcnRzRGlydHkpIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXREYXRhKGNvbXApO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVVVnMoY29tcCk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVZlcnRzKGNvbXApO1xuICAgICAgICAgICAgY29tcC5fdmVydHNEaXJ0eSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfSBcblxuICAgIGZpbGxCdWZmZXJzKGNvbXA6IGNjLlJlbmRlckNvbXBvbmVudCwgcmVuZGVyZXIpIHtcbiAgICAgICAgaWYgKHJlbmRlcmVyLndvcmxkTWF0RGlydHkpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlV29ybGRWZXJ0cyhjb21wKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCByZW5kZXJEYXRhID0gdGhpcy5fcmVuZGVyRGF0YTtcblxuICAgICAgICAvLyB2RGF0YemHjOWMheWQqyBwb3PvvIwgdXbvvIwgY29sb3LmlbDmja7vvIwgaURhdGHkuK3ljIXlkKvpobbngrnntKLlvJVcbiAgICAgICAgbGV0IHZEYXRhID0gcmVuZGVyRGF0YS52RGF0YXNbMF07XG4gICAgICAgIGxldCBpRGF0YSA9IHJlbmRlckRhdGEuaURhdGFzWzBdO1xuXG4gICAgICAgIGxldCBidWZmZXIgPSB0aGlzLmdldEJ1ZmZlcigpO1xuICAgICAgICBsZXQgb2Zmc2V0SW5mbyA9IGJ1ZmZlci5yZXF1ZXN0KHRoaXMudmVydGljZXNDb3VudCwgdGhpcy5pbmRpY2VzQ291bnQpO1xuXG4gICAgICAgIC8vIGJ1ZmZlciBkYXRhIG1heSBiZSByZWFsbG9jLCBuZWVkIGdldCByZWZlcmVuY2UgYWZ0ZXIgcmVxdWVzdC5cblxuICAgICAgICAvLyBmaWxsIHZlcnRpY2VzXG4gICAgICAgIGxldCB2ZXJ0ZXhPZmZzZXQgPSBvZmZzZXRJbmZvLmJ5dGVPZmZzZXQgPj4gMixcbiAgICAgICAgICAgIHZidWYgPSBidWZmZXIuX3ZEYXRhO1xuICAgICAgICBpZiAodkRhdGEubGVuZ3RoICsgdmVydGV4T2Zmc2V0ID4gdmJ1Zi5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZidWYuc2V0KHZEYXRhLnN1YmFycmF5KDAsIHZidWYubGVuZ3RoIC0gdmVydGV4T2Zmc2V0KSwgdmVydGV4T2Zmc2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZidWYuc2V0KHZEYXRhLCB2ZXJ0ZXhPZmZzZXQpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZmlsbCBpbmRpY2VzXG4gICAgICAgIGxldCBpYnVmID0gYnVmZmVyLl9pRGF0YSxcbiAgICAgICAgICAgIGluZGljZU9mZnNldCA9IG9mZnNldEluZm8uaW5kaWNlT2Zmc2V0LFxuICAgICAgICAgICAgdmVydGV4SWQgPSBvZmZzZXRJbmZvLnZlcnRleE9mZnNldDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBpRGF0YS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIGlidWZbaW5kaWNlT2Zmc2V0KytdID0gdmVydGV4SWQgKyBpRGF0YVtpXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHBhY2tUb0R5bmFtaWNBdGxhcyhjb21wLCBmcmFtZSkge1xuICAgICAgICBpZiAoQ0NfVEVTVCkgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFmcmFtZS5fb3JpZ2luYWwgJiYgY2MuZHluYW1pY0F0bGFzTWFuYWdlciAmJiBmcmFtZS5fdGV4dHVyZS5wYWNrYWJsZSkge1xuICAgICAgICAgICAgbGV0IHBhY2tlZEZyYW1lID0gY2MuZHluYW1pY0F0bGFzTWFuYWdlci5pbnNlcnRTcHJpdGVGcmFtZShmcmFtZSk7ICAgICAgICAgICAgXG4gICAgICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgICAgIGlmIChwYWNrZWRGcmFtZSkge1xuICAgICAgICAgICAgICAgIGZyYW1lLl9zZXREeW5hbWljQXRsYXNGcmFtZShwYWNrZWRGcmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG1hdGVyaWFsID0gY29tcC5fbWF0ZXJpYWxzWzBdO1xuICAgICAgICBpZiAoIW1hdGVyaWFsKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICBpZiAobWF0ZXJpYWwuZ2V0UHJvcGVydHkoJ3RleHR1cmUnKSAhPT0gZnJhbWUuX3RleHR1cmUpIHtcbiAgICAgICAgICAgIC8vIHRleHR1cmUgd2FzIHBhY2tlZCB0byBkeW5hbWljIGF0bGFzLCBzaG91bGQgdXBkYXRlIHV2c1xuICAgICAgICAgICAgY29tcC5fdmVydHNEaXJ0eSA9IHRydWU7XG4gICAgICAgICAgICBjb21wLl91cGRhdGVNYXRlcmlhbCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufSAgICJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Logic/Manager/ConfigMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '99faeZt2e5AobpvQuyUBgaI', 'ConfigMgr');
// Script/Logic/Manager/ConfigMgr.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var BaseMgr_1 = require("./BaseMgr");
var ConfigMgr = /** @class */ (function (_super) {
    __extends(ConfigMgr, _super);
    function ConfigMgr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** 加载配置文件 */
    ConfigMgr.prototype.loadConfigs = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    /** 通知其他manager */
    ConfigMgr.prototype.onConfigChange = function () {
        this.game.playerMgr.onConfigChange();
    };
    return ConfigMgr;
}(BaseMgr_1.BaseMgr));
exports.default = ConfigMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTG9naWMvTWFuYWdlci9Db25maWdNZ3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEscUNBQW9DO0FBRXBDO0lBQXVDLDZCQUFPO0lBQTlDOztJQVdBLENBQUM7SUFURyxhQUFhO0lBQ1AsK0JBQVcsR0FBakI7Ozs7OztLQUVDO0lBRUQsa0JBQWtCO0lBQ1gsa0NBQWMsR0FBckI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtJQUN4QyxDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQVhBLEFBV0MsQ0FYc0MsaUJBQU8sR0FXN0MiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlTWdyIH0gZnJvbSBcIi4vQmFzZU1nclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25maWdNZ3IgZXh0ZW5kcyBCYXNlTWdyIHtcblxuICAgIC8qKiDliqDovb3phY3nva7mlofku7YgKi9cbiAgICBhc3luYyBsb2FkQ29uZmlncygpIHtcblxuICAgIH1cblxuICAgIC8qKiDpgJrnn6Xlhbbku5ZtYW5hZ2VyICovXG4gICAgcHVibGljIG9uQ29uZmlnQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLmdhbWUucGxheWVyTWdyLm9uQ29uZmlnQ2hhbmdlKClcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UICapture_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '07ab8hfkXlPXJHF8cmBfVtX', 'UICapture_Auto');
// Script/AutoScripts/UICapture_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UICapture_Auto = /** @class */ (function (_super) {
    __extends(UICapture_Auto, _super);
    function UICapture_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Back = null;
        _this.Capture = null;
        _this.Pen = null;
        _this.Reaser = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UICapture_Auto.prototype, "Back", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UICapture_Auto.prototype, "Capture", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UICapture_Auto.prototype, "Pen", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UICapture_Auto.prototype, "Reaser", void 0);
    UICapture_Auto = __decorate([
        ccclass
    ], UICapture_Auto);
    return UICapture_Auto;
}(cc.Component));
exports.default = UICapture_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlDYXB0dXJlX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBVUM7UUFSQSxVQUFJLEdBQWUsSUFBSSxDQUFDO1FBRXhCLGFBQU8sR0FBZSxJQUFJLENBQUM7UUFFM0IsU0FBRyxHQUFlLElBQUksQ0FBQztRQUV2QixZQUFNLEdBQWUsSUFBSSxDQUFDOztJQUUzQixDQUFDO0lBUkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQztnREFDRztJQUV4QjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO21EQUNNO0lBRTNCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7K0NBQ0U7SUFFdkI7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQztrREFDSztJQVJOLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FVbEM7SUFBRCxxQkFBQztDQVZELEFBVUMsQ0FWMkMsRUFBRSxDQUFDLFNBQVMsR0FVdkQ7a0JBVm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUNhcHR1cmVfQXV0byBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRCYWNrOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdENhcHR1cmU6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0UGVuOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdFJlYXNlcjogQnV0dG9uUGx1cyA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/BroadCasts/BroadcastCenter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c1631mjt99N+bqKIUwCcgeG', 'BroadcastCenter');
// Script/Common/BroadCasts/BroadcastCenter.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BroadcastCenter = exports.BuildingData = void 0;
var BroadCast_1 = require("../Utils/BroadCast");
var BuildingData = /** @class */ (function () {
    function BuildingData() {
    }
    return BuildingData;
}());
exports.BuildingData = BuildingData;
var BroadcastCenter = /** @class */ (function () {
    function BroadcastCenter() {
    }
    BroadcastCenter.buildingState = new BroadCast_1.Broadcast();
    return BroadcastCenter;
}());
exports.BroadcastCenter = BroadcastCenter;
BroadcastCenter.buildingState.on(function (data) {
    console.log(data.id, data.state);
}, this);
BroadcastCenter.buildingState.dispatch({ id: 1, state: "success" });

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0Jyb2FkQ2FzdHMvQnJvYWRjYXN0Q2VudGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdEQUErQztBQUUvQztJQUFBO0lBR0EsQ0FBQztJQUFELG1CQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSxvQ0FBWTtBQUt6QjtJQUFBO0lBRUEsQ0FBQztJQURVLDZCQUFhLEdBQUcsSUFBSSxxQkFBUyxFQUFnQixDQUFDO0lBQ3pELHNCQUFDO0NBRkQsQUFFQyxJQUFBO0FBRlksMENBQWU7QUFLNUIsZUFBZSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsVUFBQyxJQUFJO0lBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDckMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBR1QsZUFBZSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsRUFBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnJvYWRjYXN0IH0gZnJvbSBcIi4uL1V0aWxzL0Jyb2FkQ2FzdFwiO1xuXG5leHBvcnQgY2xhc3MgQnVpbGRpbmdEYXRhIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIHN0YXRlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBCcm9hZGNhc3RDZW50ZXIge1xuICAgIHN0YXRpYyBidWlsZGluZ1N0YXRlID0gbmV3IEJyb2FkY2FzdDxCdWlsZGluZ0RhdGE+KCk7ICAgIFxufVxuXG5cbkJyb2FkY2FzdENlbnRlci5idWlsZGluZ1N0YXRlLm9uKChkYXRhKSA9PiB7XG4gICAgY29uc29sZS5sb2coZGF0YS5pZCwgZGF0YS5zdGF0ZSk7XG59LCB0aGlzKTtcblxuXG5Ccm9hZGNhc3RDZW50ZXIuYnVpbGRpbmdTdGF0ZS5kaXNwYXRjaCh7aWQ6IDEsIHN0YXRlOiBcInN1Y2Nlc3NcIn0pO1xuXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/ButtonPlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3eaf8iLxgtDEKVcEmFvrbqy', 'ButtonPlus');
// Script/Common/Components/ButtonPlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../../UIFrame/SoundMgr");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, menu = _a.menu, help = _a.help, inspector = _a.inspector;
var ButtonPlus = /** @class */ (function (_super) {
    __extends(ButtonPlus, _super);
    function ButtonPlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.audioUrl = '';
        _this.openContinuous = true;
        _this.continuousTime = 1;
        // false表示可以点击
        _this.continuous = false;
        // 定时器
        _this._continuousTimer = null;
        // 长按触发
        _this.openLongPress = false;
        // 触发时间
        _this.longPressTime = 1;
        _this.longPressFlag = false;
        _this.longPressTimer = null;
        return _this;
    }
    ButtonPlus.prototype.onEnable = function () {
        this.continuous = false;
        _super.prototype.onEnable.call(this);
        if (!CC_EDITOR) {
        }
    };
    ButtonPlus.prototype.onDisable = function () {
        if (this._continuousTimer) {
            clearTimeout(this._continuousTimer);
            this._continuousTimer = null;
        }
        if (this.longPressTimer) {
            clearTimeout(this.longPressTimer);
            this.longPressTimer = null;
        }
        _super.prototype.onDisable.call(this);
    };
    /** 重写 */
    ButtonPlus.prototype._onTouchBegan = function (event) {
        if (!this.interactable || !this.enabledInHierarchy)
            return;
        if (this.openLongPress && !this.longPressFlag) { // 开启长按
            if (this.longPressTimer)
                clearTimeout(this.longPressTimer);
            this.longPressTimer = setTimeout(function () {
                // 还在触摸中 触发事件
                if (this["_pressed"]) {
                    this.node.emit('longclickStart', this);
                    this.longPressFlag = true;
                }
            }.bind(this), this.longPressTime * 1000);
        }
        this["_pressed"] = true;
        this["_updateState"]();
        event.stopPropagation();
    };
    ButtonPlus.prototype._onTouchEnded = function (event) {
        if (!this.interactable || !this.enabledInHierarchy)
            return;
        if (this["_pressed"] && this.longPressFlag) {
            this.node.emit('longclickEnd', this);
            this.longPressFlag = false;
        }
        else if (this["_pressed"] && !this.continuous) {
            this.continuous = this.openContinuous ? true : false;
            cc.Component.EventHandler.emitEvents(this.clickEvents, event);
            this.node.emit('click', event);
            SoundMgr_1.default.inst.playEffect(this.audioUrl);
            if (this.openContinuous) {
                this._continuousTimer = setTimeout(function () {
                    this.continuous = false;
                }.bind(this), this.continuousTime * 1000);
            }
        }
        this["_pressed"] = false;
        this["_updateState"]();
        event.stopPropagation();
    };
    ButtonPlus.prototype._onTouchCancel = function () {
        if (!this.interactable || !this.enabledInHierarchy)
            return;
        if (this["_pressed"] && this.longPressFlag) {
            this.node.emit('longclickEnd', this);
            this.longPressFlag = false;
        }
        this["_pressed"] = false;
        this["_updateState"]();
    };
    /** 添加点击事件 */
    ButtonPlus.prototype.addClick = function (callback, target) {
        this.node.off('click');
        this.node.on('click', callback, target);
    };
    /** 添加一个长按事件 */
    ButtonPlus.prototype.addLongClick = function (startFunc, endFunc, target) {
        this.node.off('longclickStart');
        this.node.off('longclickEnd');
        this.node.on('longclickStart', startFunc, target);
        this.node.on('longclickEnd', endFunc, target);
    };
    __decorate([
        property({ tooltip: "音效路径", type: '', multiline: true, formerlySerializedAs: '_N$string' })
    ], ButtonPlus.prototype, "audioUrl", void 0);
    __decorate([
        property({ tooltip: "屏蔽连续点击" })
    ], ButtonPlus.prototype, "openContinuous", void 0);
    __decorate([
        property({ tooltip: "屏蔽时间, 单位:秒" })
    ], ButtonPlus.prototype, "continuousTime", void 0);
    __decorate([
        property({ tooltip: "是否开启长按事件" })
    ], ButtonPlus.prototype, "openLongPress", void 0);
    __decorate([
        property({ tooltip: "长按时间" })
    ], ButtonPlus.prototype, "longPressTime", void 0);
    ButtonPlus = __decorate([
        ccclass,
        menu('i18n:MAIN_MENU.component.ui/ButtonPlus'),
        executeInEditMode,
        help('i18n:COMPONENT.help_url.button'),
        inspector('packages://buttonplus/inspector.js')
    ], ButtonPlus);
    return ButtonPlus;
}(cc.Button));
exports.default = ButtonPlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Light/LightStruct.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c719fETXCJI04htRCnD+NLA', 'LightStruct');
// Script/Common/Light/LightStruct.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Intersection = void 0;
/** 交点 */
var Intersection = /** @class */ (function () {
    function Intersection(x, y, len, angle) {
        this.x = x;
        this.y = y;
        this.len = len;
        this.angle = angle;
    }
    return Intersection;
}());
exports.Intersection = Intersection;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0xpZ2h0L0xpZ2h0U3RydWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLFNBQVM7QUFDVDtJQU1JLHNCQUFZLENBQVMsRUFBRSxDQUFTLEVBQUUsR0FBVyxFQUFFLEtBQWM7UUFDekQsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUNMLG1CQUFDO0FBQUQsQ0FaQSxBQVlDLElBQUE7QUFaWSxvQ0FBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiDkuqTngrkgKi9cbmV4cG9ydCBjbGFzcyBJbnRlcnNlY3Rpb24ge1xuICAgIHg6IG51bWJlcjtcbiAgICB5OiBudW1iZXI7XG4gICAgbGVuOiBudW1iZXI7ICAgICAgICAgICAgICAgIC8vIOivpeeCueWIsOWFiea6kOeahOi3neemu1xuICAgIGFuZ2xlPzogbnVtYmVyOyAgICAgICAgICAgICAvLyDop5LluqYsIOmcgOimgeaOkuW6j+eUqFxuXG4gICAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIsIGxlbjogbnVtYmVyLCBhbmdsZT86IG51bWJlcikge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgICAgICB0aGlzLmxlbiA9IGxlbjtcbiAgICAgICAgdGhpcy5hbmdsZSA9IGFuZ2xlO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Mobx/mobx.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (global){
"use strict";
cc._RF.push(module, 'de3aaq1fItEy5tKcvHOTs15', 'mobx');
// Script/Common/Mobx/mobx.js

"use strict";

exports.__esModule = true;
exports.$mobx = void 0;
exports.FlowCancellationError = FlowCancellationError;
exports.Reaction = exports.ObservableSet = exports.ObservableMap = void 0;
exports._allowStateChanges = allowStateChanges;
exports.runInAction = exports._allowStateChangesInsideComputed = runInAction;
exports._allowStateReadsEnd = allowStateReadsEnd;
exports._allowStateReadsStart = allowStateReadsStart;
exports._autoAction = void 0;
exports._endAction = _endAction;
exports._getAdministration = getAdministration;
exports._getGlobalState = getGlobalState;
exports._interceptReads = interceptReads;
exports._isComputingDerivation = isComputingDerivation;
exports._resetGlobalState = resetGlobalState;
exports._startAction = _startAction;
exports.action = void 0;
exports.autorun = autorun;
exports.computed = exports.comparer = void 0;
exports.configure = configure;
exports.createAtom = createAtom;
exports.defineProperty = apiDefineProperty;
exports.entries = entries;
exports.extendObservable = extendObservable;
exports.flow = void 0;
exports.flowResult = flowResult;
exports.get = get;
exports.getAtom = getAtom;
exports.getDebugName = getDebugName;
exports.getDependencyTree = getDependencyTree;
exports.getObserverTree = getObserverTree;
exports.has = has;
exports.intercept = intercept;
exports.isAction = isAction;
exports.isBoxedObservable = void 0;
exports.isComputed = isComputed;
exports.isComputedProp = isComputedProp;
exports.isFlow = isFlow;
exports.isFlowCancellationError = isFlowCancellationError;
exports.isObservable = isObservable;
exports.isObservableArray = isObservableArray;
exports.isObservableMap = void 0;
exports.isObservableObject = isObservableObject;
exports.isObservableProp = isObservableProp;
exports.isObservableSet = void 0;
exports.keys = keys;
exports.makeAutoObservable = makeAutoObservable;
exports.makeObservable = makeObservable;
exports.observable = void 0;
exports.observe = observe;
exports.onBecomeObserved = onBecomeObserved;
exports.onBecomeUnobserved = onBecomeUnobserved;
exports.onReactionError = onReactionError;
exports.override = void 0;
exports.ownKeys = apiOwnKeys;
exports.reaction = reaction;
exports.remove = remove;
exports.set = set;
exports.spy = spy;
exports.toJS = toJS;
exports.trace = trace;
exports.transaction = transaction;
exports.untracked = untracked;
exports.values = values;
exports.when = when;
var NODE_ENV = "production";
var niceErrors = {
  0: "Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",
  1: function _(annotationType, key) {
    return "Cannot apply '" + annotationType + "' to '" + key.toString() + "': Field not found.";
  },

  /*
  2(prop) {
      return `invalid decorator for '${prop.toString()}'`
  },
  3(prop) {
      return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`
  },
  4(prop) {
      return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`
  },
  */
  5: "'keys()' can only be used on observable objects, arrays, sets and maps",
  6: "'values()' can only be used on observable objects, arrays, sets and maps",
  7: "'entries()' can only be used on observable objects, arrays and maps",
  8: "'set()' can only be used on observable objects, arrays and maps",
  9: "'remove()' can only be used on observable objects, arrays and maps",
  10: "'has()' can only be used on observable objects, arrays and maps",
  11: "'get()' can only be used on observable objects, arrays and maps",
  12: "Invalid annotation",
  13: "Dynamic observable objects cannot be frozen",
  14: "Intercept handlers should return nothing or a change object",
  15: "Observable arrays cannot be frozen",
  16: "Modification exception: the internal structure of an observable array was changed.",
  17: function _(index, length) {
    return "[mobx.array] Index out of bounds, " + index + " is larger than " + length;
  },
  18: "mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",
  19: function _(other) {
    return "Cannot initialize from classes that inherit from Map: " + other.constructor.name;
  },
  20: function _(other) {
    return "Cannot initialize map from " + other;
  },
  21: function _(dataStructure) {
    return "Cannot convert to map from '" + dataStructure + "'";
  },
  22: "mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",
  23: "It is not possible to get index atoms from arrays",
  24: function _(thing) {
    return "Cannot obtain administration from " + thing;
  },
  25: function _(property, name) {
    return "the entry '" + property + "' does not exist in the observable map '" + name + "'";
  },
  26: "please specify a property",
  27: function _(property, name) {
    return "no observable property '" + property.toString() + "' found on the observable object '" + name + "'";
  },
  28: function _(thing) {
    return "Cannot obtain atom from " + thing;
  },
  29: "Expecting some object",
  30: "invalid action stack. did you forget to finish an action?",
  31: "missing option for computed: get",
  32: function _(name, derivation) {
    return "Cycle detected in computation " + name + ": " + derivation;
  },
  33: function _(name) {
    return "The setter of computed value '" + name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?";
  },
  34: function _(name) {
    return "[ComputedValue '" + name + "'] It is not possible to assign a new value to a computed value.";
  },
  35: "There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",
  36: "isolateGlobalState should be called before MobX is running any reactions",
  37: function _(method) {
    return "[mobx] `observableArray." + method + "()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()." + method + "()` instead";
  },
  38: "'ownKeys()' can only be used on observable objects",
  39: "'defineProperty()' can only be used on observable objects"
};
var errors = NODE_ENV !== "production" ? niceErrors : {};

function die(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  if (NODE_ENV !== "production") {
    var e = typeof error === "string" ? error : errors[error];
    if (typeof e === "function") e = e.apply(null, args);
    throw new Error("[MobX] " + e);
  }

  throw new Error(typeof error === "number" ? "[MobX] minified error nr: " + error + (args.length ? " " + args.map(String).join(",") : "") + ". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts" : "[MobX] " + error);
}

var mockGlobal = {};

function getGlobal() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }

  if (typeof window !== "undefined") {
    return window;
  }

  if (typeof global !== "undefined") {
    return global;
  }

  if (typeof self !== "undefined") {
    return self;
  }

  return mockGlobal;
}

var assign = Object.assign;
var getDescriptor = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var objectPrototype = Object.prototype;
var EMPTY_ARRAY = [];
Object.freeze(EMPTY_ARRAY);
var EMPTY_OBJECT = {};
Object.freeze(EMPTY_OBJECT);
var hasProxy = typeof Proxy !== "undefined";
var plainObjectString = /*#__PURE__*/Object.toString();

function assertProxies() {
  if (!hasProxy) {
    die(NODE_ENV !== "production" ? "`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`" : "Proxy not available");
  }
}

function warnAboutProxyRequirement(msg) {
  if (NODE_ENV !== "production" && globalState.verifyProxies) {
    die("MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to " + msg);
  }
}

function getNextId() {
  return ++globalState.mobxGuid;
}
/**
 * Makes sure that the provided function is invoked at most once.
 */


function once(func) {
  var invoked = false;
  return function () {
    if (invoked) return;
    invoked = true;
    return func.apply(this, arguments);
  };
}

var noop = function noop() {};

function isFunction(fn) {
  return typeof fn === "function";
}

function isStringish(value) {
  var t = typeof value;

  switch (t) {
    case "string":
    case "symbol":
    case "number":
      return true;
  }

  return false;
}

function isObject(value) {
  return value !== null && typeof value === "object";
}

function isPlainObject(value) {
  var _proto$constructor;

  if (!isObject(value)) return false;
  var proto = Object.getPrototypeOf(value);
  if (proto == null) return true;
  return ((_proto$constructor = proto.constructor) == null ? void 0 : _proto$constructor.toString()) === plainObjectString;
} // https://stackoverflow.com/a/37865170


function isGenerator(obj) {
  var constructor = obj == null ? void 0 : obj.constructor;
  if (!constructor) return false;
  if ("GeneratorFunction" === constructor.name || "GeneratorFunction" === constructor.displayName) return true;
  return false;
}

function addHiddenProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: true,
    configurable: true,
    value: value
  });
}

function addHiddenFinalProp(object, propName, value) {
  defineProperty(object, propName, {
    enumerable: false,
    writable: false,
    configurable: true,
    value: value
  });
}

function createInstanceofPredicate(name, theClass) {
  var propName = "isMobX" + name;
  theClass.prototype[propName] = true;
  return function (x) {
    return isObject(x) && x[propName] === true;
  };
}

function isES6Map(thing) {
  return thing instanceof Map;
}

function isES6Set(thing) {
  return thing instanceof Set;
}

var hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== "undefined";
/**
 * Returns the following: own enumerable keys and symbols.
 */

function getPlainObjectKeys(object) {
  var keys = Object.keys(object); // Not supported in IE, so there are not going to be symbol props anyway...

  if (!hasGetOwnPropertySymbols) return keys;
  var symbols = Object.getOwnPropertySymbols(object);
  if (!symbols.length) return keys;
  return [].concat(keys, symbols.filter(function (s) {
    return objectPrototype.propertyIsEnumerable.call(object, s);
  }));
} // From Immer utils
// Returns all own keys, including non-enumerable and symbolic


var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function (obj) {
  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
} :
/* istanbul ignore next */
Object.getOwnPropertyNames;

function stringifyKey(key) {
  if (typeof key === "string") return key;
  if (typeof key === "symbol") return key.toString();
  return new String(key).toString();
}

function toPrimitive(value) {
  return value === null ? null : typeof value === "object" ? "" + value : value;
}

function hasProp(target, prop) {
  return objectPrototype.hasOwnProperty.call(target, prop);
} // From Immer utils


var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(target) {
  // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274
  var res = {}; // Note: without polyfill for ownKeys, symbols won't be picked up

  ownKeys(target).forEach(function (key) {
    res[key] = getDescriptor(target, key);
  });
  return res;
};

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}

var storedAnnotationsSymbol = /*#__PURE__*/Symbol("mobx-stored-annotations");
/**
 * Creates a function that acts as
 * - decorator
 * - annotation object
 */

function createDecoratorAnnotation(annotation) {
  function decorator(target, property) {
    storeAnnotation(target, property, annotation);
  }

  return Object.assign(decorator, annotation);
}
/**
 * Stores annotation to prototype,
 * so it can be inspected later by `makeObservable` called from constructor
 */


function storeAnnotation(prototype, key, annotation) {
  if (!hasProp(prototype, storedAnnotationsSymbol)) {
    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));
  } // @override must override something


  if (NODE_ENV !== "production" && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    die("'" + fieldName + "' is decorated with 'override', " + "but no such decorated member was found on prototype.");
  } // Cannot re-decorate


  assertNotDecorated(prototype, annotation, key); // Ignore override

  if (!isOverride(annotation)) {
    prototype[storedAnnotationsSymbol][key] = annotation;
  }
}

function assertNotDecorated(prototype, annotation, key) {
  if (NODE_ENV !== "production" && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {
    var fieldName = prototype.constructor.name + ".prototype." + key.toString();
    var currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '@" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already decorated with '@" + currentAnnotationType + "'.") + "\nRe-decorating fields is not allowed." + "\nUse '@override' decorator for methods overriden by subclass.");
  }
}
/**
 * Collects annotations from prototypes and stores them on target (instance)
 */


function collectStoredAnnotations(target) {
  if (!hasProp(target, storedAnnotationsSymbol)) {
    if (NODE_ENV !== "production" && !target[storedAnnotationsSymbol]) {
      die("No annotations were passed to makeObservable, but no decorated members have been found either");
    } // We need a copy as we will remove annotation from the list once it's applied.


    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));
  }

  return target[storedAnnotationsSymbol];
}

var $mobx = /*#__PURE__*/Symbol("mobx administration");
exports.$mobx = $mobx;

var Atom = /*#__PURE__*/function () {
  // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed

  /**
   * Create a new atom. For debugging purposes it is recommended to give it a name.
   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
   */
  function Atom(name_) {
    if (name_ === void 0) {
      name_ = NODE_ENV !== "production" ? "Atom@" + getNextId() : "Atom";
    }

    this.name_ = void 0;
    this.isPendingUnobservation_ = false;
    this.isBeingObserved_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    this.name_ = name_;
  } // onBecomeObservedListeners


  var _proto = Atom.prototype;

  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };

  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  /**
   * Invoke this method to notify mobx that your atom has been used somehow.
   * Returns true if there is currently a reactive context.
   */
  ;

  _proto.reportObserved = function reportObserved$1() {
    return reportObserved(this);
  }
  /**
   * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.
   */
  ;

  _proto.reportChanged = function reportChanged() {
    startBatch();
    propagateChanged(this);
    endBatch();
  };

  _proto.toString = function toString() {
    return this.name_;
  };

  return Atom;
}();

var isAtom = /*#__PURE__*/createInstanceofPredicate("Atom", Atom);

function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
  if (onBecomeObservedHandler === void 0) {
    onBecomeObservedHandler = noop;
  }

  if (onBecomeUnobservedHandler === void 0) {
    onBecomeUnobservedHandler = noop;
  }

  var atom = new Atom(name); // default `noop` listener will not initialize the hook Set

  if (onBecomeObservedHandler !== noop) {
    onBecomeObserved(atom, onBecomeObservedHandler);
  }

  if (onBecomeUnobservedHandler !== noop) {
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
  }

  return atom;
}

function identityComparer(a, b) {
  return a === b;
}

function structuralComparer(a, b) {
  return deepEqual(a, b);
}

function shallowComparer(a, b) {
  return deepEqual(a, b, 1);
}

function defaultComparer(a, b) {
  return Object.is(a, b);
}

var comparer = {
  identity: identityComparer,
  structural: structuralComparer,
  "default": defaultComparer,
  shallow: shallowComparer
};
exports.comparer = comparer;

function deepEnhancer(v, _, name) {
  // it is an observable already, done
  if (isObservable(v)) return v; // something that can be converted and mutated?

  if (Array.isArray(v)) return observable.array(v, {
    name: name
  });
  if (isPlainObject(v)) return observable.object(v, undefined, {
    name: name
  });
  if (isES6Map(v)) return observable.map(v, {
    name: name
  });
  if (isES6Set(v)) return observable.set(v, {
    name: name
  });

  if (typeof v === "function" && !isAction(v) && !isFlow(v)) {
    if (isGenerator(v)) {
      return flow(v);
    } else {
      return autoAction(name, v);
    }
  }

  return v;
}

function shallowEnhancer(v, _, name) {
  if (v === undefined || v === null) return v;
  if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) return v;
  if (Array.isArray(v)) return observable.array(v, {
    name: name,
    deep: false
  });
  if (isPlainObject(v)) return observable.object(v, undefined, {
    name: name,
    deep: false
  });
  if (isES6Map(v)) return observable.map(v, {
    name: name,
    deep: false
  });
  if (isES6Set(v)) return observable.set(v, {
    name: name,
    deep: false
  });
  if (NODE_ENV !== "production") die("The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets");
}

function referenceEnhancer(newValue) {
  // never turn into an observable
  return newValue;
}

function refStructEnhancer(v, oldValue) {
  if (NODE_ENV !== "production" && isObservable(v)) die("observable.struct should not be used with observable values");
  if (deepEqual(v, oldValue)) return oldValue;
  return v;
}

var OVERRIDE = "override";
var override = /*#__PURE__*/createDecoratorAnnotation({
  annotationType_: OVERRIDE,
  make_: make_,
  extend_: extend_
});
exports.override = override;

function isOverride(annotation) {
  return annotation.annotationType_ === OVERRIDE;
}

function make_(adm, key) {
  // Must not be plain object
  if (NODE_ENV !== "production" && adm.isPlainObject_) {
    die("Cannot apply '" + this.annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + this.annotationType_ + "' cannot be used on plain objects."));
  } // Must override something


  if (NODE_ENV !== "production" && !hasProp(adm.appliedAnnotations_, key)) {
    die("'" + adm.name_ + "." + key.toString() + "' is annotated with '" + this.annotationType_ + "', " + "but no such annotated member was found on prototype.");
  }

  return 0
  /* Cancel */
  ;
}

function extend_(adm, key, descriptor, proxyTrap) {
  die("'" + this.annotationType_ + "' can only be used with 'makeObservable'");
}

function createActionAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$1,
    extend_: extend_$1
  };
}

function make_$1(adm, key, descriptor, source) {
  var _this$options_; // bound


  if ((_this$options_ = this.options_) == null ? void 0 : _this$options_.bound) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */
    : 1
    /* Break */
    ;
  } // own


  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */
    : 2
    /* Continue */
    ;
  } // prototype


  if (isAction(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1
    /* Break */
    ;
  }

  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);
  defineProperty(source, key, actionDescriptor);
  return 2
  /* Continue */
  ;
}

function extend_$1(adm, key, descriptor, proxyTrap) {
  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);
  return adm.defineProperty_(key, actionDescriptor, proxyTrap);
}

function assertActionDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;

  if (NODE_ENV !== "production" && !isFunction(value)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a function value."));
  }
}

function createActionDescriptor(adm, annotation, key, descriptor, // provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3;

  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }

  assertActionDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;

  if ((_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.bound) {
    var _adm$proxy_;

    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }

  return {
    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false),
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}

function createFlowAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$2,
    extend_: extend_$2
  };
}

function make_$2(adm, key, descriptor, source) {
  var _this$options_; // own


  if (source === adm.target_) {
    return this.extend_(adm, key, descriptor, false) === null ? 0
    /* Cancel */
    : 2
    /* Continue */
    ;
  } // prototype
  // bound - must annotate protos to support super.flow()


  if (((_this$options_ = this.options_) == null ? void 0 : _this$options_.bound) && !isFlow(adm.target_[key])) {
    if (this.extend_(adm, key, descriptor, false) === null) return 0
    /* Cancel */
    ;
  }

  if (isFlow(descriptor.value)) {
    // A prototype could have been annotated already by other constructor,
    // rest of the proto chain must be annotated already
    return 1
    /* Break */
    ;
  }

  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);
  defineProperty(source, key, flowDescriptor);
  return 2
  /* Continue */
  ;
}

function extend_$2(adm, key, descriptor, proxyTrap) {
  var _this$options_2;

  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);
  return adm.defineProperty_(key, flowDescriptor, proxyTrap);
}

function assertFlowDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var value = _ref2.value;

  if (NODE_ENV !== "production" && !isFunction(value)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on properties with a generator function value."));
  }
}

function createFlowDescriptor(adm, annotation, key, descriptor, bound, // provides ability to disable safeDescriptors for prototypes
safeDescriptors) {
  if (safeDescriptors === void 0) {
    safeDescriptors = globalState.safeDescriptors;
  }

  assertFlowDescriptor(adm, annotation, key, descriptor);
  var value = descriptor.value;

  if (bound) {
    var _adm$proxy_;

    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }

  return {
    value: flow(value),
    // Non-configurable for classes
    // prevents accidental field redefinition in subclass
    configurable: safeDescriptors ? adm.isPlainObject_ : true,
    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058
    enumerable: false,
    // Non-obsevable, therefore non-writable
    // Also prevents rewriting in subclass constructor
    writable: safeDescriptors ? false : true
  };
}

function createComputedAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$3,
    extend_: extend_$3
  };
}

function make_$3(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0
  /* Cancel */
  : 1
  /* Break */
  ;
}

function extend_$3(adm, key, descriptor, proxyTrap) {
  assertComputedDescriptor(adm, this, key, descriptor);
  return adm.defineComputedProperty_(key, _extends({}, this.options_, {
    get: descriptor.get,
    set: descriptor.set
  }), proxyTrap);
}

function assertComputedDescriptor(adm, _ref, key, _ref2) {
  var annotationType_ = _ref.annotationType_;
  var get = _ref2.get;

  if (NODE_ENV !== "production" && !get) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' can only be used on getter(+setter) properties."));
  }
}

function createObservableAnnotation(name, options) {
  return {
    annotationType_: name,
    options_: options,
    make_: make_$4,
    extend_: extend_$4
  };
}

function make_$4(adm, key, descriptor) {
  return this.extend_(adm, key, descriptor, false) === null ? 0
  /* Cancel */
  : 1
  /* Break */
  ;
}

function extend_$4(adm, key, descriptor, proxyTrap) {
  var _this$options_$enhanc, _this$options_;

  assertObservableDescriptor(adm, this, key, descriptor);
  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);
}

function assertObservableDescriptor(adm, _ref, key, descriptor) {
  var annotationType_ = _ref.annotationType_;

  if (NODE_ENV !== "production" && !("value" in descriptor)) {
    die("Cannot apply '" + annotationType_ + "' to '" + adm.name_ + "." + key.toString() + "':" + ("\n'" + annotationType_ + "' cannot be used on getter/setter properties"));
  }
}

var AUTO = "true";
var autoAnnotation = /*#__PURE__*/createAutoAnnotation();

function createAutoAnnotation(options) {
  return {
    annotationType_: AUTO,
    options_: options,
    make_: make_$5,
    extend_: extend_$5
  };
}

function make_$5(adm, key, descriptor, source) {
  var _this$options_3, _this$options_4; // getter -> computed


  if (descriptor.get) {
    return computed.make_(adm, key, descriptor, source);
  } // lone setter -> action setter


  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.make_
    var set = createAction(key.toString(), descriptor.set); // own

    if (source === adm.target_) {
      return adm.defineProperty_(key, {
        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
        set: set
      }) === null ? 0
      /* Cancel */
      : 2
      /* Continue */
      ;
    } // proto


    defineProperty(source, key, {
      configurable: true,
      set: set
    });
    return 2
    /* Continue */
    ;
  } // function on proto -> autoAction/flow


  if (source !== adm.target_ && typeof descriptor.value === "function") {
    var _this$options_2;

    if (isGenerator(descriptor.value)) {
      var _this$options_;

      var flowAnnotation = ((_this$options_ = this.options_) == null ? void 0 : _this$options_.autoBind) ? flow.bound : flow;
      return flowAnnotation.make_(adm, key, descriptor, source);
    }

    var actionAnnotation = ((_this$options_2 = this.options_) == null ? void 0 : _this$options_2.autoBind) ? autoAction.bound : autoAction;
    return actionAnnotation.make_(adm, key, descriptor, source);
  } // other -> observable
  // Copy props from proto as well, see test:
  // "decorate should work with Object.create"


  var observableAnnotation = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable; // if function respect autoBind option

  if (typeof descriptor.value === "function" && ((_this$options_4 = this.options_) == null ? void 0 : _this$options_4.autoBind)) {
    var _adm$proxy_;

    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);
  }

  return observableAnnotation.make_(adm, key, descriptor, source);
}

function extend_$5(adm, key, descriptor, proxyTrap) {
  var _this$options_5, _this$options_6; // getter -> computed


  if (descriptor.get) {
    return computed.extend_(adm, key, descriptor, proxyTrap);
  } // lone setter -> action setter


  if (descriptor.set) {
    // TODO make action applicable to setter and delegate to action.extend_
    return adm.defineProperty_(key, {
      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,
      set: createAction(key.toString(), descriptor.set)
    }, proxyTrap);
  } // other -> observable
  // if function respect autoBind option


  if (typeof descriptor.value === "function" && ((_this$options_5 = this.options_) == null ? void 0 : _this$options_5.autoBind)) {
    var _adm$proxy_2;

    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);
  }

  var observableAnnotation = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;
  return observableAnnotation.extend_(adm, key, descriptor, proxyTrap);
} // in the majority of cases


var defaultCreateObservableOptions = {
  deep: true,
  name: undefined,
  defaultDecorator: undefined,
  proxy: true
};
Object.freeze(defaultCreateObservableOptions);

function asCreateObservableOptions(thing) {
  return thing || defaultCreateObservableOptions;
}

var observableAnnotation = /*#__PURE__*/createObservableAnnotation("observable");
var observableRefAnnotation = /*#__PURE__*/createObservableAnnotation("observable.ref", {
  enhancer: referenceEnhancer
});
var observableShallowAnnotation = /*#__PURE__*/createObservableAnnotation("observable.shallow", {
  enhancer: shallowEnhancer
});
var observableStructAnnotation = /*#__PURE__*/createObservableAnnotation("observable.struct", {
  enhancer: refStructEnhancer
});
var observableDecoratorAnnotation = /*#__PURE__*/createDecoratorAnnotation(observableAnnotation);

function getEnhancerFromOptions(options) {
  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);
}

function getAnnotationFromOptions(options) {
  var _options$defaultDecor;

  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : undefined;
}

function getEnhancerFromAnnotation(annotation) {
  var _annotation$options_$, _annotation$options_;

  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;
}
/**
 * Turns an object, array or function into a reactive structure.
 * @param v the value which should become observable.
 */


function createObservable(v, arg2, arg3) {
  // @observable someProp;
  if (isStringish(arg2)) {
    storeAnnotation(v, arg2, observableAnnotation);
    return;
  } // already observable - ignore


  if (isObservable(v)) return v; // plain object

  if (isPlainObject(v)) return observable.object(v, arg2, arg3); // Array

  if (Array.isArray(v)) return observable.array(v, arg2); // Map

  if (isES6Map(v)) return observable.map(v, arg2); // Set

  if (isES6Set(v)) return observable.set(v, arg2); // other object - ignore

  if (typeof v === "object" && v !== null) return v; // anything else

  return observable.box(v, arg2);
}

Object.assign(createObservable, observableDecoratorAnnotation);
var observableFactories = {
  box: function box(value, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);
  },
  array: function array(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return (globalState.useProxies === false || o.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name);
  },
  map: function map(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);
  },
  set: function set(initialValues, options) {
    var o = asCreateObservableOptions(options);
    return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);
  },
  object: function object(props, decorators, options) {
    return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);
  },
  ref: /*#__PURE__*/createDecoratorAnnotation(observableRefAnnotation),
  shallow: /*#__PURE__*/createDecoratorAnnotation(observableShallowAnnotation),
  deep: observableDecoratorAnnotation,
  struct: /*#__PURE__*/createDecoratorAnnotation(observableStructAnnotation)
}; // eslint-disable-next-line

var observable = /*#__PURE__*/assign(createObservable, observableFactories);
exports.observable = observable;
var COMPUTED = "computed";
var COMPUTED_STRUCT = "computed.struct";
var computedAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED);
var computedStructAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED_STRUCT, {
  equals: comparer.structural
});
/**
 * Decorator for class properties: @computed get value() { return expr; }.
 * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;
 */

var computed = function computed(arg1, arg2) {
  if (isStringish(arg2)) {
    // @computed
    return storeAnnotation(arg1, arg2, computedAnnotation);
  }

  if (isPlainObject(arg1)) {
    // @computed({ options })
    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));
  } // computed(expr, options?)


  if (NODE_ENV !== "production") {
    if (!isFunction(arg1)) die("First argument to `computed` should be an expression.");
    if (isFunction(arg2)) die("A setter as second argument is no longer supported, use `{ set: fn }` option instead");
  }

  var opts = isPlainObject(arg2) ? arg2 : {};
  opts.get = arg1;
  opts.name || (opts.name = arg1.name || "");
  /* for generated name */

  return new ComputedValue(opts);
};

exports.computed = computed;
Object.assign(computed, computedAnnotation);
computed.struct = /*#__PURE__*/createDecoratorAnnotation(computedStructAnnotation);

var _getDescriptor$config, _getDescriptor; // mobx versions


var currentActionId = 0;
var nextActionId = 1;
var isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /*#__PURE__*/getDescriptor(function () {}, "name")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false; // we can safely recycle this object

var tmpNameDescriptor = {
  value: "action",
  configurable: true,
  writable: false,
  enumerable: false
};

function createAction(actionName, fn, autoAction, ref) {
  if (autoAction === void 0) {
    autoAction = false;
  }

  if (NODE_ENV !== "production") {
    if (!isFunction(fn)) die("`action` can only be invoked on functions");
    if (typeof actionName !== "string" || !actionName) die("actions should have valid names, got: '" + actionName + "'");
  }

  function res() {
    return executeAction(actionName, autoAction, fn, ref || this, arguments);
  }

  res.isMobxAction = true;

  if (isFunctionNameConfigurable) {
    tmpNameDescriptor.value = actionName;
    Object.defineProperty(res, "name", tmpNameDescriptor);
  }

  return res;
}

function executeAction(actionName, canRunAsDerivation, fn, scope, args) {
  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);

  try {
    return fn.apply(scope, args);
  } catch (err) {
    runInfo.error_ = err;
    throw err;
  } finally {
    _endAction(runInfo);
  }
}

function _startAction(actionName, canRunAsDerivation, // true for autoAction
scope, args) {
  var notifySpy_ = NODE_ENV !== "production" && isSpyEnabled() && !!actionName;
  var startTime_ = 0;

  if (NODE_ENV !== "production" && notifySpy_) {
    startTime_ = Date.now();
    var flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY;
    spyReportStart({
      type: ACTION,
      name: actionName,
      object: scope,
      arguments: flattenedArgs
    });
  }

  var prevDerivation_ = globalState.trackingDerivation;
  var runAsAction = !canRunAsDerivation || !prevDerivation_;
  startBatch();
  var prevAllowStateChanges_ = globalState.allowStateChanges; // by default preserve previous allow

  if (runAsAction) {
    untrackedStart();
    prevAllowStateChanges_ = allowStateChangesStart(true);
  }

  var prevAllowStateReads_ = allowStateReadsStart(true);
  var runInfo = {
    runAsAction_: runAsAction,
    prevDerivation_: prevDerivation_,
    prevAllowStateChanges_: prevAllowStateChanges_,
    prevAllowStateReads_: prevAllowStateReads_,
    notifySpy_: notifySpy_,
    startTime_: startTime_,
    actionId_: nextActionId++,
    parentActionId_: currentActionId
  };
  currentActionId = runInfo.actionId_;
  return runInfo;
}

function _endAction(runInfo) {
  if (currentActionId !== runInfo.actionId_) {
    die(30);
  }

  currentActionId = runInfo.parentActionId_;

  if (runInfo.error_ !== undefined) {
    globalState.suppressReactionErrors = true;
  }

  allowStateChangesEnd(runInfo.prevAllowStateChanges_);
  allowStateReadsEnd(runInfo.prevAllowStateReads_);
  endBatch();
  if (runInfo.runAsAction_) untrackedEnd(runInfo.prevDerivation_);

  if (NODE_ENV !== "production" && runInfo.notifySpy_) {
    spyReportEnd({
      time: Date.now() - runInfo.startTime_
    });
  }

  globalState.suppressReactionErrors = false;
}

function allowStateChanges(allowStateChanges, func) {
  var prev = allowStateChangesStart(allowStateChanges);

  try {
    return func();
  } finally {
    allowStateChangesEnd(prev);
  }
}

function allowStateChangesStart(allowStateChanges) {
  var prev = globalState.allowStateChanges;
  globalState.allowStateChanges = allowStateChanges;
  return prev;
}

function allowStateChangesEnd(prev) {
  globalState.allowStateChanges = prev;
}

var _Symbol$toPrimitive;

var CREATE = "create";
_Symbol$toPrimitive = Symbol.toPrimitive;

var ObservableValue = /*#__PURE__*/function (_Atom) {
  _inheritsLoose(ObservableValue, _Atom);

  function ObservableValue(value, enhancer, name_, notifySpy, equals) {
    var _this;

    if (name_ === void 0) {
      name_ = NODE_ENV !== "production" ? "ObservableValue@" + getNextId() : "ObservableValue";
    }

    if (notifySpy === void 0) {
      notifySpy = true;
    }

    if (equals === void 0) {
      equals = comparer["default"];
    }

    _this = _Atom.call(this, name_) || this;
    _this.enhancer = void 0;
    _this.name_ = void 0;
    _this.equals = void 0;
    _this.hasUnreportedChange_ = false;
    _this.interceptors_ = void 0;
    _this.changeListeners_ = void 0;
    _this.value_ = void 0;
    _this.dehancer = void 0;
    _this.enhancer = enhancer;
    _this.name_ = name_;
    _this.equals = equals;
    _this.value_ = enhancer(value, undefined, name_);

    if (NODE_ENV !== "production" && notifySpy && isSpyEnabled()) {
      // only notify spy if this is a stand-alone observable
      spyReport({
        type: CREATE,
        object: _assertThisInitialized(_this),
        observableKind: "value",
        debugObjectName: _this.name_,
        newValue: "" + _this.value_
      });
    }

    return _this;
  }

  var _proto = ObservableValue.prototype;

  _proto.dehanceValue = function dehanceValue(value) {
    if (this.dehancer !== undefined) return this.dehancer(value);
    return value;
  };

  _proto.set = function set(newValue) {
    var oldValue = this.value_;
    newValue = this.prepareNewValue_(newValue);

    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();

      if (NODE_ENV !== "production" && notifySpy) {
        spyReportStart({
          type: UPDATE,
          object: this,
          observableKind: "value",
          debugObjectName: this.name_,
          newValue: newValue,
          oldValue: oldValue
        });
      }

      this.setNewValue_(newValue);
      if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
    }
  };

  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {
    checkIfStateModificationsAreAllowed(this);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this,
        type: UPDATE,
        newValue: newValue
      });
      if (!change) return globalState.UNCHANGED;
      newValue = change.newValue;
    } // apply modifier


    newValue = this.enhancer(newValue, this.value_, this.name_);
    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;
  };

  _proto.setNewValue_ = function setNewValue_(newValue) {
    var oldValue = this.value_;
    this.value_ = newValue;
    this.reportChanged();

    if (hasListeners(this)) {
      notifyListeners(this, {
        type: UPDATE,
        object: this,
        newValue: newValue,
        oldValue: oldValue
      });
    }
  };

  _proto.get = function get() {
    this.reportObserved();
    return this.dehanceValue(this.value_);
  };

  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };

  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately) listener({
      observableKind: "value",
      debugObjectName: this.name_,
      object: this,
      type: UPDATE,
      newValue: this.value_,
      oldValue: undefined
    });
    return registerListener(this, listener);
  };

  _proto.raw = function raw() {
    // used by MST ot get undehanced value
    return this.value_;
  };

  _proto.toJSON = function toJSON() {
    return this.get();
  };

  _proto.toString = function toString() {
    return this.name_ + "[" + this.value_ + "]";
  };

  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };

  _proto[_Symbol$toPrimitive] = function () {
    return this.valueOf();
  };

  return ObservableValue;
}(Atom);

var isObservableValue = /*#__PURE__*/createInstanceofPredicate("ObservableValue", ObservableValue);
exports.isBoxedObservable = isObservableValue;

var _Symbol$toPrimitive$1;
/**
 * A node in the state dependency root that observes other nodes, and can be observed itself.
 *
 * ComputedValue will remember the result of the computation for the duration of the batch, or
 * while being observed.
 *
 * During this time it will recompute only when one of its direct dependencies changed,
 * but only when it is being accessed with `ComputedValue.get()`.
 *
 * Implementation description:
 * 1. First time it's being accessed it will compute and remember result
 *    give back remembered result until 2. happens
 * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.
 * 3. When it's being accessed, recompute if any shallow dependency changed.
 *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.
 *    go to step 2. either way
 *
 * If at any point it's outside batch and it isn't observed: reset everything and go to 1.
 */


_Symbol$toPrimitive$1 = Symbol.toPrimitive;

var ComputedValue = /*#__PURE__*/function () {
  // nodes we are looking at. Our value depends on these nodes
  // during tracking it's an array with new observed observers
  // to check for cycles
  // N.B: unminified as it is used by MST

  /**
   * Create a new computed value based on a function expression.
   *
   * The `name` property is for debug purposes only.
   *
   * The `equals` property specifies the comparer function to use to determine if a newly produced
   * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`
   * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.
   * Structural comparison can be convenient if you always produce a new aggregated object and
   * don't want to notify observers if it is structurally the same.
   * This is useful for working with vectors, mouse coordinates etc.
   */
  function ComputedValue(options) {
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.observing_ = [];
    this.newObserving_ = null;
    this.isBeingObserved_ = false;
    this.isPendingUnobservation_ = false;
    this.observers_ = new Set();
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.lastAccessedBy_ = 0;
    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    this.unboundDepsCount_ = 0;
    this.value_ = new CaughtException(null);
    this.name_ = void 0;
    this.triggeredBy_ = void 0;
    this.isComputing_ = false;
    this.isRunningSetter_ = false;
    this.derivation = void 0;
    this.setter_ = void 0;
    this.isTracing_ = TraceMode.NONE;
    this.scope_ = void 0;
    this.equals_ = void 0;
    this.requiresReaction_ = void 0;
    this.keepAlive_ = void 0;
    this.onBOL = void 0;
    this.onBUOL = void 0;
    if (!options.get) die(31);
    this.derivation = options.get;
    this.name_ = options.name || (NODE_ENV !== "production" ? "ComputedValue@" + getNextId() : "ComputedValue");

    if (options.set) {
      this.setter_ = createAction(NODE_ENV !== "production" ? this.name_ + "-setter" : "ComputedValue-setter", options.set);
    }

    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer["default"]);
    this.scope_ = options.context;
    this.requiresReaction_ = !!options.requiresReaction;
    this.keepAlive_ = !!options.keepAlive;
  }

  var _proto = ComputedValue.prototype;

  _proto.onBecomeStale_ = function onBecomeStale_() {
    propagateMaybeChanged(this);
  };

  _proto.onBO = function onBO() {
    if (this.onBOL) {
      this.onBOL.forEach(function (listener) {
        return listener();
      });
    }
  };

  _proto.onBUO = function onBUO() {
    if (this.onBUOL) {
      this.onBUOL.forEach(function (listener) {
        return listener();
      });
    }
  }
  /**
   * Returns the current value of this computed value.
   * Will evaluate its computation first if needed.
   */
  ;

  _proto.get = function get() {
    if (this.isComputing_) die(32, this.name_, this.derivation);

    if (globalState.inBatch === 0 && // !globalState.trackingDerivatpion &&
    this.observers_.size === 0 && !this.keepAlive_) {
      if (shouldCompute(this)) {
        this.warnAboutUntrackedRead_();
        startBatch(); // See perf test 'computed memoization'

        this.value_ = this.computeValue_(false);
        endBatch();
      }
    } else {
      reportObserved(this);

      if (shouldCompute(this)) {
        var prevTrackingContext = globalState.trackingContext;
        if (this.keepAlive_ && !prevTrackingContext) globalState.trackingContext = this;
        if (this.trackAndCompute()) propagateChangeConfirmed(this);
        globalState.trackingContext = prevTrackingContext;
      }
    }

    var result = this.value_;
    if (isCaughtException(result)) throw result.cause;
    return result;
  };

  _proto.set = function set(value) {
    if (this.setter_) {
      if (this.isRunningSetter_) die(33, this.name_);
      this.isRunningSetter_ = true;

      try {
        this.setter_.call(this.scope_, value);
      } finally {
        this.isRunningSetter_ = false;
      }
    } else die(34, this.name_);
  };

  _proto.trackAndCompute = function trackAndCompute() {
    // N.B: unminified as it is used by MST
    var oldValue = this.value_;
    var wasSuspended =
    /* see #1208 */
    this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;
    var newValue = this.computeValue_(true);

    if (NODE_ENV !== "production" && isSpyEnabled()) {
      spyReport({
        observableKind: "computed",
        debugObjectName: this.name_,
        object: this.scope_,
        type: "update",
        oldValue: this.value_,
        newValue: newValue
      });
    }

    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);

    if (changed) {
      this.value_ = newValue;
    }

    return changed;
  };

  _proto.computeValue_ = function computeValue_(track) {
    this.isComputing_ = true; // don't allow state changes during computation

    var prev = allowStateChangesStart(false);
    var res;

    if (track) {
      res = trackDerivedFunction(this, this.derivation, this.scope_);
    } else {
      if (globalState.disableErrorBoundaries === true) {
        res = this.derivation.call(this.scope_);
      } else {
        try {
          res = this.derivation.call(this.scope_);
        } catch (e) {
          res = new CaughtException(e);
        }
      }
    }

    allowStateChangesEnd(prev);
    this.isComputing_ = false;
    return res;
  };

  _proto.suspend_ = function suspend_() {
    if (!this.keepAlive_) {
      clearObserving(this);
      this.value_ = undefined; // don't hold on to computed value!
    }
  };

  _proto.observe_ = function observe_(listener, fireImmediately) {
    var _this = this;

    var firstTime = true;
    var prevValue = undefined;
    return autorun(function () {
      // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place
      var newValue = _this.get();

      if (!firstTime || fireImmediately) {
        var prevU = untrackedStart();
        listener({
          observableKind: "computed",
          debugObjectName: _this.name_,
          type: UPDATE,
          object: _this,
          newValue: newValue,
          oldValue: prevValue
        });
        untrackedEnd(prevU);
      }

      firstTime = false;
      prevValue = newValue;
    });
  };

  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {
    if (!(NODE_ENV !== "production")) return;

    if (this.requiresReaction_ === true) {
      die("[mobx] Computed value " + this.name_ + " is read outside a reactive context");
    }

    if (this.isTracing_ !== TraceMode.NONE) {
      console.log("[mobx.trace] '" + this.name_ + "' is being read outside a reactive context. Doing a full recompute");
    }

    if (globalState.computedRequiresReaction) {
      console.warn("[mobx] Computed value " + this.name_ + " is being read outside a reactive context. Doing a full recompute");
    }
  };

  _proto.toString = function toString() {
    return this.name_ + "[" + this.derivation.toString() + "]";
  };

  _proto.valueOf = function valueOf() {
    return toPrimitive(this.get());
  };

  _proto[_Symbol$toPrimitive$1] = function () {
    return this.valueOf();
  };

  return ComputedValue;
}();

var isComputedValue = /*#__PURE__*/createInstanceofPredicate("ComputedValue", ComputedValue);
var IDerivationState_;

(function (IDerivationState_) {
  // before being run or (outside batch and not being observed)
  // at this point derivation is not holding any data about dependency tree
  IDerivationState_[IDerivationState_["NOT_TRACKING_"] = -1] = "NOT_TRACKING_"; // no shallow dependency changed since last computation
  // won't recalculate derivation
  // this is what makes mobx fast

  IDerivationState_[IDerivationState_["UP_TO_DATE_"] = 0] = "UP_TO_DATE_"; // some deep dependency changed, but don't know if shallow dependency changed
  // will require to check first if UP_TO_DATE or POSSIBLY_STALE
  // currently only ComputedValue will propagate POSSIBLY_STALE
  //
  // having this state is second big optimization:
  // don't have to recompute on every dependency change, but only when it's needed

  IDerivationState_[IDerivationState_["POSSIBLY_STALE_"] = 1] = "POSSIBLY_STALE_"; // A shallow dependency has changed since last computation and the derivation
  // will need to recompute when it's needed next.

  IDerivationState_[IDerivationState_["STALE_"] = 2] = "STALE_";
})(IDerivationState_ || (IDerivationState_ = {}));

var TraceMode;

(function (TraceMode) {
  TraceMode[TraceMode["NONE"] = 0] = "NONE";
  TraceMode[TraceMode["LOG"] = 1] = "LOG";
  TraceMode[TraceMode["BREAK"] = 2] = "BREAK";
})(TraceMode || (TraceMode = {}));

var CaughtException = function CaughtException(cause) {
  this.cause = void 0;
  this.cause = cause; // Empty
};

function isCaughtException(e) {
  return e instanceof CaughtException;
}
/**
 * Finds out whether any dependency of the derivation has actually changed.
 * If dependenciesState is 1 then it will recalculate dependencies,
 * if any dependency changed it will propagate it by changing dependenciesState to 2.
 *
 * By iterating over the dependencies in the same order that they were reported and
 * stopping on the first change, all the recalculations are only called for ComputedValues
 * that will be tracked by derivation. That is because we assume that if the first x
 * dependencies of the derivation doesn't change then the derivation should run the same way
 * up until accessing x-th dependency.
 */


function shouldCompute(derivation) {
  switch (derivation.dependenciesState_) {
    case IDerivationState_.UP_TO_DATE_:
      return false;

    case IDerivationState_.NOT_TRACKING_:
    case IDerivationState_.STALE_:
      return true;

    case IDerivationState_.POSSIBLY_STALE_:
      {
        // state propagation can occur outside of action/reactive context #2195
        var prevAllowStateReads = allowStateReadsStart(true);
        var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.

        var obs = derivation.observing_,
            l = obs.length;

        for (var i = 0; i < l; i++) {
          var obj = obs[i];

          if (isComputedValue(obj)) {
            if (globalState.disableErrorBoundaries) {
              obj.get();
            } else {
              try {
                obj.get();
              } catch (e) {
                // we are not interested in the value *or* exception at this moment, but if there is one, notify all
                untrackedEnd(prevUntracked);
                allowStateReadsEnd(prevAllowStateReads);
                return true;
              }
            } // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.
            // and `derivation` is an observer of `obj`
            // invariantShouldCompute(derivation)


            if (derivation.dependenciesState_ === IDerivationState_.STALE_) {
              untrackedEnd(prevUntracked);
              allowStateReadsEnd(prevAllowStateReads);
              return true;
            }
          }
        }

        changeDependenciesStateTo0(derivation);
        untrackedEnd(prevUntracked);
        allowStateReadsEnd(prevAllowStateReads);
        return false;
      }
  }
}

function isComputingDerivation() {
  return globalState.trackingDerivation !== null; // filter out actions inside computations
}

function checkIfStateModificationsAreAllowed(atom) {
  if (!(NODE_ENV !== "production")) {
    return;
  }

  var hasObservers = atom.observers_.size > 0; // Should not be possible to change observed state outside strict mode, except during initialization, see #563

  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "always")) console.warn("[MobX] " + (globalState.enforceActions ? "Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: " : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: ") + atom.name_);
}

function checkIfStateReadsAreAllowed(observable) {
  if (NODE_ENV !== "production" && !globalState.allowStateReads && globalState.observableRequiresReaction) {
    console.warn("[mobx] Observable " + observable.name_ + " being read outside a reactive context");
  }
}
/**
 * Executes the provided function `f` and tracks which observables are being accessed.
 * The tracking information is stored on the `derivation` object and the derivation is registered
 * as observer of any of the accessed observables.
 */


function trackDerivedFunction(derivation, f, context) {
  var prevAllowStateReads = allowStateReadsStart(true); // pre allocate array allocation + room for variation in deps
  // array will be trimmed by bindDependencies

  changeDependenciesStateTo0(derivation);
  derivation.newObserving_ = new Array(derivation.observing_.length + 100);
  derivation.unboundDepsCount_ = 0;
  derivation.runId_ = ++globalState.runId;
  var prevTracking = globalState.trackingDerivation;
  globalState.trackingDerivation = derivation;
  globalState.inBatch++;
  var result;

  if (globalState.disableErrorBoundaries === true) {
    result = f.call(context);
  } else {
    try {
      result = f.call(context);
    } catch (e) {
      result = new CaughtException(e);
    }
  }

  globalState.inBatch--;
  globalState.trackingDerivation = prevTracking;
  bindDependencies(derivation);
  warnAboutDerivationWithoutDependencies(derivation);
  allowStateReadsEnd(prevAllowStateReads);
  return result;
}

function warnAboutDerivationWithoutDependencies(derivation) {
  if (!(NODE_ENV !== "production")) return;
  if (derivation.observing_.length !== 0) return;

  if (globalState.reactionRequiresObservable || derivation.requiresObservable_) {
    console.warn("[mobx] Derivation " + derivation.name_ + " is created/updated without reading any observable value");
  }
}
/**
 * diffs newObserving with observing.
 * update observing to be newObserving with unique observables
 * notify observers that become observed/unobserved
 */


function bindDependencies(derivation) {
  // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, "INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1");
  var prevObserving = derivation.observing_;
  var observing = derivation.observing_ = derivation.newObserving_;
  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_; // Go through all new observables and check diffValue: (this list can contain duplicates):
  //   0: first occurrence, change to 1 and keep it
  //   1: extra occurrence, drop it

  var i0 = 0,
      l = derivation.unboundDepsCount_;

  for (var i = 0; i < l; i++) {
    var dep = observing[i];

    if (dep.diffValue_ === 0) {
      dep.diffValue_ = 1;
      if (i0 !== i) observing[i0] = dep;
      i0++;
    } // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,
    // not hitting the condition


    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {
      lowestNewObservingDerivationState = dep.dependenciesState_;
    }
  }

  observing.length = i0;
  derivation.newObserving_ = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)
  // Go through all old observables and check diffValue: (it is unique after last bindDependencies)
  //   0: it's not in new observables, unobserve it
  //   1: it keeps being observed, don't want to notify it. change to 0

  l = prevObserving.length;

  while (l--) {
    var _dep = prevObserving[l];

    if (_dep.diffValue_ === 0) {
      removeObserver(_dep, derivation);
    }

    _dep.diffValue_ = 0;
  } // Go through all new observables and check diffValue: (now it should be unique)
  //   0: it was set to 0 in last loop. don't need to do anything.
  //   1: it wasn't observed, let's observe it. set back to 0


  while (i0--) {
    var _dep2 = observing[i0];

    if (_dep2.diffValue_ === 1) {
      _dep2.diffValue_ = 0;
      addObserver(_dep2, derivation);
    }
  } // Some new observed derivations may become stale during this derivation computation
  // so they have had no chance to propagate staleness (#916)


  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {
    derivation.dependenciesState_ = lowestNewObservingDerivationState;
    derivation.onBecomeStale_();
  }
}

function clearObserving(derivation) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR clearObserving should be called only inside batch");
  var obs = derivation.observing_;
  derivation.observing_ = [];
  var i = obs.length;

  while (i--) {
    removeObserver(obs[i], derivation);
  }

  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
}

function untracked(action) {
  var prev = untrackedStart();

  try {
    return action();
  } finally {
    untrackedEnd(prev);
  }
}

function untrackedStart() {
  var prev = globalState.trackingDerivation;
  globalState.trackingDerivation = null;
  return prev;
}

function untrackedEnd(prev) {
  globalState.trackingDerivation = prev;
}

function allowStateReadsStart(allowStateReads) {
  var prev = globalState.allowStateReads;
  globalState.allowStateReads = allowStateReads;
  return prev;
}

function allowStateReadsEnd(prev) {
  globalState.allowStateReads = prev;
}
/**
 * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0
 *
 */


function changeDependenciesStateTo0(derivation) {
  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) return;
  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;
  var obs = derivation.observing_;
  var i = obs.length;

  while (i--) {
    obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
  }
}
/**
 * These values will persist if global state is reset
 */


var persistentKeys = ["mobxGuid", "spyListeners", "enforceActions", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "allowStateReads", "disableErrorBoundaries", "runId", "UNCHANGED", "useProxies"];

var MobXGlobals = function MobXGlobals() {
  this.version = 6;
  this.UNCHANGED = {};
  this.trackingDerivation = null;
  this.trackingContext = null;
  this.runId = 0;
  this.mobxGuid = 0;
  this.inBatch = 0;
  this.pendingUnobservations = [];
  this.pendingReactions = [];
  this.isRunningReactions = false;
  this.allowStateChanges = false;
  this.allowStateReads = true;
  this.enforceActions = true;
  this.spyListeners = [];
  this.globalReactionErrorHandlers = [];
  this.computedRequiresReaction = false;
  this.reactionRequiresObservable = false;
  this.observableRequiresReaction = false;
  this.disableErrorBoundaries = false;
  this.suppressReactionErrors = false;
  this.useProxies = true;
  this.verifyProxies = false;
  this.safeDescriptors = true;
};

var canMergeGlobalState = true;
var isolateCalled = false;

var globalState = /*#__PURE__*/function () {
  var global = /*#__PURE__*/getGlobal();
  if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) canMergeGlobalState = false;
  if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) canMergeGlobalState = false;

  if (!canMergeGlobalState) {
    setTimeout(function () {
      if (!isolateCalled) {
        die(35);
      }
    }, 1);
    return new MobXGlobals();
  } else if (global.__mobxGlobals) {
    global.__mobxInstanceCount += 1;
    if (!global.__mobxGlobals.UNCHANGED) global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible

    return global.__mobxGlobals;
  } else {
    global.__mobxInstanceCount = 1;
    return global.__mobxGlobals = /*#__PURE__*/new MobXGlobals();
  }
}();

function isolateGlobalState() {
  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions) die(36);
  isolateCalled = true;

  if (canMergeGlobalState) {
    var global = getGlobal();
    if (--global.__mobxInstanceCount === 0) global.__mobxGlobals = undefined;
    globalState = new MobXGlobals();
  }
}

function getGlobalState() {
  return globalState;
}
/**
 * For testing purposes only; this will break the internal state of existing observables,
 * but can be used to get back at a stable state after throwing errors
 */


function resetGlobalState() {
  var defaultGlobals = new MobXGlobals();

  for (var key in defaultGlobals) {
    if (persistentKeys.indexOf(key) === -1) globalState[key] = defaultGlobals[key];
  }

  globalState.allowStateChanges = !globalState.enforceActions;
}

function hasObservers(observable) {
  return observable.observers_ && observable.observers_.size > 0;
}

function getObservers(observable) {
  return observable.observers_;
} // function invariantObservers(observable: IObservable) {
//     const list = observable.observers
//     const map = observable.observersIndexes
//     const l = list.length
//     for (let i = 0; i < l; i++) {
//         const id = list[i].__mapid
//         if (i) {
//             invariant(map[id] === i, "INTERNAL ERROR maps derivation.__mapid to index in list") // for performance
//         } else {
//             invariant(!(id in map), "INTERNAL ERROR observer on index 0 shouldn't be held in map.") // for performance
//         }
//     }
//     invariant(
//         list.length === 0 || Object.keys(map).length === list.length - 1,
//         "INTERNAL ERROR there is no junk in map"
//     )
// }


function addObserver(observable, node) {
  // invariant(node.dependenciesState !== -1, "INTERNAL ERROR, can add only dependenciesState !== -1");
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR add already added node");
  // invariantObservers(observable);
  observable.observers_.add(node);
  if (observable.lowestObserverState_ > node.dependenciesState_) observable.lowestObserverState_ = node.dependenciesState_; // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR didn't add node");
}

function removeObserver(observable, node) {
  // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
  // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR remove already removed node");
  // invariantObservers(observable);
  observable.observers_["delete"](node);

  if (observable.observers_.size === 0) {
    // deleting last observer
    queueForUnobservation(observable);
  } // invariantObservers(observable);
  // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR remove already removed node2");

}

function queueForUnobservation(observable) {
  if (observable.isPendingUnobservation_ === false) {
    // invariant(observable._observers.length === 0, "INTERNAL ERROR, should only queue for unobservation unobserved observables");
    observable.isPendingUnobservation_ = true;
    globalState.pendingUnobservations.push(observable);
  }
}
/**
 * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.
 * During a batch `onBecomeUnobserved` will be called at most once per observable.
 * Avoids unnecessary recalculations.
 */


function startBatch() {
  globalState.inBatch++;
}

function endBatch() {
  if (--globalState.inBatch === 0) {
    runReactions(); // the batch is actually about to finish, all unobserving should happen here.

    var list = globalState.pendingUnobservations;

    for (var i = 0; i < list.length; i++) {
      var observable = list[i];
      observable.isPendingUnobservation_ = false;

      if (observable.observers_.size === 0) {
        if (observable.isBeingObserved_) {
          // if this observable had reactive observers, trigger the hooks
          observable.isBeingObserved_ = false;
          observable.onBUO();
        }

        if (observable instanceof ComputedValue) {
          // computed values are automatically teared down when the last observer leaves
          // this window.process happens recursively, this computed might be the last observabe of another, etc..
          observable.suspend_();
        }
      }
    }

    globalState.pendingUnobservations = [];
  }
}

function reportObserved(observable) {
  checkIfStateReadsAreAllowed(observable);
  var derivation = globalState.trackingDerivation;

  if (derivation !== null) {
    /**
     * Simple optimization, give each derivation run an unique id (runId)
     * Check if last time this observable was accessed the same runId is used
     * if this is the case, the relation is already known
     */
    if (derivation.runId_ !== observable.lastAccessedBy_) {
      observable.lastAccessedBy_ = derivation.runId_; // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...

      derivation.newObserving_[derivation.unboundDepsCount_++] = observable;

      if (!observable.isBeingObserved_ && globalState.trackingContext) {
        observable.isBeingObserved_ = true;
        observable.onBO();
      }
    }

    return true;
  } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {
    queueForUnobservation(observable);
  }

  return false;
} // function invariantLOS(observable: IObservable, msg: string) {
//     // it's expensive so better not run it in produciton. but temporarily helpful for testing
//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)
//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`
//     throw new Error(
//         "lowestObserverState is wrong for " +
//             msg +
//             " because " +
//             min +
//             " < " +
//             observable.lowestObserverState
//     )
// }

/**
 * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly
 * It will propagate changes to observers from previous run
 * It's hard or maybe impossible (with reasonable perf) to get it right with current approach
 * Hopefully self reruning autoruns aren't a feature people should depend on
 * Also most basic use cases should be ok
 */
// Called by Atom when its value changes


function propagateChanged(observable) {
  // invariantLOS(observable, "changed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) return;
  observable.lowestObserverState_ = IDerivationState_.STALE_; // Ideally we use for..of here, but the downcompiled version is really slow...

  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      if (NODE_ENV !== "production" && d.isTracing_ !== TraceMode.NONE) {
        logTraceInfo(d, observable);
      }

      d.onBecomeStale_();
    }

    d.dependenciesState_ = IDerivationState_.STALE_;
  }); // invariantLOS(observable, "changed end");
} // Called by ComputedValue when it recalculate and its value changed


function propagateChangeConfirmed(observable) {
  // invariantLOS(observable, "confirmed start");
  if (observable.lowestObserverState_ === IDerivationState_.STALE_) return;
  observable.lowestObserverState_ = IDerivationState_.STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {
      d.dependenciesState_ = IDerivationState_.STALE_;

      if (NODE_ENV !== "production" && d.isTracing_ !== TraceMode.NONE) {
        logTraceInfo(d, observable);
      }
    } else if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.
    ) {
      observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;
    }
  }); // invariantLOS(observable, "confirmed end");
} // Used by computed when its dependency changed, but we don't wan't to immediately recompute.


function propagateMaybeChanged(observable) {
  // invariantLOS(observable, "maybe start");
  if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) return;
  observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;
  observable.observers_.forEach(function (d) {
    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {
      d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;
      d.onBecomeStale_();
    }
  }); // invariantLOS(observable, "maybe end");
}

function logTraceInfo(derivation, observable) {
  console.log("[mobx.trace] '" + derivation.name_ + "' is invalidated due to a change in: '" + observable.name_ + "'");

  if (derivation.isTracing_ === TraceMode.BREAK) {
    var lines = [];
    printDepTree(getDependencyTree(derivation), lines, 1); // prettier-ignore

    new Function("debugger;\n/*\nTracing '" + derivation.name_ + "'\n\nYou are entering this break point because derivation '" + derivation.name_ + "' is being traced and '" + observable.name_ + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\//g, "/") : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
  }
}

function printDepTree(tree, lines, depth) {
  if (lines.length >= 1000) {
    lines.push("(and many more)");
    return;
  }

  lines.push("" + new Array(depth).join("\t") + tree.name); // MWE: not the fastest, but the easiest way :)

  if (tree.dependencies) tree.dependencies.forEach(function (child) {
    return printDepTree(child, lines, depth + 1);
  });
}

var Reaction = /*#__PURE__*/function () {
  // nodes we are looking at. Our value depends on these nodes
  function Reaction(name_, onInvalidate_, errorHandler_, requiresObservable_) {
    if (name_ === void 0) {
      name_ = NODE_ENV !== "production" ? "Reaction@" + getNextId() : "Reaction";
    }

    if (requiresObservable_ === void 0) {
      requiresObservable_ = false;
    }

    this.name_ = void 0;
    this.onInvalidate_ = void 0;
    this.errorHandler_ = void 0;
    this.requiresObservable_ = void 0;
    this.observing_ = [];
    this.newObserving_ = [];
    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;
    this.diffValue_ = 0;
    this.runId_ = 0;
    this.unboundDepsCount_ = 0;
    this.isDisposed_ = false;
    this.isScheduled_ = false;
    this.isTrackPending_ = false;
    this.isRunning_ = false;
    this.isTracing_ = TraceMode.NONE;
    this.name_ = name_;
    this.onInvalidate_ = onInvalidate_;
    this.errorHandler_ = errorHandler_;
    this.requiresObservable_ = requiresObservable_;
  }

  var _proto = Reaction.prototype;

  _proto.onBecomeStale_ = function onBecomeStale_() {
    this.schedule_();
  };

  _proto.schedule_ = function schedule_() {
    if (!this.isScheduled_) {
      this.isScheduled_ = true;
      globalState.pendingReactions.push(this);
      runReactions();
    }
  };

  _proto.isScheduled = function isScheduled() {
    return this.isScheduled_;
  }
  /**
   * internal, use schedule() if you intend to kick off a reaction
   */
  ;

  _proto.runReaction_ = function runReaction_() {
    if (!this.isDisposed_) {
      startBatch();
      this.isScheduled_ = false;
      var prev = globalState.trackingContext;
      globalState.trackingContext = this;

      if (shouldCompute(this)) {
        this.isTrackPending_ = true;

        try {
          this.onInvalidate_();

          if (NODE_ENV !== "production" && this.isTrackPending_ && isSpyEnabled()) {
            // onInvalidate didn't trigger track right away..
            spyReport({
              name: this.name_,
              type: "scheduled-reaction"
            });
          }
        } catch (e) {
          this.reportExceptionInDerivation_(e);
        }
      }

      globalState.trackingContext = prev;
      endBatch();
    }
  };

  _proto.track = function track(fn) {
    if (this.isDisposed_) {
      return; // console.warn("Reaction already disposed") // Note: Not a warning / error in mobx 4 either
    }

    startBatch();
    var notify = isSpyEnabled();
    var startTime;

    if (NODE_ENV !== "production" && notify) {
      startTime = Date.now();
      spyReportStart({
        name: this.name_,
        type: "reaction"
      });
    }

    this.isRunning_ = true;
    var prevReaction = globalState.trackingContext; // reactions could create reactions...

    globalState.trackingContext = this;
    var result = trackDerivedFunction(this, fn, undefined);
    globalState.trackingContext = prevReaction;
    this.isRunning_ = false;
    this.isTrackPending_ = false;

    if (this.isDisposed_) {
      // disposed during last run. Clean up everything that was bound after the dispose call.
      clearObserving(this);
    }

    if (isCaughtException(result)) this.reportExceptionInDerivation_(result.cause);

    if (NODE_ENV !== "production" && notify) {
      spyReportEnd({
        time: Date.now() - startTime
      });
    }

    endBatch();
  };

  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {
    var _this = this;

    if (this.errorHandler_) {
      this.errorHandler_(error, this);
      return;
    }

    if (globalState.disableErrorBoundaries) throw error;
    var message = NODE_ENV !== "production" ? "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this + "'" : "[mobx] uncaught error in '" + this + "'";

    if (!globalState.suppressReactionErrors) {
      console.error(message, error);
      /** If debugging brought you here, please, read the above message :-). Tnx! */
    } else if (NODE_ENV !== "production") console.warn("[mobx] (error in reaction '" + this.name_ + "' suppressed, fix error of causing action below)"); // prettier-ignore


    if (NODE_ENV !== "production" && isSpyEnabled()) {
      spyReport({
        type: "error",
        name: this.name_,
        message: message,
        error: "" + error
      });
    }

    globalState.globalReactionErrorHandlers.forEach(function (f) {
      return f(error, _this);
    });
  };

  _proto.dispose = function dispose() {
    if (!this.isDisposed_) {
      this.isDisposed_ = true;

      if (!this.isRunning_) {
        // if disposed while running, clean up later. Maybe not optimal, but rare case
        startBatch();
        clearObserving(this);
        endBatch();
      }
    }
  };

  _proto.getDisposer_ = function getDisposer_() {
    var r = this.dispose.bind(this);
    r[$mobx] = this;
    return r;
  };

  _proto.toString = function toString() {
    return "Reaction[" + this.name_ + "]";
  };

  _proto.trace = function trace$1(enterBreakPoint) {
    if (enterBreakPoint === void 0) {
      enterBreakPoint = false;
    }

    trace(this, enterBreakPoint);
  };

  return Reaction;
}();

exports.Reaction = Reaction;

function onReactionError(handler) {
  globalState.globalReactionErrorHandlers.push(handler);
  return function () {
    var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
    if (idx >= 0) globalState.globalReactionErrorHandlers.splice(idx, 1);
  };
}
/**
 * Magic number alert!
 * Defines within how many times a reaction is allowed to re-trigger itself
 * until it is assumed that this is gonna be a never ending loop...
 */


var MAX_REACTION_ITERATIONS = 100;

var reactionScheduler = function reactionScheduler(f) {
  return f();
};

function runReactions() {
  // Trampolining, if runReactions are already running, new reactions will be picked up
  if (globalState.inBatch > 0 || globalState.isRunningReactions) return;
  reactionScheduler(runReactionsHelper);
}

function runReactionsHelper() {
  globalState.isRunningReactions = true;
  var allReactions = globalState.pendingReactions;
  var iterations = 0; // While running reactions, new reactions might be triggered.
  // Hence we work with two variables and check whether
  // we converge to no remaining reactions after a while.

  while (allReactions.length > 0) {
    if (++iterations === MAX_REACTION_ITERATIONS) {
      console.error(NODE_ENV !== "production" ? "Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." + (" Probably there is a cycle in the reactive function: " + allReactions[0]) : "[mobx] cycle in reaction: " + allReactions[0]);
      allReactions.splice(0); // clear reactions
    }

    var remainingReactions = allReactions.splice(0);

    for (var i = 0, l = remainingReactions.length; i < l; i++) {
      remainingReactions[i].runReaction_();
    }
  }

  globalState.isRunningReactions = false;
}

var isReaction = /*#__PURE__*/createInstanceofPredicate("Reaction", Reaction);

function setReactionScheduler(fn) {
  var baseScheduler = reactionScheduler;

  reactionScheduler = function reactionScheduler(f) {
    return fn(function () {
      return baseScheduler(f);
    });
  };
}

function isSpyEnabled() {
  return NODE_ENV !== "production" && !!globalState.spyListeners.length;
}

function spyReport(event) {
  if (!(NODE_ENV !== "production")) return; // dead code elimination can do the rest

  if (!globalState.spyListeners.length) return;
  var listeners = globalState.spyListeners;

  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](event);
  }
}

function spyReportStart(event) {
  if (!(NODE_ENV !== "production")) return;

  var change = _extends({}, event, {
    spyReportStart: true
  });

  spyReport(change);
}

var END_EVENT = {
  type: "report-end",
  spyReportEnd: true
};

function spyReportEnd(change) {
  if (!(NODE_ENV !== "production")) return;
  if (change) spyReport(_extends({}, change, {
    type: "report-end",
    spyReportEnd: true
  }));else spyReport(END_EVENT);
}

function spy(listener) {
  if (!(NODE_ENV !== "production")) {
    console.warn("[mobx.spy] Is a no-op in production builds");
    return function () {};
  } else {
    globalState.spyListeners.push(listener);
    return once(function () {
      globalState.spyListeners = globalState.spyListeners.filter(function (l) {
        return l !== listener;
      });
    });
  }
}

var ACTION = "action";
var ACTION_BOUND = "action.bound";
var AUTOACTION = "autoAction";
var AUTOACTION_BOUND = "autoAction.bound";
var DEFAULT_ACTION_NAME = "<unnamed action>";
var actionAnnotation = /*#__PURE__*/createActionAnnotation(ACTION);
var actionBoundAnnotation = /*#__PURE__*/createActionAnnotation(ACTION_BOUND, {
  bound: true
});
var autoActionAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION, {
  autoAction: true
});
var autoActionBoundAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION_BOUND, {
  autoAction: true,
  bound: true
});

function createActionFactory(autoAction) {
  var res = function action(arg1, arg2) {
    // action(fn() {})
    if (isFunction(arg1)) return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction); // action("name", fn() {})

    if (isFunction(arg2)) return createAction(arg1, arg2, autoAction); // @action

    if (isStringish(arg2)) {
      return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation);
    } // action("name") & @action("name")


    if (isStringish(arg1)) {
      return createDecoratorAnnotation(createActionAnnotation(autoAction ? AUTOACTION : ACTION, {
        name: arg1,
        autoAction: autoAction
      }));
    }

    if (NODE_ENV !== "production") die("Invalid arguments for `action`");
  };

  return res;
}

var action = /*#__PURE__*/createActionFactory(false);
exports.action = action;
Object.assign(action, actionAnnotation);
var autoAction = /*#__PURE__*/createActionFactory(true);
exports._autoAction = autoAction;
Object.assign(autoAction, autoActionAnnotation);
action.bound = /*#__PURE__*/createDecoratorAnnotation(actionBoundAnnotation);
autoAction.bound = /*#__PURE__*/createDecoratorAnnotation(autoActionBoundAnnotation);

function runInAction(fn) {
  return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined);
}

function isAction(thing) {
  return isFunction(thing) && thing.isMobxAction === true;
}
/**
 * Creates a named reactive view and keeps it alive, so that the view is always
 * updated if one of the dependencies changes, even when the view is not further used by something else.
 * @param view The reactive view
 * @returns disposer function, which can be used to stop the view from being updated in the future.
 */


function autorun(view, opts) {
  var _opts$name, _opts;

  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }

  if (NODE_ENV !== "production") {
    if (!isFunction(view)) die("Autorun expects a function as first argument");
    if (isAction(view)) die("Autorun does not accept actions since actions are untrackable");
  }

  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name : NODE_ENV !== "production" ? view.name || "Autorun@" + getNextId() : "Autorun";
  var runSync = !opts.scheduler && !opts.delay;
  var reaction;

  if (runSync) {
    // normal autorun
    reaction = new Reaction(name, function () {
      this.track(reactionRunner);
    }, opts.onError, opts.requiresObservable);
  } else {
    var scheduler = createSchedulerFromOptions(opts); // debounced autorun

    var isScheduled = false;
    reaction = new Reaction(name, function () {
      if (!isScheduled) {
        isScheduled = true;
        scheduler(function () {
          isScheduled = false;
          if (!reaction.isDisposed_) reaction.track(reactionRunner);
        });
      }
    }, opts.onError, opts.requiresObservable);
  }

  function reactionRunner() {
    view(reaction);
  }

  reaction.schedule_();
  return reaction.getDisposer_();
}

var run = function run(f) {
  return f();
};

function createSchedulerFromOptions(opts) {
  return opts.scheduler ? opts.scheduler : opts.delay ? function (f) {
    return setTimeout(f, opts.delay);
  } : run;
}

function reaction(expression, effect, opts) {
  var _opts$name2;

  if (opts === void 0) {
    opts = EMPTY_OBJECT;
  }

  if (NODE_ENV !== "production") {
    if (!isFunction(expression) || !isFunction(effect)) die("First and second argument to reaction should be functions");
    if (!isPlainObject(opts)) die("Third argument of reactions should be an object");
  }

  var name = (_opts$name2 = opts.name) != null ? _opts$name2 : NODE_ENV !== "production" ? "Reaction@" + getNextId() : "Reaction";
  var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);
  var runSync = !opts.scheduler && !opts.delay;
  var scheduler = createSchedulerFromOptions(opts);
  var firstTime = true;
  var isScheduled = false;
  var value;
  var oldValue = undefined; // only an issue with fireImmediately

  var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer["default"];
  var r = new Reaction(name, function () {
    if (firstTime || runSync) {
      reactionRunner();
    } else if (!isScheduled) {
      isScheduled = true;
      scheduler(reactionRunner);
    }
  }, opts.onError, opts.requiresObservable);

  function reactionRunner() {
    isScheduled = false;
    if (r.isDisposed_) return;
    var changed = false;
    r.track(function () {
      var nextValue = allowStateChanges(false, function () {
        return expression(r);
      });
      changed = firstTime || !equals(value, nextValue);
      oldValue = value;
      value = nextValue;
    });
    if (firstTime && opts.fireImmediately) effectAction(value, oldValue, r);else if (!firstTime && changed) effectAction(value, oldValue, r);
    firstTime = false;
  }

  r.schedule_();
  return r.getDisposer_();
}

function wrapErrorHandler(errorHandler, baseFn) {
  return function () {
    try {
      return baseFn.apply(this, arguments);
    } catch (e) {
      errorHandler.call(this, e);
    }
  };
}

var ON_BECOME_OBSERVED = "onBO";
var ON_BECOME_UNOBSERVED = "onBUO";

function onBecomeObserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);
}

function onBecomeUnobserved(thing, arg2, arg3) {
  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);
}

function interceptHook(hook, thing, arg2, arg3) {
  var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
  var cb = isFunction(arg3) ? arg3 : arg2;
  var listenersKey = hook + "L";

  if (atom[listenersKey]) {
    atom[listenersKey].add(cb);
  } else {
    atom[listenersKey] = new Set([cb]);
  }

  return function () {
    var hookListeners = atom[listenersKey];

    if (hookListeners) {
      hookListeners["delete"](cb);

      if (hookListeners.size === 0) {
        delete atom[listenersKey];
      }
    }
  };
}

var NEVER = "never";
var ALWAYS = "always";
var OBSERVED = "observed"; // const IF_AVAILABLE = "ifavailable"

function configure(options) {
  if (options.isolateGlobalState === true) {
    isolateGlobalState();
  }

  var useProxies = options.useProxies,
      enforceActions = options.enforceActions;

  if (useProxies !== undefined) {
    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== "undefined";
  }

  if (useProxies === "ifavailable") globalState.verifyProxies = true;

  if (enforceActions !== undefined) {
    var ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;
    globalState.enforceActions = ea;
    globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true;
  }

  ["computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "disableErrorBoundaries", "safeDescriptors"].forEach(function (key) {
    if (key in options) globalState[key] = !!options[key];
  });
  globalState.allowStateReads = !globalState.observableRequiresReaction;

  if (NODE_ENV !== "production" && globalState.disableErrorBoundaries === true) {
    console.warn("WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.");
  }

  if (options.reactionScheduler) {
    setReactionScheduler(options.reactionScheduler);
  }
}

function extendObservable(target, properties, annotations, options) {
  if (NODE_ENV !== "production") {
    if (arguments.length > 4) die("'extendObservable' expected 2-4 arguments");
    if (typeof target !== "object") die("'extendObservable' expects an object as first argument");
    if (isObservableMap(target)) die("'extendObservable' should not be used on maps, use map.merge instead");
    if (!isPlainObject(properties)) die("'extendObservabe' only accepts plain objects as second argument");
    if (isObservable(properties) || isObservable(annotations)) die("Extending an object with another observable (object) is not supported");
  } // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)


  var descriptors = getOwnPropertyDescriptors(properties);
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();

  try {
    ownKeys(descriptors).forEach(function (key) {
      adm.extend_(key, descriptors[key], // must pass "undefined" for { key: undefined }
      !annotations ? true : key in annotations ? annotations[key] : true);
    });
  } finally {
    endBatch();
  }

  return target;
}

function getDependencyTree(thing, property) {
  return nodeToDependencyTree(getAtom(thing, property));
}

function nodeToDependencyTree(node) {
  var result = {
    name: node.name_
  };
  if (node.observing_ && node.observing_.length > 0) result.dependencies = unique(node.observing_).map(nodeToDependencyTree);
  return result;
}

function getObserverTree(thing, property) {
  return nodeToObserverTree(getAtom(thing, property));
}

function nodeToObserverTree(node) {
  var result = {
    name: node.name_
  };
  if (hasObservers(node)) result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);
  return result;
}

function unique(list) {
  return Array.from(new Set(list));
}

var generatorId = 0;

function FlowCancellationError() {
  this.message = "FLOW_CANCELLED";
}

FlowCancellationError.prototype = /*#__PURE__*/Object.create(Error.prototype);

function isFlowCancellationError(error) {
  return error instanceof FlowCancellationError;
}

var flowAnnotation = /*#__PURE__*/createFlowAnnotation("flow");
var flowBoundAnnotation = /*#__PURE__*/createFlowAnnotation("flow.bound", {
  bound: true
});
var flow = /*#__PURE__*/Object.assign(function flow(arg1, arg2) {
  // @flow
  if (isStringish(arg2)) {
    return storeAnnotation(arg1, arg2, flowAnnotation);
  } // flow(fn)


  if (NODE_ENV !== "production" && arguments.length !== 1) die("Flow expects single argument with generator function");
  var generator = arg1;
  var name = generator.name || "<unnamed flow>"; // Implementation based on https://github.com/tj/co/blob/master/index.js

  var res = function res() {
    var ctx = this;
    var args = arguments;
    var runId = ++generatorId;
    var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
    var rejector;
    var pendingPromise = undefined;
    var promise = new Promise(function (resolve, reject) {
      var stepId = 0;
      rejector = reject;

      function onFulfilled(res) {
        pendingPromise = undefined;
        var ret;

        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res);
        } catch (e) {
          return reject(e);
        }

        next(ret);
      }

      function onRejected(err) {
        pendingPromise = undefined;
        var ret;

        try {
          ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen["throw"]).call(gen, err);
        } catch (e) {
          return reject(e);
        }

        next(ret);
      }

      function next(ret) {
        if (isFunction(ret == null ? void 0 : ret.then)) {
          // an async iterator
          ret.then(next, reject);
          return;
        }

        if (ret.done) return resolve(ret.value);
        pendingPromise = Promise.resolve(ret.value);
        return pendingPromise.then(onFulfilled, onRejected);
      }

      onFulfilled(undefined); // kick off the window.process
    });
    promise.cancel = action(name + " - runid: " + runId + " - cancel", function () {
      try {
        if (pendingPromise) cancelPromise(pendingPromise); // Finally block can return (or yield) stuff..

        var _res = gen["return"](undefined); // eat anything that promise would do, it's cancelled!


        var yieldedPromise = Promise.resolve(_res.value);
        yieldedPromise.then(noop, noop);
        cancelPromise(yieldedPromise); // maybe it can be cancelled :)
        // reject our original promise

        rejector(new FlowCancellationError());
      } catch (e) {
        rejector(e); // there could be a throwing finally block
      }
    });
    return promise;
  };

  res.isMobXFlow = true;
  return res;
}, flowAnnotation);
exports.flow = flow;
flow.bound = /*#__PURE__*/createDecoratorAnnotation(flowBoundAnnotation);

function cancelPromise(promise) {
  if (isFunction(promise.cancel)) promise.cancel();
}

function flowResult(result) {
  return result; // just tricking TypeScript :)
}

function isFlow(fn) {
  return (fn == null ? void 0 : fn.isMobXFlow) === true;
}

function interceptReads(thing, propOrHandler, handler) {
  var target;

  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
    target = getAdministration(thing);
  } else if (isObservableObject(thing)) {
    if (NODE_ENV !== "production" && !isStringish(propOrHandler)) return die("InterceptReads can only be used with a specific property, not with an object in general");
    target = getAdministration(thing, propOrHandler);
  } else if (NODE_ENV !== "production") {
    return die("Expected observable map, object or array as first array");
  }

  if (NODE_ENV !== "production" && target.dehancer !== undefined) return die("An intercept reader was already established");
  target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
  return function () {
    target.dehancer = undefined;
  };
}

function intercept(thing, propOrHandler, handler) {
  if (isFunction(handler)) return interceptProperty(thing, propOrHandler, handler);else return interceptInterceptable(thing, propOrHandler);
}

function interceptInterceptable(thing, handler) {
  return getAdministration(thing).intercept_(handler);
}

function interceptProperty(thing, property, handler) {
  return getAdministration(thing, property).intercept_(handler);
}

function _isComputed(value, property) {
  if (property !== undefined) {
    if (isObservableObject(value) === false) return false;
    if (!value[$mobx].values_.has(property)) return false;
    var atom = getAtom(value, property);
    return isComputedValue(atom);
  }

  return isComputedValue(value);
}

function isComputed(value) {
  if (NODE_ENV !== "production" && arguments.length > 1) return die("isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property");
  return _isComputed(value);
}

function isComputedProp(value, propName) {
  if (NODE_ENV !== "production" && !isStringish(propName)) return die("isComputed expected a property name as second argument");
  return _isComputed(value, propName);
}

function _isObservable(value, property) {
  if (!value) return false;

  if (property !== undefined) {
    if (NODE_ENV !== "production" && (isObservableMap(value) || isObservableArray(value))) return die("isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.");

    if (isObservableObject(value)) {
      return value[$mobx].values_.has(property);
    }

    return false;
  } // For first check, see #701


  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);
}

function isObservable(value) {
  if (NODE_ENV !== "production" && arguments.length !== 1) die("isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property");
  return _isObservable(value);
}

function isObservableProp(value, propName) {
  if (NODE_ENV !== "production" && !isStringish(propName)) return die("expected a property name as second argument");
  return _isObservable(value, propName);
}

function keys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].keys_();
  }

  if (isObservableMap(obj) || isObservableSet(obj)) {
    return Array.from(obj.keys());
  }

  if (isObservableArray(obj)) {
    return obj.map(function (_, index) {
      return index;
    });
  }

  die(5);
}

function values(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return obj[key];
    });
  }

  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return obj.get(key);
    });
  }

  if (isObservableSet(obj)) {
    return Array.from(obj.values());
  }

  if (isObservableArray(obj)) {
    return obj.slice();
  }

  die(6);
}

function entries(obj) {
  if (isObservableObject(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj[key]];
    });
  }

  if (isObservableMap(obj)) {
    return keys(obj).map(function (key) {
      return [key, obj.get(key)];
    });
  }

  if (isObservableSet(obj)) {
    return Array.from(obj.entries());
  }

  if (isObservableArray(obj)) {
    return obj.map(function (key, index) {
      return [index, key];
    });
  }

  die(7);
}

function set(obj, key, value) {
  if (arguments.length === 2 && !isObservableSet(obj)) {
    startBatch();
    var _values = key;

    try {
      for (var _key in _values) {
        set(obj, _key, _values[_key]);
      }
    } finally {
      endBatch();
    }

    return;
  }

  if (isObservableObject(obj)) {
    obj[$mobx].set_(key, value);
  } else if (isObservableMap(obj)) {
    obj.set(key, value);
  } else if (isObservableSet(obj)) {
    obj.add(key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") key = parseInt(key, 10);
    if (key < 0) die("Invalid index: '" + key + "'");
    startBatch();
    if (key >= obj.length) obj.length = key + 1;
    obj[key] = value;
    endBatch();
  } else die(8);
}

function remove(obj, key) {
  if (isObservableObject(obj)) {
    obj[$mobx].delete_(key);
  } else if (isObservableMap(obj)) {
    obj["delete"](key);
  } else if (isObservableSet(obj)) {
    obj["delete"](key);
  } else if (isObservableArray(obj)) {
    if (typeof key !== "number") key = parseInt(key, 10);
    obj.splice(key, 1);
  } else {
    die(9);
  }
}

function has(obj, key) {
  if (isObservableObject(obj)) {
    return obj[$mobx].has_(key);
  } else if (isObservableMap(obj)) {
    return obj.has(key);
  } else if (isObservableSet(obj)) {
    return obj.has(key);
  } else if (isObservableArray(obj)) {
    return key >= 0 && key < obj.length;
  }

  die(10);
}

function get(obj, key) {
  if (!has(obj, key)) return undefined;

  if (isObservableObject(obj)) {
    return obj[$mobx].get_(key);
  } else if (isObservableMap(obj)) {
    return obj.get(key);
  } else if (isObservableArray(obj)) {
    return obj[key];
  }

  die(11);
}

function apiDefineProperty(obj, key, descriptor) {
  if (isObservableObject(obj)) {
    return obj[$mobx].defineProperty_(key, descriptor);
  }

  die(39);
}

function apiOwnKeys(obj) {
  if (isObservableObject(obj)) {
    return obj[$mobx].ownKeys_();
  }

  die(38);
}

function observe(thing, propOrCb, cbOrFire, fireImmediately) {
  if (isFunction(cbOrFire)) return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);else return observeObservable(thing, propOrCb, cbOrFire);
}

function observeObservable(thing, listener, fireImmediately) {
  return getAdministration(thing).observe_(listener, fireImmediately);
}

function observeObservableProperty(thing, property, listener, fireImmediately) {
  return getAdministration(thing, property).observe_(listener, fireImmediately);
}

function cache(map, key, value) {
  map.set(key, value);
  return value;
}

function toJSHelper(source, __alreadySeen) {
  if (source == null || typeof source !== "object" || source instanceof Date || !isObservable(source)) return source;
  if (isObservableValue(source) || isComputedValue(source)) return toJSHelper(source.get(), __alreadySeen);

  if (__alreadySeen.has(source)) {
    return __alreadySeen.get(source);
  }

  if (isObservableArray(source)) {
    var res = cache(__alreadySeen, source, new Array(source.length));
    source.forEach(function (value, idx) {
      res[idx] = toJSHelper(value, __alreadySeen);
    });
    return res;
  }

  if (isObservableSet(source)) {
    var _res = cache(__alreadySeen, source, new Set());

    source.forEach(function (value) {
      _res.add(toJSHelper(value, __alreadySeen));
    });
    return _res;
  }

  if (isObservableMap(source)) {
    var _res2 = cache(__alreadySeen, source, new Map());

    source.forEach(function (value, key) {
      _res2.set(key, toJSHelper(value, __alreadySeen));
    });
    return _res2;
  } else {
    // must be observable object
    var _res3 = cache(__alreadySeen, source, {});

    apiOwnKeys(source).forEach(function (key) {
      if (objectPrototype.propertyIsEnumerable.call(source, key)) {
        _res3[key] = toJSHelper(source[key], __alreadySeen);
      }
    });
    return _res3;
  }
}
/**
 * Basically, a deep clone, so that no reactive property will exist anymore.
 */


function toJS(source, options) {
  if (NODE_ENV !== "production" && options) die("toJS no longer supports options");
  return toJSHelper(source, new Map());
}

function trace() {
  if (!(NODE_ENV !== "production")) die("trace() is not available in production builds");
  var enterBreakPoint = false;

  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (typeof args[args.length - 1] === "boolean") enterBreakPoint = args.pop();
  var derivation = getAtomFromArgs(args);

  if (!derivation) {
    return die("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
  }

  if (derivation.isTracing_ === TraceMode.NONE) {
    console.log("[mobx.trace] '" + derivation.name_ + "' tracing enabled");
  }

  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
}

function getAtomFromArgs(args) {
  switch (args.length) {
    case 0:
      return globalState.trackingDerivation;

    case 1:
      return getAtom(args[0]);

    case 2:
      return getAtom(args[0], args[1]);
  }
}
/**
 * During a transaction no views are updated until the end of the transaction.
 * The transaction will be run synchronously nonetheless.
 *
 * @param action a function that updates some reactive state
 * @returns any value that was returned by the 'action' parameter.
 */


function transaction(action, thisArg) {
  if (thisArg === void 0) {
    thisArg = undefined;
  }

  startBatch();

  try {
    return action.apply(thisArg);
  } finally {
    endBatch();
  }
}

function when(predicate, arg1, arg2) {
  if (arguments.length === 1 || arg1 && typeof arg1 === "object") return whenPromise(predicate, arg1);
  return _when(predicate, arg1, arg2 || {});
}

function _when(predicate, effect, opts) {
  var timeoutHandle;

  if (typeof opts.timeout === "number") {
    timeoutHandle = setTimeout(function () {
      if (!disposer[$mobx].isDisposed_) {
        disposer();
        var error = new Error("WHEN_TIMEOUT");
        if (opts.onError) opts.onError(error);else throw error;
      }
    }, opts.timeout);
  }

  opts.name = NODE_ENV !== "production" ? opts.name || "When@" + getNextId() : "When";
  var effectAction = createAction(NODE_ENV !== "production" ? opts.name + "-effect" : "When-effect", effect); // eslint-disable-next-line

  var disposer = autorun(function (r) {
    // predicate should not change state
    var cond = allowStateChanges(false, predicate);

    if (cond) {
      r.dispose();
      if (timeoutHandle) clearTimeout(timeoutHandle);
      effectAction();
    }
  }, opts);
  return disposer;
}

function whenPromise(predicate, opts) {
  if (NODE_ENV !== "production" && opts && opts.onError) return die("the options 'onError' and 'promise' cannot be combined");
  var cancel;
  var res = new Promise(function (resolve, reject) {
    var disposer = _when(predicate, resolve, _extends({}, opts, {
      onError: reject
    }));

    cancel = function cancel() {
      disposer();
      reject("WHEN_CANCELLED");
    };
  });
  res.cancel = cancel;
  return res;
}

function getAdm(target) {
  return target[$mobx];
} // Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,
// and skip either the internal values map, or the base object with its property descriptors!


var objectProxyTraps = {
  has: function has(target, name) {
    if (NODE_ENV !== "production" && globalState.trackingDerivation) warnAboutProxyRequirement("detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.");
    return getAdm(target).has_(name);
  },
  get: function get(target, name) {
    return getAdm(target).get_(name);
  },
  set: function set(target, name, value) {
    var _getAdm$set_;

    if (!isStringish(name)) return false;

    if (NODE_ENV !== "production" && !getAdm(target).values_.has(name)) {
      warnAboutProxyRequirement("add a new observable property through direct assignment. Use 'set' from 'mobx' instead.");
    } // null (intercepted) -> true (success)


    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;
  },
  deleteProperty: function deleteProperty(target, name) {
    var _getAdm$delete_;

    if (NODE_ENV !== "production") {
      warnAboutProxyRequirement("delete properties from an observable object. Use 'remove' from 'mobx' instead.");
    }

    if (!isStringish(name)) return false; // null (intercepted) -> true (success)

    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;
  },
  defineProperty: function defineProperty(target, name, descriptor) {
    var _getAdm$definePropert;

    if (NODE_ENV !== "production") {
      warnAboutProxyRequirement("define property on an observable object. Use 'defineProperty' from 'mobx' instead.");
    } // null (intercepted) -> true (success)


    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;
  },
  ownKeys: function ownKeys(target) {
    if (NODE_ENV !== "production" && globalState.trackingDerivation) warnAboutProxyRequirement("iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.");
    return getAdm(target).ownKeys_();
  },
  preventExtensions: function preventExtensions(target) {
    die(13);
  }
};

function asDynamicObservableObject(target, options) {
  var _target$$mobx, _target$$mobx$proxy_;

  assertProxies();
  target = asObservableObject(target, options);
  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);
}

function hasInterceptors(interceptable) {
  return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0;
}

function registerInterceptor(interceptable, handler) {
  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);
  interceptors.push(handler);
  return once(function () {
    var idx = interceptors.indexOf(handler);
    if (idx !== -1) interceptors.splice(idx, 1);
  });
}

function interceptChange(interceptable, change) {
  var prevU = untrackedStart();

  try {
    // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950
    var interceptors = [].concat(interceptable.interceptors_ || []);

    for (var i = 0, l = interceptors.length; i < l; i++) {
      change = interceptors[i](change);
      if (change && !change.type) die(14);
      if (!change) break;
    }

    return change;
  } finally {
    untrackedEnd(prevU);
  }
}

function hasListeners(listenable) {
  return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0;
}

function registerListener(listenable, handler) {
  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);
  listeners.push(handler);
  return once(function () {
    var idx = listeners.indexOf(handler);
    if (idx !== -1) listeners.splice(idx, 1);
  });
}

function notifyListeners(listenable, change) {
  var prevU = untrackedStart();
  var listeners = listenable.changeListeners_;
  if (!listeners) return;
  listeners = listeners.slice();

  for (var i = 0, l = listeners.length; i < l; i++) {
    listeners[i](change);
  }

  untrackedEnd(prevU);
}

function makeObservable(target, annotations, options) {
  var adm = asObservableObject(target, options)[$mobx];
  startBatch();

  try {
    var _annotations; // Default to decorators


    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target); // Annotate

    ownKeys(annotations).forEach(function (key) {
      return adm.make_(key, annotations[key]);
    });
  } finally {
    endBatch();
  }

  return target;
} // proto[keysSymbol] = new Set<PropertyKey>()


var keysSymbol = /*#__PURE__*/Symbol("mobx-keys");

function makeAutoObservable(target, overrides, options) {
  if (NODE_ENV !== "production") {
    if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) die("'makeAutoObservable' can only be used for classes that don't have a superclass");
    if (isObservableObject(target)) die("makeAutoObservable can only be used on objects not already made observable");
  } // Optimization: avoid visiting protos
  // Assumes that annotation.make_/.extend_ works the same for plain objects


  if (isPlainObject(target)) {
    return extendObservable(target, target, overrides, options);
  }

  var adm = asObservableObject(target, options)[$mobx]; // Optimization: cache keys on proto
  // Assumes makeAutoObservable can be called only once per object and can't be used in subclass

  if (!target[keysSymbol]) {
    var proto = Object.getPrototypeOf(target);
    var keys = new Set([].concat(ownKeys(target), ownKeys(proto)));
    keys["delete"]("constructor");
    keys["delete"]($mobx);
    addHiddenProp(proto, keysSymbol, keys);
  }

  startBatch();

  try {
    target[keysSymbol].forEach(function (key) {
      return adm.make_(key, // must pass "undefined" for { key: undefined }
      !overrides ? true : key in overrides ? overrides[key] : true);
    });
  } finally {
    endBatch();
  }

  return target;
}

var SPLICE = "splice";
var UPDATE = "update";
var MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859

var arrayTraps = {
  get: function get(target, name) {
    var adm = target[$mobx];
    if (name === $mobx) return adm;
    if (name === "length") return adm.getArrayLength_();

    if (typeof name === "string" && !isNaN(name)) {
      return adm.get_(parseInt(name));
    }

    if (hasProp(arrayExtensions, name)) {
      return arrayExtensions[name];
    }

    return target[name];
  },
  set: function set(target, name, value) {
    var adm = target[$mobx];

    if (name === "length") {
      adm.setArrayLength_(value);
    }

    if (typeof name === "symbol" || isNaN(name)) {
      target[name] = value;
    } else {
      // numeric string
      adm.set_(parseInt(name), value);
    }

    return true;
  },
  preventExtensions: function preventExtensions() {
    die(15);
  }
};

var ObservableArrayAdministration = /*#__PURE__*/function () {
  // this is the prop that gets proxied, so can't replace it!
  function ObservableArrayAdministration(name, enhancer, owned_, legacyMode_) {
    if (name === void 0) {
      name = NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
    }

    this.owned_ = void 0;
    this.legacyMode_ = void 0;
    this.atom_ = void 0;
    this.values_ = [];
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.enhancer_ = void 0;
    this.dehancer = void 0;
    this.proxy_ = void 0;
    this.lastKnownLength_ = 0;
    this.owned_ = owned_;
    this.legacyMode_ = legacyMode_;
    this.atom_ = new Atom(name);

    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV, NODE_ENV !== "production" ? name + "[..]" : "ObservableArray[..]");
    };
  }

  var _proto = ObservableArrayAdministration.prototype;

  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) return this.dehancer(value);
    return value;
  };

  _proto.dehanceValues_ = function dehanceValues_(values) {
    if (this.dehancer !== undefined && values.length > 0) return values.map(this.dehancer);
    return values;
  };

  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };

  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (fireImmediately === void 0) {
      fireImmediately = false;
    }

    if (fireImmediately) {
      listener({
        observableKind: "array",
        object: this.proxy_,
        debugObjectName: this.atom_.name_,
        type: "splice",
        index: 0,
        added: this.values_.slice(),
        addedCount: this.values_.length,
        removed: [],
        removedCount: 0
      });
    }

    return registerListener(this, listener);
  };

  _proto.getArrayLength_ = function getArrayLength_() {
    this.atom_.reportObserved();
    return this.values_.length;
  };

  _proto.setArrayLength_ = function setArrayLength_(newLength) {
    if (typeof newLength !== "number" || newLength < 0) die("Out of range: " + newLength);
    var currentLength = this.values_.length;
    if (newLength === currentLength) return;else if (newLength > currentLength) {
      var newItems = new Array(newLength - currentLength);

      for (var i = 0; i < newLength - currentLength; i++) {
        newItems[i] = undefined;
      } // No Array.fill everywhere...


      this.spliceWithArray_(currentLength, 0, newItems);
    } else this.spliceWithArray_(newLength, currentLength - newLength);
  };

  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {
    if (oldLength !== this.lastKnownLength_) die(16);
    this.lastKnownLength_ += delta;
    if (this.legacyMode_ && delta > 0) reserveArrayBuffer(oldLength + delta + 1);
  };

  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {
    var _this = this;

    checkIfStateModificationsAreAllowed(this.atom_);
    var length = this.values_.length;
    if (index === undefined) index = 0;else if (index > length) index = length;else if (index < 0) index = Math.max(0, length + index);
    if (arguments.length === 1) deleteCount = length - index;else if (deleteCount === undefined || deleteCount === null) deleteCount = 0;else deleteCount = Math.max(0, Math.min(deleteCount, length - index));
    if (newItems === undefined) newItems = EMPTY_ARRAY;

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_,
        type: SPLICE,
        index: index,
        removedCount: deleteCount,
        added: newItems
      });
      if (!change) return EMPTY_ARRAY;
      deleteCount = change.removedCount;
      newItems = change.added;
    }

    newItems = newItems.length === 0 ? newItems : newItems.map(function (v) {
      return _this.enhancer_(v, undefined);
    });

    if (this.legacyMode_ || NODE_ENV !== "production") {
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength_(length, lengthDelta); // checks if internal array wasn't modified
    }

    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);
    if (deleteCount !== 0 || newItems.length !== 0) this.notifyArraySplice_(index, newItems, res);
    return this.dehanceValues_(res);
  };

  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {
    if (newItems.length < MAX_SPLICE_SIZE) {
      var _this$values_;

      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));
    } else {
      var res = this.values_.slice(index, index + deleteCount);
      var oldItems = this.values_.slice(index + deleteCount);
      this.values_.length = index + newItems.length - deleteCount;

      for (var i = 0; i < newItems.length; i++) {
        this.values_[index + i] = newItems[i];
      }

      for (var _i = 0; _i < oldItems.length; _i++) {
        this.values_[index + newItems.length + _i] = oldItems[_i];
      }

      return res;
    }
  };

  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      type: UPDATE,
      debugObjectName: this.atom_.name_,
      index: index,
      newValue: newValue,
      oldValue: oldValue
    } : null; // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't
    // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled

    if (NODE_ENV !== "production" && notifySpy) spyReportStart(change);
    this.atom_.reportChanged();
    if (notify) notifyListeners(this, change);
    if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
  };

  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {
    var notifySpy = !this.owned_ && isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "array",
      object: this.proxy_,
      debugObjectName: this.atom_.name_,
      type: SPLICE,
      index: index,
      removed: removed,
      added: added,
      removedCount: removed.length,
      addedCount: added.length
    } : null;
    if (NODE_ENV !== "production" && notifySpy) spyReportStart(change);
    this.atom_.reportChanged(); // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe

    if (notify) notifyListeners(this, change);
    if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
  };

  _proto.get_ = function get_(index) {
    if (index < this.values_.length) {
      this.atom_.reportObserved();
      return this.dehanceValue_(this.values_[index]);
    }

    console.warn(NODE_ENV !== "production" ? "[mobx] Out of bounds read: " + index : "[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + this.values_.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
  };

  _proto.set_ = function set_(index, newValue) {
    var values = this.values_;

    if (index < values.length) {
      // update at index in range
      checkIfStateModificationsAreAllowed(this.atom_);
      var oldValue = values[index];

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: UPDATE,
          object: this.proxy_,
          index: index,
          newValue: newValue
        });
        if (!change) return;
        newValue = change.newValue;
      }

      newValue = this.enhancer_(newValue, oldValue);
      var changed = newValue !== oldValue;

      if (changed) {
        values[index] = newValue;
        this.notifyArrayChildUpdate_(index, newValue, oldValue);
      }
    } else if (index === values.length) {
      // add a new item
      this.spliceWithArray_(index, 0, [newValue]);
    } else {
      // out of bounds
      die(17, index, values.length);
    }
  };

  return ObservableArrayAdministration;
}();

function createObservableArray(initialValues, enhancer, name, owned) {
  if (name === void 0) {
    name = NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
  }

  if (owned === void 0) {
    owned = false;
  }

  assertProxies();
  var adm = new ObservableArrayAdministration(name, enhancer, owned, false);
  addHiddenFinalProp(adm.values_, $mobx, adm);
  var proxy = new Proxy(adm.values_, arrayTraps);
  adm.proxy_ = proxy;

  if (initialValues && initialValues.length) {
    var prev = allowStateChangesStart(true);
    adm.spliceWithArray_(0, 0, initialValues);
    allowStateChangesEnd(prev);
  }

  return proxy;
} // eslint-disable-next-line


var arrayExtensions = {
  clear: function clear() {
    return this.splice(0);
  },
  replace: function replace(newItems) {
    var adm = this[$mobx];
    return adm.spliceWithArray_(0, adm.values_.length, newItems);
  },
  // Used by JSON.stringify
  toJSON: function toJSON() {
    return this.slice();
  },

  /*
   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
   * since these functions alter the inner structure of the array, the have side effects.
   * Because the have side effects, they should not be used in computed function,
   * and for that reason the do not call dependencyState.notifyObserved
   */
  splice: function splice(index, deleteCount) {
    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      newItems[_key - 2] = arguments[_key];
    }

    var adm = this[$mobx];

    switch (arguments.length) {
      case 0:
        return [];

      case 1:
        return adm.spliceWithArray_(index);

      case 2:
        return adm.spliceWithArray_(index, deleteCount);
    }

    return adm.spliceWithArray_(index, deleteCount, newItems);
  },
  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {
    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);
  },
  push: function push() {
    var adm = this[$mobx];

    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      items[_key2] = arguments[_key2];
    }

    adm.spliceWithArray_(adm.values_.length, 0, items);
    return adm.values_.length;
  },
  pop: function pop() {
    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];
  },
  shift: function shift() {
    return this.splice(0, 1)[0];
  },
  unshift: function unshift() {
    var adm = this[$mobx];

    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      items[_key3] = arguments[_key3];
    }

    adm.spliceWithArray_(0, 0, items);
    return adm.values_.length;
  },
  reverse: function reverse() {
    // reverse by default mutates in place before returning the result
    // which makes it both a 'derivation' and a 'mutation'.
    if (globalState.trackingDerivation) {
      die(37, "reverse");
    }

    this.replace(this.slice().reverse());
    return this;
  },
  sort: function sort() {
    // sort by default mutates in place before returning the result
    // which goes against all good practices. Let's not change the array in place!
    if (globalState.trackingDerivation) {
      die(37, "sort");
    }

    var copy = this.slice();
    copy.sort.apply(copy, arguments);
    this.replace(copy);
    return this;
  },
  remove: function remove(value) {
    var adm = this[$mobx];
    var idx = adm.dehanceValues_(adm.values_).indexOf(value);

    if (idx > -1) {
      this.splice(idx, 1);
      return true;
    }

    return false;
  }
};
/**
 * Wrap function from prototype
 * Without this, everything works as well, but this works
 * faster as everything works on unproxied values
 */

addArrayExtension("concat", simpleFunc);
addArrayExtension("flat", simpleFunc);
addArrayExtension("includes", simpleFunc);
addArrayExtension("indexOf", simpleFunc);
addArrayExtension("join", simpleFunc);
addArrayExtension("lastIndexOf", simpleFunc);
addArrayExtension("slice", simpleFunc);
addArrayExtension("toString", simpleFunc);
addArrayExtension("toLocaleString", simpleFunc); // map

addArrayExtension("every", mapLikeFunc);
addArrayExtension("filter", mapLikeFunc);
addArrayExtension("find", mapLikeFunc);
addArrayExtension("findIndex", mapLikeFunc);
addArrayExtension("flatMap", mapLikeFunc);
addArrayExtension("forEach", mapLikeFunc);
addArrayExtension("map", mapLikeFunc);
addArrayExtension("some", mapLikeFunc); // reduce

addArrayExtension("reduce", reduceLikeFunc);
addArrayExtension("reduceRight", reduceLikeFunc);

function addArrayExtension(funcName, funcFactory) {
  if (typeof Array.prototype[funcName] === "function") {
    arrayExtensions[funcName] = funcFactory(funcName);
  }
} // Report and delegate to dehanced array


function simpleFunc(funcName) {
  return function () {
    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
} // Make sure callbacks recieve correct array arg #2326


function mapLikeFunc(funcName) {
  return function (callback, thisArg) {
    var _this2 = this;

    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_);
    return dehancedValues[funcName](function (element, index) {
      return callback.call(thisArg, element, index, _this2);
    });
  };
} // Make sure callbacks recieve correct array arg #2326


function reduceLikeFunc(funcName) {
  return function () {
    var _this3 = this;

    var adm = this[$mobx];
    adm.atom_.reportObserved();
    var dehancedValues = adm.dehanceValues_(adm.values_); // #2432 - reduce behavior depends on arguments.length

    var callback = arguments[0];

    arguments[0] = function (accumulator, currentValue, index) {
      return callback(accumulator, currentValue, index, _this3);
    };

    return dehancedValues[funcName].apply(dehancedValues, arguments);
  };
}

var isObservableArrayAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);

function isObservableArray(thing) {
  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);
}

var _Symbol$iterator, _Symbol$toStringTag;

var ObservableMapMarker = {};
var ADD = "add";
var DELETE = "delete"; // just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54
// But: https://github.com/mobxjs/mobx/issues/1556

_Symbol$iterator = Symbol.iterator;
_Symbol$toStringTag = Symbol.toStringTag;

var ObservableMap = /*#__PURE__*/function () {
  // hasMap, not hashMap >-).
  function ObservableMap(initialData, enhancer_, name_) {
    if (enhancer_ === void 0) {
      enhancer_ = deepEnhancer;
    }

    if (name_ === void 0) {
      name_ = NODE_ENV !== "production" ? "ObservableMap@" + getNextId() : "ObservableMap";
    }

    this.enhancer_ = void 0;
    this.name_ = void 0;
    this[$mobx] = ObservableMapMarker;
    this.data_ = void 0;
    this.hasMap_ = void 0;
    this.keysAtom_ = void 0;
    this.interceptors_ = void 0;
    this.changeListeners_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = enhancer_;
    this.name_ = name_;

    if (!isFunction(Map)) {
      die(18);
    }

    this.keysAtom_ = createAtom(NODE_ENV !== "production" ? this.name_ + ".keys()" : "ObservableMap.keys()");
    this.data_ = new Map();
    this.hasMap_ = new Map();
    this.merge(initialData);
  }

  var _proto = ObservableMap.prototype;

  _proto.has_ = function has_(key) {
    return this.data_.has(key);
  };

  _proto.has = function has(key) {
    var _this = this;

    if (!globalState.trackingDerivation) return this.has_(key);
    var entry = this.hasMap_.get(key);

    if (!entry) {
      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer, NODE_ENV !== "production" ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableMap.key?", false);
      this.hasMap_.set(key, newEntry);
      onBecomeUnobserved(newEntry, function () {
        return _this.hasMap_["delete"](key);
      });
    }

    return entry.get();
  };

  _proto.set = function set(key, value) {
    var hasKey = this.has_(key);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: hasKey ? UPDATE : ADD,
        object: this,
        newValue: value,
        name: key
      });
      if (!change) return this;
      value = change.newValue;
    }

    if (hasKey) {
      this.updateValue_(key, value);
    } else {
      this.addValue_(key, value);
    }

    return this;
  };

  _proto["delete"] = function _delete(key) {
    var _this2 = this;

    checkIfStateModificationsAreAllowed(this.keysAtom_);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        name: key
      });
      if (!change) return false;
    }

    if (this.has_(key)) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);

      var _change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: this.data_.get(key).value_,
        name: key
      } : null;

      if (NODE_ENV !== "production" && notifySpy) spyReportStart(_change);
      transaction(function () {
        _this2.keysAtom_.reportChanged();

        _this2.updateHasMapEntry_(key, false);

        var observable = _this2.data_.get(key);

        observable.setNewValue_(undefined);

        _this2.data_["delete"](key);
      });
      if (notify) notifyListeners(this, _change);
      if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
      return true;
    }

    return false;
  };

  _proto.updateHasMapEntry_ = function updateHasMapEntry_(key, value) {
    var entry = this.hasMap_.get(key);

    if (entry) {
      entry.setNewValue_(value);
    }
  };

  _proto.updateValue_ = function updateValue_(key, newValue) {
    var observable = this.data_.get(key);
    newValue = observable.prepareNewValue_(newValue);

    if (newValue !== globalState.UNCHANGED) {
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        observableKind: "map",
        debugObjectName: this.name_,
        type: UPDATE,
        object: this,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;
      if (NODE_ENV !== "production" && notifySpy) spyReportStart(change);
      observable.setNewValue_(newValue);
      if (notify) notifyListeners(this, change);
      if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
    }
  };

  _proto.addValue_ = function addValue_(key, newValue) {
    var _this3 = this;

    checkIfStateModificationsAreAllowed(this.keysAtom_);
    transaction(function () {
      var observable = new ObservableValue(newValue, _this3.enhancer_, NODE_ENV !== "production" ? _this3.name_ + "." + stringifyKey(key) : "ObservableMap.key", false);

      _this3.data_.set(key, observable);

      newValue = observable.value_; // value might have been changed

      _this3.updateHasMapEntry_(key, true);

      _this3.keysAtom_.reportChanged();
    });
    var notifySpy = isSpyEnabled();
    var notify = hasListeners(this);
    var change = notify || notifySpy ? {
      observableKind: "map",
      debugObjectName: this.name_,
      type: ADD,
      object: this,
      name: key,
      newValue: newValue
    } : null;
    if (NODE_ENV !== "production" && notifySpy) spyReportStart(change);
    if (notify) notifyListeners(this, change);
    if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
  };

  _proto.get = function get(key) {
    if (this.has(key)) return this.dehanceValue_(this.data_.get(key).get());
    return this.dehanceValue_(undefined);
  };

  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }

    return value;
  };

  _proto.keys = function keys() {
    this.keysAtom_.reportObserved();
    return this.data_.keys();
  };

  _proto.values = function values() {
    var self = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next = keys.next(),
            done = _keys$next.done,
            value = _keys$next.value;

        return {
          done: done,
          value: done ? undefined : self.get(value)
        };
      }
    });
  };

  _proto.entries = function entries() {
    var self = this;
    var keys = this.keys();
    return makeIterable({
      next: function next() {
        var _keys$next2 = keys.next(),
            done = _keys$next2.done,
            value = _keys$next2.value;

        return {
          done: done,
          value: done ? undefined : [value, self.get(value)]
        };
      }
    });
  };

  _proto[_Symbol$iterator] = function () {
    return this.entries();
  };

  _proto.forEach = function forEach(callback, thisArg) {
    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
          key = _step$value[0],
          value = _step$value[1];
      callback.call(thisArg, value, key, this);
    }
  }
  /** Merge another object into this object, returns this. */
  ;

  _proto.merge = function merge(other) {
    var _this4 = this;

    if (isObservableMap(other)) {
      other = new Map(other);
    }

    transaction(function () {
      if (isPlainObject(other)) getPlainObjectKeys(other).forEach(function (key) {
        return _this4.set(key, other[key]);
      });else if (Array.isArray(other)) other.forEach(function (_ref) {
        var key = _ref[0],
            value = _ref[1];
        return _this4.set(key, value);
      });else if (isES6Map(other)) {
        if (other.constructor !== Map) die(19, other);
        other.forEach(function (value, key) {
          return _this4.set(key, value);
        });
      } else if (other !== null && other !== undefined) die(20, other);
    });
    return this;
  };

  _proto.clear = function clear() {
    var _this5 = this;

    transaction(function () {
      untracked(function () {
        for (var _iterator2 = _createForOfIteratorHelperLoose(_this5.keys()), _step2; !(_step2 = _iterator2()).done;) {
          var key = _step2.value;

          _this5["delete"](key);
        }
      });
    });
  };

  _proto.replace = function replace(values) {
    var _this6 = this; // Implementation requirements:
    // - respect ordering of replacement map
    // - allow interceptors to run and potentially prevent individual operations
    // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)
    // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)
    // - note that result map may differ from replacement map due to the interceptors


    transaction(function () {
      // Convert to map so we can do quick key lookups
      var replacementMap = convertToMap(values);
      var orderedData = new Map(); // Used for optimization

      var keysReportChangedCalled = false; // Delete keys that don't exist in replacement map
      // if the key deletion is prevented by interceptor
      // add entry at the beginning of the result map

      for (var _iterator3 = _createForOfIteratorHelperLoose(_this6.data_.keys()), _step3; !(_step3 = _iterator3()).done;) {
        var key = _step3.value; // Concurrently iterating/deleting keys
        // iterator should handle this correctly

        if (!replacementMap.has(key)) {
          var deleted = _this6["delete"](key); // Was the key removed?


          if (deleted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          } else {
            // Delete prevented by interceptor
            var value = _this6.data_.get(key);

            orderedData.set(key, value);
          }
        }
      } // Merge entries


      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done;) {
        var _step4$value = _step4.value,
            _key = _step4$value[0],
            _value = _step4$value[1]; // We will want to know whether a new key is added

        var keyExisted = _this6.data_.has(_key); // Add or update value


        _this6.set(_key, _value); // The addition could have been prevent by interceptor


        if (_this6.data_.has(_key)) {
          // The update could have been prevented by interceptor
          // and also we want to preserve existing values
          // so use value from _data map (instead of replacement map)
          var _value2 = _this6.data_.get(_key);

          orderedData.set(_key, _value2); // Was a new key added?

          if (!keyExisted) {
            // _keysAtom.reportChanged() was already called
            keysReportChangedCalled = true;
          }
        }
      } // Check for possible key order change


      if (!keysReportChangedCalled) {
        if (_this6.data_.size !== orderedData.size) {
          // If size differs, keys are definitely modified
          _this6.keysAtom_.reportChanged();
        } else {
          var iter1 = _this6.data_.keys();

          var iter2 = orderedData.keys();
          var next1 = iter1.next();
          var next2 = iter2.next();

          while (!next1.done) {
            if (next1.value !== next2.value) {
              _this6.keysAtom_.reportChanged();

              break;
            }

            next1 = iter1.next();
            next2 = iter2.next();
          }
        }
      } // Use correctly ordered map


      _this6.data_ = orderedData;
    });
    return this;
  };

  _proto.toString = function toString() {
    return "[object ObservableMap]";
  };

  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */


  _proto.observe_ = function observe_(listener, fireImmediately) {
    if (NODE_ENV !== "production" && fireImmediately === true) die("`observe` doesn't support fireImmediately=true in combination with maps.");
    return registerListener(this, listener);
  };

  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };

  _createClass(ObservableMap, [{
    key: "size",
    get: function get() {
      this.keysAtom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag,
    get: function get() {
      return "Map";
    }
  }]);

  return ObservableMap;
}(); // eslint-disable-next-line


exports.ObservableMap = ObservableMap;
var isObservableMap = /*#__PURE__*/createInstanceofPredicate("ObservableMap", ObservableMap);
exports.isObservableMap = isObservableMap;

function convertToMap(dataStructure) {
  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
    return dataStructure;
  } else if (Array.isArray(dataStructure)) {
    return new Map(dataStructure);
  } else if (isPlainObject(dataStructure)) {
    var map = new Map();

    for (var key in dataStructure) {
      map.set(key, dataStructure[key]);
    }

    return map;
  } else {
    return die(21, dataStructure);
  }
}

var _Symbol$iterator$1, _Symbol$toStringTag$1;

var ObservableSetMarker = {};
_Symbol$iterator$1 = Symbol.iterator;
_Symbol$toStringTag$1 = Symbol.toStringTag;

var ObservableSet = /*#__PURE__*/function () {
  function ObservableSet(initialData, enhancer, name_) {
    if (enhancer === void 0) {
      enhancer = deepEnhancer;
    }

    if (name_ === void 0) {
      name_ = NODE_ENV !== "production" ? "ObservableSet@" + getNextId() : "ObservableSet";
    }

    this.name_ = void 0;
    this[$mobx] = ObservableSetMarker;
    this.data_ = new Set();
    this.atom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.dehancer = void 0;
    this.enhancer_ = void 0;
    this.name_ = name_;

    if (!isFunction(Set)) {
      die(22);
    }

    this.atom_ = createAtom(this.name_);

    this.enhancer_ = function (newV, oldV) {
      return enhancer(newV, oldV, name_);
    };

    if (initialData) {
      this.replace(initialData);
    }
  }

  var _proto = ObservableSet.prototype;

  _proto.dehanceValue_ = function dehanceValue_(value) {
    if (this.dehancer !== undefined) {
      return this.dehancer(value);
    }

    return value;
  };

  _proto.clear = function clear() {
    var _this = this;

    transaction(function () {
      untracked(function () {
        for (var _iterator = _createForOfIteratorHelperLoose(_this.data_.values()), _step; !(_step = _iterator()).done;) {
          var value = _step.value;

          _this["delete"](value);
        }
      });
    });
  };

  _proto.forEach = function forEach(callbackFn, thisArg) {
    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done;) {
      var value = _step2.value;
      callbackFn.call(thisArg, value, value, this);
    }
  };

  _proto.add = function add(value) {
    var _this2 = this;

    checkIfStateModificationsAreAllowed(this.atom_);

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: ADD,
        object: this,
        newValue: value
      });
      if (!change) return this; // ideally, value = change.value would be done here, so that values can be
      // changed by interceptor. Same applies for other Set and Map api's.
    }

    if (!this.has(value)) {
      transaction(function () {
        _this2.data_.add(_this2.enhancer_(value, undefined));

        _this2.atom_.reportChanged();
      });
      var notifySpy = NODE_ENV !== "production" && isSpyEnabled();
      var notify = hasListeners(this);

      var _change = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: ADD,
        object: this,
        newValue: value
      } : null;

      if (notifySpy && NODE_ENV !== "production") spyReportStart(_change);
      if (notify) notifyListeners(this, _change);
      if (notifySpy && NODE_ENV !== "production") spyReportEnd();
    }

    return this;
  };

  _proto["delete"] = function _delete(value) {
    var _this3 = this;

    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: DELETE,
        object: this,
        oldValue: value
      });
      if (!change) return false;
    }

    if (this.has(value)) {
      var notifySpy = NODE_ENV !== "production" && isSpyEnabled();
      var notify = hasListeners(this);

      var _change2 = notify || notifySpy ? {
        observableKind: "set",
        debugObjectName: this.name_,
        type: DELETE,
        object: this,
        oldValue: value
      } : null;

      if (notifySpy && NODE_ENV !== "production") spyReportStart(_change2);
      transaction(function () {
        _this3.atom_.reportChanged();

        _this3.data_["delete"](value);
      });
      if (notify) notifyListeners(this, _change2);
      if (notifySpy && NODE_ENV !== "production") spyReportEnd();
      return true;
    }

    return false;
  };

  _proto.has = function has(value) {
    this.atom_.reportObserved();
    return this.data_.has(this.dehanceValue_(value));
  };

  _proto.entries = function entries() {
    var nextIndex = 0;
    var keys = Array.from(this.keys());
    var values = Array.from(this.values());
    return makeIterable({
      next: function next() {
        var index = nextIndex;
        nextIndex += 1;
        return index < values.length ? {
          value: [keys[index], values[index]],
          done: false
        } : {
          done: true
        };
      }
    });
  };

  _proto.keys = function keys() {
    return this.values();
  };

  _proto.values = function values() {
    this.atom_.reportObserved();
    var self = this;
    var nextIndex = 0;
    var observableValues = Array.from(this.data_.values());
    return makeIterable({
      next: function next() {
        return nextIndex < observableValues.length ? {
          value: self.dehanceValue_(observableValues[nextIndex++]),
          done: false
        } : {
          done: true
        };
      }
    });
  };

  _proto.replace = function replace(other) {
    var _this4 = this;

    if (isObservableSet(other)) {
      other = new Set(other);
    }

    transaction(function () {
      if (Array.isArray(other)) {
        _this4.clear();

        other.forEach(function (value) {
          return _this4.add(value);
        });
      } else if (isES6Set(other)) {
        _this4.clear();

        other.forEach(function (value) {
          return _this4.add(value);
        });
      } else if (other !== null && other !== undefined) {
        die("Cannot initialize set from " + other);
      }
    });
    return this;
  };

  _proto.observe_ = function observe_(listener, fireImmediately) {
    // ... 'fireImmediately' could also be true?
    if (NODE_ENV !== "production" && fireImmediately === true) die("`observe` doesn't support fireImmediately=true in combination with sets.");
    return registerListener(this, listener);
  };

  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };

  _proto.toJSON = function toJSON() {
    return Array.from(this);
  };

  _proto.toString = function toString() {
    return "[object ObservableSet]";
  };

  _proto[_Symbol$iterator$1] = function () {
    return this.values();
  };

  _createClass(ObservableSet, [{
    key: "size",
    get: function get() {
      this.atom_.reportObserved();
      return this.data_.size;
    }
  }, {
    key: _Symbol$toStringTag$1,
    get: function get() {
      return "Set";
    }
  }]);

  return ObservableSet;
}(); // eslint-disable-next-line


exports.ObservableSet = ObservableSet;
var isObservableSet = /*#__PURE__*/createInstanceofPredicate("ObservableSet", ObservableSet);
exports.isObservableSet = isObservableSet;
var descriptorCache = /*#__PURE__*/Object.create(null);
var REMOVE = "remove";

var ObservableObjectAdministration = /*#__PURE__*/function () {
  function ObservableObjectAdministration(target_, values_, name_, // Used anytime annotation is not explicitely provided
  defaultAnnotation_) {
    if (values_ === void 0) {
      values_ = new Map();
    }

    if (defaultAnnotation_ === void 0) {
      defaultAnnotation_ = autoAnnotation;
    }

    this.target_ = void 0;
    this.values_ = void 0;
    this.name_ = void 0;
    this.defaultAnnotation_ = void 0;
    this.keysAtom_ = void 0;
    this.changeListeners_ = void 0;
    this.interceptors_ = void 0;
    this.proxy_ = void 0;
    this.isPlainObject_ = void 0;
    this.appliedAnnotations_ = void 0;
    this.pendingKeys_ = void 0;
    this.target_ = target_;
    this.values_ = values_;
    this.name_ = name_;
    this.defaultAnnotation_ = defaultAnnotation_;
    this.keysAtom_ = new Atom(NODE_ENV !== "production" ? this.name_ + ".keys" : "ObservableObject.keys"); // Optimization: we use this frequently

    this.isPlainObject_ = isPlainObject(this.target_);

    if (NODE_ENV !== "production" && !isAnnotation(this.defaultAnnotation_)) {
      die("defaultAnnotation must be valid annotation");
    }

    if (NODE_ENV !== "production") {
      // Prepare structure for tracking which fields were already annotated
      this.appliedAnnotations_ = {};
    }
  }

  var _proto = ObservableObjectAdministration.prototype;

  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {
    return this.values_.get(key).get();
  };

  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {
    var observable = this.values_.get(key);

    if (observable instanceof ComputedValue) {
      observable.set(newValue);
      return true;
    } // intercept


    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        type: UPDATE,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: newValue
      });
      if (!change) return null;
      newValue = change.newValue;
    }

    newValue = observable.prepareNewValue_(newValue); // notify spy & observers

    if (newValue !== globalState.UNCHANGED) {
      var notify = hasListeners(this);
      var notifySpy = NODE_ENV !== "production" && isSpyEnabled();

      var _change = notify || notifySpy ? {
        type: UPDATE,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        oldValue: observable.value_,
        name: key,
        newValue: newValue
      } : null;

      if (NODE_ENV !== "production" && notifySpy) spyReportStart(_change);
      observable.setNewValue_(newValue);
      if (notify) notifyListeners(this, _change);
      if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
    }

    return true;
  };

  _proto.get_ = function get_(key) {
    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {
      // Key doesn't exist yet, subscribe for it in case it's added later
      this.has_(key);
    }

    return this.target_[key];
  }
  /**
   * @param {PropertyKey} key
   * @param {any} value
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */
  ;

  _proto.set_ = function set_(key, value, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    } // Don't use .has(key) - we care about own


    if (hasProp(this.target_, key)) {
      // Existing prop
      if (this.values_.has(key)) {
        // Observable (can be intercepted)
        return this.setObservablePropValue_(key, value);
      } else if (proxyTrap) {
        // Non-observable - proxy
        return Reflect.set(this.target_, key, value);
      } else {
        // Non-observable
        this.target_[key] = value;
        return true;
      }
    } else {
      // New prop
      return this.extend_(key, {
        value: value,
        enumerable: true,
        writable: true,
        configurable: true
      }, this.defaultAnnotation_, proxyTrap);
    }
  } // Trap for "in"
  ;

  _proto.has_ = function has_(key) {
    if (!globalState.trackingDerivation) {
      // Skip key subscription outside derivation
      return key in this.target_;
    }

    this.pendingKeys_ || (this.pendingKeys_ = new Map());
    var entry = this.pendingKeys_.get(key);

    if (!entry) {
      entry = new ObservableValue(key in this.target_, referenceEnhancer, NODE_ENV !== "production" ? this.name_ + "." + stringifyKey(key) + "?" : "ObservableObject.key?", false);
      this.pendingKeys_.set(key, entry);
    }

    return entry.get();
  }
  /**
   * @param {PropertyKey} key
   * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop
   */
  ;

  _proto.make_ = function make_(key, annotation) {
    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }

    if (annotation === false) {
      return;
    }

    assertAnnotable(this, annotation, key);

    if (!(key in this.target_)) {
      var _this$target_$storedA; // Throw on missing key, except for decorators:
      // Decorator annotations are collected from whole prototype chain.
      // When called from super() some props may not exist yet.
      // However we don't have to worry about missing prop,
      // because the decorator must have been applied to something.


      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) == null ? void 0 : _this$target_$storedA[key]) {
        return; // will be annotated by subclass constructor
      } else {
        die(1, annotation.annotationType_, this.name_ + "." + key.toString());
      }
    }

    var source = this.target_;

    while (source && source !== objectPrototype) {
      var descriptor = getDescriptor(source, key);

      if (descriptor) {
        var outcome = annotation.make_(this, key, descriptor, source);
        if (outcome === 0
        /* Cancel */
        ) return;
        if (outcome === 1
        /* Break */
        ) break;
      }

      source = Object.getPrototypeOf(source);
    }

    recordAnnotationApplied(this, annotation, key);
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */
  ;

  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    if (annotation === true) {
      annotation = this.defaultAnnotation_;
    }

    if (annotation === false) {
      return this.defineProperty_(key, descriptor, proxyTrap);
    }

    assertAnnotable(this, annotation, key);
    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);

    if (outcome) {
      recordAnnotationApplied(this, annotation, key);
    }

    return outcome;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */
  ;

  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);

      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor


      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: descriptor.value
        });
        if (!change) return null;
        var newValue = change.newValue;

        if (descriptor.value !== newValue) {
          descriptor = _extends({}, descriptor, {
            value: newValue
          });
        }
      } // Define


      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      } // Notify


      this.notifyPropertyAddition_(key, descriptor.value);
    } finally {
      endBatch();
    }

    return true;
  } // If original descriptor becomes relevant, move this to annotation directly
  ;

  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);

      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor


      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: value
        });
        if (!change) return null;
        value = change.newValue;
      }

      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: true,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      }; // Define

      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }

      var observable = new ObservableValue(value, enhancer, NODE_ENV !== "production" ? this.name_ + "." + key.toString() : "ObservableObject.key", false);
      this.values_.set(key, observable); // Notify (value possibly changed by ObservableValue)

      this.notifyPropertyAddition_(key, observable.value_);
    } finally {
      endBatch();
    }

    return true;
  } // If original descriptor becomes relevant, move this to annotation directly
  ;

  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    }

    try {
      startBatch(); // Delete

      var deleteOutcome = this.delete_(key);

      if (!deleteOutcome) {
        // Failure or intercepted
        return deleteOutcome;
      } // ADD interceptor


      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.proxy_ || this.target_,
          name: key,
          type: ADD,
          newValue: undefined
        });
        if (!change) return null;
      }

      options.name || (options.name = NODE_ENV !== "production" ? this.name_ + "." + key.toString() : "ObservableObject.key");
      options.context = this.proxy_ || this.target_;
      var cachedDescriptor = getCachedObservablePropDescriptor(key);
      var descriptor = {
        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,
        enumerable: false,
        get: cachedDescriptor.get,
        set: cachedDescriptor.set
      }; // Define

      if (proxyTrap) {
        if (!Reflect.defineProperty(this.target_, key, descriptor)) {
          return false;
        }
      } else {
        defineProperty(this.target_, key, descriptor);
      }

      this.values_.set(key, new ComputedValue(options)); // Notify

      this.notifyPropertyAddition_(key, undefined);
    } finally {
      endBatch();
    }

    return true;
  }
  /**
   * @param {PropertyKey} key
   * @param {PropertyDescriptor} descriptor
   * @param {boolean} proxyTrap whether it's called from proxy trap
   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor
   */
  ;

  _proto.delete_ = function delete_(key, proxyTrap) {
    if (proxyTrap === void 0) {
      proxyTrap = false;
    } // No such prop


    if (!hasProp(this.target_, key)) {
      return true;
    } // Intercept


    if (hasInterceptors(this)) {
      var change = interceptChange(this, {
        object: this.proxy_ || this.target_,
        name: key,
        type: REMOVE
      }); // Cancelled

      if (!change) return null;
    } // Delete


    try {
      var _this$pendingKeys_, _this$pendingKeys_$ge;

      startBatch();
      var notify = hasListeners(this);
      var notifySpy = NODE_ENV !== "production" && isSpyEnabled();
      var observable = this.values_.get(key); // Value needed for spies/listeners

      var value = undefined; // Optimization: don't pull the value unless we will need it

      if (!observable && (notify || notifySpy)) {
        var _getDescriptor;

        value = (_getDescriptor = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor.value;
      } // delete prop (do first, may fail)


      if (proxyTrap) {
        if (!Reflect.deleteProperty(this.target_, key)) {
          return false;
        }
      } else {
        delete this.target_[key];
      } // Allow re-annotating this field


      if (NODE_ENV !== "production") {
        delete this.appliedAnnotations_[key];
      } // Clear observable


      if (observable) {
        this.values_["delete"](key); // for computed, value is undefined

        if (observable instanceof ObservableValue) {
          value = observable.value_;
        } // Notify: autorun(() => obj[key]), see #1796


        propagateChanged(observable);
      } // Notify "keys/entries/values" observers


      this.keysAtom_.reportChanged(); // Notify "has" observers
      // "in" as it may still exist in proto

      (_this$pendingKeys_ = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_$ge = _this$pendingKeys_.get(key)) == null ? void 0 : _this$pendingKeys_$ge.set(key in this.target_); // Notify spies/listeners

      if (notify || notifySpy) {
        var _change2 = {
          type: REMOVE,
          observableKind: "object",
          object: this.proxy_ || this.target_,
          debugObjectName: this.name_,
          oldValue: value,
          name: key
        };
        if (NODE_ENV !== "production" && notifySpy) spyReportStart(_change2);
        if (notify) notifyListeners(this, _change2);
        if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
      }
    } finally {
      endBatch();
    }

    return true;
  }
  /**
   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
   * for callback details
   */
  ;

  _proto.observe_ = function observe_(callback, fireImmediately) {
    if (NODE_ENV !== "production" && fireImmediately === true) die("`observe` doesn't support the fire immediately property for observable objects.");
    return registerListener(this, callback);
  };

  _proto.intercept_ = function intercept_(handler) {
    return registerInterceptor(this, handler);
  };

  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {
    var _this$pendingKeys_2, _this$pendingKeys_2$g;

    var notify = hasListeners(this);
    var notifySpy = NODE_ENV !== "production" && isSpyEnabled();

    if (notify || notifySpy) {
      var change = notify || notifySpy ? {
        type: ADD,
        observableKind: "object",
        debugObjectName: this.name_,
        object: this.proxy_ || this.target_,
        name: key,
        newValue: value
      } : null;
      if (NODE_ENV !== "production" && notifySpy) spyReportStart(change);
      if (notify) notifyListeners(this, change);
      if (NODE_ENV !== "production" && notifySpy) spyReportEnd();
    }

    (_this$pendingKeys_2 = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_2$g = _this$pendingKeys_2.get(key)) == null ? void 0 : _this$pendingKeys_2$g.set(true); // Notify "keys/entries/values" observers

    this.keysAtom_.reportChanged();
  };

  _proto.ownKeys_ = function ownKeys_() {
    this.keysAtom_.reportObserved();
    return ownKeys(this.target_);
  };

  _proto.keys_ = function keys_() {
    // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.
    // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.
    // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)
    // We choose to over-report in Object.keys(object), because:
    // - typically it's used with simple data objects
    // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected
    this.keysAtom_.reportObserved();
    return Object.keys(this.target_);
  };

  return ObservableObjectAdministration;
}();

function asObservableObject(target, options) {
  var _options$name;

  if (NODE_ENV !== "production" && options && isObservableObject(target)) {
    die("Options can't be provided for already observable objects.");
  }

  if (hasProp(target, $mobx)) {
    if (NODE_ENV !== "production" && !(getAdministration(target) instanceof ObservableObjectAdministration)) {
      die("Cannot convert '" + getDebugName(target) + "' into observable object:" + "\nThe target is already observable of different type." + "\nExtending builtins is not supported.");
    }

    return target;
  }

  if (NODE_ENV !== "production" && !Object.isExtensible(target)) die("Cannot make the designated object observable; it is not extensible");
  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name : NODE_ENV !== "production" ? (isPlainObject(target) ? "ObservableObject" : target.constructor.name) + "@" + getNextId() : "ObservableObject";
  var adm = new ObservableObjectAdministration(target, new Map(), String(name), getAnnotationFromOptions(options));
  addHiddenProp(target, $mobx, adm);
  return target;
}

var isObservableObjectAdministration = /*#__PURE__*/createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);

function getCachedObservablePropDescriptor(key) {
  return descriptorCache[key] || (descriptorCache[key] = {
    get: function get() {
      return this[$mobx].getObservablePropValue_(key);
    },
    set: function set(value) {
      return this[$mobx].setObservablePropValue_(key, value);
    }
  });
}

function isObservableObject(thing) {
  if (isObject(thing)) {
    return isObservableObjectAdministration(thing[$mobx]);
  }

  return false;
}

function recordAnnotationApplied(adm, annotation, key) {
  var _adm$target_$storedAn;

  if (NODE_ENV !== "production") {
    adm.appliedAnnotations_[key] = annotation;
  } // Remove applied decorator annotation so we don't try to apply it again in subclass constructor


  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null ? true : delete _adm$target_$storedAn[key];
}

function assertAnnotable(adm, annotation, key) {
  // Valid annotation
  if (NODE_ENV !== "production" && !isAnnotation(annotation)) {
    die("Cannot annotate '" + adm.name_ + "." + key.toString() + "': Invalid annotation.");
  }
  /*
  // Configurable, not sealed, not frozen
  // Possibly not needed, just a little better error then the one thrown by engine.
  // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.
  if (__DEV__) {
      const configurable = getDescriptor(adm.target_, key)?.configurable
      const frozen = Object.isFrozen(adm.target_)
      const sealed = Object.isSealed(adm.target_)
      if (!configurable || frozen || sealed) {
          const fieldName = `${adm.name_}.${key.toString()}`
          const requestedAnnotationType = annotation.annotationType_
          let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`
          if (frozen) {
              error += `\nObject is frozen.`
          }
          if (sealed) {
              error += `\nObject is sealed.`
          }
          if (!configurable) {
              error += `\nproperty is not configurable.`
              // Mention only if caused by us to avoid confusion
              if (hasProp(adm.appliedAnnotations!, key)) {
                  error += `\nTo prevent accidental re-definition of a field by a subclass, `
                  error += `all annotated fields of non-plain objects (classes) are not configurable.`
              }
          }
          die(error)
      }
  }
  */
  // Not annotated


  if (NODE_ENV !== "production" && !isOverride(annotation) && hasProp(adm.appliedAnnotations_, key)) {
    var fieldName = adm.name_ + "." + key.toString();
    var currentAnnotationType = adm.appliedAnnotations_[key].annotationType_;
    var requestedAnnotationType = annotation.annotationType_;
    die("Cannot apply '" + requestedAnnotationType + "' to '" + fieldName + "':" + ("\nThe field is already annotated with '" + currentAnnotationType + "'.") + "\nRe-annotating fields is not allowed." + "\nUse 'override' annotation for methods overriden by subclass.");
  }
}
/**
 * This array buffer contains two lists of properties, so that all arrays
 * can recycle their property definitions, which significantly improves performance of creating
 * properties on the fly.
 */


var OBSERVABLE_ARRAY_BUFFER_SIZE = 0; // Typescript workaround to make sure ObservableArray extends Array

var StubArray = function StubArray() {};

function inherit(ctor, proto) {
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ctor.prototype, proto);
  } else if (ctor.prototype.__proto__ !== undefined) {
    ctor.prototype.__proto__ = proto;
  } else {
    ctor.prototype = proto;
  }
}

inherit(StubArray, Array.prototype); // Weex proto freeze protection was here,
// but it is unclear why the hack is need as MobX never changed the prototype
// anyway, so removed it in V6

var LegacyObservableArray = /*#__PURE__*/function (_StubArray) {
  _inheritsLoose(LegacyObservableArray, _StubArray);

  function LegacyObservableArray(initialValues, enhancer, name, owned) {
    var _this;

    if (name === void 0) {
      name = NODE_ENV !== "production" ? "ObservableArray@" + getNextId() : "ObservableArray";
    }

    if (owned === void 0) {
      owned = false;
    }

    _this = _StubArray.call(this) || this;
    var adm = new ObservableArrayAdministration(name, enhancer, owned, true);
    adm.proxy_ = _assertThisInitialized(_this);
    addHiddenFinalProp(_assertThisInitialized(_this), $mobx, adm);

    if (initialValues && initialValues.length) {
      var prev = allowStateChangesStart(true); // @ts-ignore

      _this.spliceWithArray(0, 0, initialValues);

      allowStateChangesEnd(prev);
    }

    return _this;
  }

  var _proto = LegacyObservableArray.prototype;

  _proto.concat = function concat() {
    this[$mobx].atom_.reportObserved();

    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {
      arrays[_key] = arguments[_key];
    }

    return Array.prototype.concat.apply(this.slice(), //@ts-ignore
    arrays.map(function (a) {
      return isObservableArray(a) ? a.slice() : a;
    }));
  };

  _proto[Symbol.iterator] = function () {
    var self = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        // @ts-ignore
        return nextIndex < self.length ? {
          value: self[nextIndex++],
          done: false
        } : {
          done: true,
          value: undefined
        };
      }
    });
  };

  _createClass(LegacyObservableArray, [{
    key: "length",
    get: function get() {
      return this[$mobx].getArrayLength_();
    },
    set: function set(newLength) {
      this[$mobx].setArrayLength_(newLength);
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return "Array";
    }
  }]);

  return LegacyObservableArray;
}(StubArray);

Object.entries(arrayExtensions).forEach(function (_ref) {
  var prop = _ref[0],
      fn = _ref[1];
  if (prop !== "concat") addHiddenProp(LegacyObservableArray.prototype, prop, fn);
});

function createArrayEntryDescriptor(index) {
  return {
    enumerable: false,
    configurable: true,
    get: function get() {
      return this[$mobx].get_(index);
    },
    set: function set(value) {
      this[$mobx].set_(index, value);
    }
  };
}

function createArrayBufferItem(index) {
  defineProperty(LegacyObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
}

function reserveArrayBuffer(max) {
  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {
      createArrayBufferItem(index);
    }

    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }
}

reserveArrayBuffer(1000);

function createLegacyArray(initialValues, enhancer, name) {
  return new LegacyObservableArray(initialValues, enhancer, name);
}

function getAtom(thing, property) {
  if (typeof thing === "object" && thing !== null) {
    if (isObservableArray(thing)) {
      if (property !== undefined) die(23);
      return thing[$mobx].atom_;
    }

    if (isObservableSet(thing)) {
      return thing[$mobx];
    }

    if (isObservableMap(thing)) {
      if (property === undefined) return thing.keysAtom_;
      var observable = thing.data_.get(property) || thing.hasMap_.get(property);
      if (!observable) die(25, property, getDebugName(thing));
      return observable;
    }

    if (isObservableObject(thing)) {
      if (!property) return die(26);

      var _observable = thing[$mobx].values_.get(property);

      if (!_observable) die(27, property, getDebugName(thing));
      return _observable;
    }

    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
      return thing;
    }
  } else if (isFunction(thing)) {
    if (isReaction(thing[$mobx])) {
      // disposer function
      return thing[$mobx];
    }
  }

  die(28);
}

function getAdministration(thing, property) {
  if (!thing) die(29);
  if (property !== undefined) return getAdministration(getAtom(thing, property));
  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) return thing;
  if (isObservableMap(thing) || isObservableSet(thing)) return thing;
  if (thing[$mobx]) return thing[$mobx];
  die(24, thing);
}

function getDebugName(thing, property) {
  var named;

  if (property !== undefined) {
    named = getAtom(thing, property);
  } else if (isAction(thing)) {
    return thing.name;
  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {
    named = getAdministration(thing);
  } else {
    // valid for arrays as well
    named = getAtom(thing);
  }

  return named.name_;
}

var toString = objectPrototype.toString;

function deepEqual(a, b, depth) {
  if (depth === void 0) {
    depth = -1;
  }

  return eq(a, b, depth);
} // Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289
// Internal recursive comparison function for `isEqual`.


function eq(a, b, depth, aStack, bStack) {
  // Identical objects are equal. `0 === -0`, but they aren't identical.
  // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
  if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).

  if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.

  if (a !== a) return b !== b; // Exhaust primitive checks

  var type = typeof a;
  if (!isFunction(type) && type !== "object" && typeof b != "object") return false; // Compare `[[Class]]` names.

  var className = toString.call(a);
  if (className !== toString.call(b)) return false;

  switch (className) {
    // Strings, numbers, regular expressions, dates, and booleans are compared by value.
    case "[object RegExp]": // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')

    case "[object String]":
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return "" + a === "" + b;

    case "[object Number]":
      // `NaN`s are equivalent, but non-reflexive.
      // Object(NaN) is equivalent to NaN.
      if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.

      return +a === 0 ? 1 / +a === 1 / b : +a === +b;

    case "[object Date]":
    case "[object Boolean]":
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a === +b;

    case "[object Symbol]":
      return typeof Symbol !== "undefined" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b);

    case "[object Map]":
    case "[object Set]":
      // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.
      // Hide this extra level by increasing the depth.
      if (depth >= 0) {
        depth++;
      }

      break;
  } // Unwrap any wrapped objects.


  a = unwrap(a);
  b = unwrap(b);
  var areArrays = className === "[object Array]";

  if (!areArrays) {
    if (typeof a != "object" || typeof b != "object") return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s
    // from different frames are.

    var aCtor = a.constructor,
        bCtor = b.constructor;

    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b) {
      return false;
    }
  }

  if (depth === 0) {
    return false;
  } else if (depth < 0) {
    depth = -1;
  } // Assume equality for cyclic structures. The algorithm for detecting cyclic
  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
  // Initializing stack of traversed objects.
  // It's done here since we only need them for objects and arrays comparison.


  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;

  while (length--) {
    // Linear search. Performance is inversely proportional to the number of
    // unique nested structures.
    if (aStack[length] === a) return bStack[length] === b;
  } // Add the first object to the stack of traversed objects.


  aStack.push(a);
  bStack.push(b); // Recursively compare objects and arrays.

  if (areArrays) {
    // Compare array lengths to determine if a deep comparison is necessary.
    length = a.length;
    if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.

    while (length--) {
      if (!eq(a[length], b[length], depth - 1, aStack, bStack)) return false;
    }
  } else {
    // Deep compare objects.
    var keys = Object.keys(a);
    var key;
    length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.

    if (Object.keys(b).length !== length) return false;

    while (length--) {
      // Deep compare each member
      key = keys[length];
      if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) return false;
    }
  } // Remove the first object from the stack of traversed objects.


  aStack.pop();
  bStack.pop();
  return true;
}

function unwrap(a) {
  if (isObservableArray(a)) return a.slice();
  if (isES6Map(a) || isObservableMap(a)) return Array.from(a.entries());
  if (isES6Set(a) || isObservableSet(a)) return Array.from(a.entries());
  return a;
}

function makeIterable(iterator) {
  iterator[Symbol.iterator] = getSelf;
  return iterator;
}

function getSelf() {
  return this;
}

function isAnnotation(thing) {
  return (// Can be function
    thing instanceof Object && typeof thing.annotationType_ === "string" && isFunction(thing.make_) && isFunction(thing.extend_)
  );
}
/**
 * (c) Michel Weststrate 2015 - 2020
 * MIT Licensed
 *
 * Welcome to the mobx sources! To get an global overview of how MobX internally works,
 * this is a good place to start:
 * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74
 *
 * Source folders:
 * ===============
 *
 * - api/     Most of the public static methods exposed by the module can be found here.
 * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.
 * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.
 * - utils/   Utility stuff.
 *
 */


["Symbol", "Map", "Set", "Symbol"].forEach(function (m) {
  var g = getGlobal();

  if (typeof g[m] === "undefined") {
    die("MobX requires global '" + m + "' to be available or polyfilled");
  }
});

if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
  // See: https://github.com/andykog/mobx-devtools/
  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
    spy: spy,
    extras: {
      getDebugName: getDebugName
    },
    $mobx: $mobx
  });
} // # sourceMappingURL=mobx.esm.js.map

cc._RF.pop();

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/CommonUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9814d/85SFDfo1f4MmYfH4s', 'CommonUtils');
// Script/Common/Utils/CommonUtils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommonUtils = void 0;
var CocosHelper_1 = require("../../UIFrame/CocosHelper");
var MatchUtils_1 = require("./MatchUtils");
var kDefaultRandomGenerator = {
    nextInt: function (start, endAndNotIncluded) {
        return Math.floor(Math.random() * (endAndNotIncluded - start)) + start;
    },
    next01: function () {
        return Math.random();
    }
};
var CommonUtils = /** @class */ (function () {
    function CommonUtils() {
    }
    CommonUtils.isArray = function (target) {
        if (typeof Array.isArray === "function") {
            return Array.isArray(target);
        }
        else {
            return Object.prototype.toString.call(target) === "[object Array]";
        }
    };
    CommonUtils.foramtDate = function (dateObj, format) {
        var date = {
            "M+": dateObj.getMonth() + 1,
            "d+": dateObj.getDate(),
            "h+": dateObj.getHours(),
            "m+": dateObj.getMinutes(),
            "s+": dateObj.getSeconds(),
            "q+": Math.floor((dateObj.getMonth() + 3) / 3),
            "S+": dateObj.getMilliseconds()
        };
        if (/(y+)/i.test(format)) {
            format = format.replace(RegExp.$1, (dateObj.getFullYear() + '').substr(4 - RegExp.$1.length));
        }
        for (var k in date) {
            if (new RegExp("(" + k + ")").test(format)) {
                format = format.replace(RegExp.$1, ("00" + date[k]).substr(("" + date[k]).length));
            }
        }
        return format;
    };
    CommonUtils.getElemClamped = function (arr, index) {
        return arr[Math.max(0, Math.min(arr.length - 1, index))];
    };
    CommonUtils.randomIntClosedRange = function (min, max) {
        return Math.floor(Math.random() * (max - min + 0.9999) + min);
    };
    CommonUtils.indexOf = function (val, arr) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == val) {
                return i;
            }
        }
        return -1;
    };
    CommonUtils.indexOfArr = function (arr) {
        var values = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            values[_i - 1] = arguments[_i];
        }
        var paramCount = values.length;
        var found = false;
        for (var i = 0; i <= arr.length - paramCount; i += paramCount) {
            found = true;
            for (var j = 0; j < paramCount; j++) {
                if (arr[i + j] !== values[j]) {
                    found = false;
                    break;
                }
            }
            if (found) {
                return i;
            }
        }
        return -1;
    };
    CommonUtils.floatEqual = function (left, right, epsilon) {
        if (epsilon === void 0) { epsilon = 0.000001; }
        return Math.abs(left - right) < epsilon;
    };
    CommonUtils.formatTimeInterval = function (seconds, alwaysShowMinutes, alwaysShowHours) {
        if (alwaysShowMinutes === void 0) { alwaysShowMinutes = false; }
        if (alwaysShowHours === void 0) { alwaysShowHours = false; }
        alwaysShowMinutes = alwaysShowHours || alwaysShowMinutes;
        var ret = "";
        var hour = Math.floor(seconds / 3600);
        seconds = seconds % 3600;
        var minute = Math.floor(seconds / 60);
        seconds = Math.floor(seconds % 60);
        if (alwaysShowHours || hour > 0) {
            if (hour < 10) {
                ret += "0";
            }
            ret += hour + ":";
        }
        if (alwaysShowMinutes || minute > 0 || hour > 0) {
            if (minute < 10) {
                ret += "0";
            }
            ret += minute + ":";
        }
        if (seconds < 10) {
            ret += "0";
        }
        ret += seconds;
        return ret;
    };
    CommonUtils.alignNumber = function (input, divider) {
        input = input - Math.floor(input / divider) * divider;
        return input;
    };
    CommonUtils.formatNumber = function (num) {
        var str = "" + Math.floor(num);
        var newStr = "";
        var count = 0;
        // 当数字是整数
        if (str.indexOf(".") == -1) {
            for (var i = str.length - 1; i >= 0; i--) {
                if (count % 3 == 0 && count != 0) {
                    newStr = str.charAt(i) + "," + newStr;
                }
                else {
                    newStr = str.charAt(i) + newStr;
                }
                count++;
            }
            str = newStr;
            return str;
        }
        // 当数字带有小数
        else {
            for (var i = str.indexOf(".") - 1; i >= 0; i--) {
                if (count % 3 == 0 && count != 0) {
                    newStr = str.charAt(i) + "," + newStr;
                }
                else {
                    newStr = str.charAt(i) + newStr; //逐个字符相接起来
                }
                count++;
            }
            str = newStr + (str + "00").substr((str + "00").indexOf("."), 3);
            return str;
        }
    };
    CommonUtils.updateLabelSize = function (label) {
        label["_updateRenderData"](true);
    };
    CommonUtils.lerp = function (begin, end, factor) {
        return begin + (end - begin) * factor;
    };
    CommonUtils.shuffle = function (container, randGenerator, start, count) {
        if (randGenerator === void 0) { randGenerator = kDefaultRandomGenerator; }
        if (start === void 0) { start = 0; }
        if (count === void 0) { count = -1; }
        randGenerator = randGenerator || kDefaultRandomGenerator;
        if (count < 0) {
            count = container.length - start;
        }
        for (var i = 0; i < count; i++) {
            var idx = randGenerator.nextInt(start, start + count - i);
            var temp = container[idx];
            container[idx] = container[count - i - 1 + start];
            container[count - i - 1 + start] = temp;
        }
    };
    CommonUtils.setItemSpriteFrame = function (sprite, url, successCB) {
        if (successCB === void 0) { successCB = null; }
        sprite["spriteFrameName"] = url;
        CocosHelper_1.default.loadResSync(url, cc.SpriteFrame).then(function (spriteFrame) {
            if (sprite.isValid && sprite["spriteFrameName"] == url) {
                sprite.spriteFrame = spriteFrame;
                if (successCB) {
                    successCB(sprite);
                }
            }
        });
    };
    CommonUtils.addSimpleClick = function (target, cb) {
        var targetNode = target;
        var lastTouchPos = null;
        targetNode.on(cc.Node.EventType.TOUCH_START, function (e) {
            lastTouchPos = e.getLocation();
        }, this);
        targetNode.on(cc.Node.EventType.TOUCH_END, function (e) {
            if (lastTouchPos) {
                var delta = lastTouchPos.subSelf(e.getLocation()).mag();
                if (delta < 3) {
                    cb();
                }
            }
        }, this);
    };
    CommonUtils.isGoodNumber = function (num) {
        return (typeof num) === "number" && !Number.isNaN(num);
    };
    CommonUtils.getVisibleRect = function () {
        var visibleRect = cc.view.getViewportRect();
        visibleRect = cc.rect(visibleRect.origin.x / -cc.view.getScaleX(), visibleRect.origin.y / -cc.view.getScaleY(), (visibleRect.size.width + visibleRect.origin.x * 2) / cc.view.getScaleX(), (visibleRect.size.height + visibleRect.origin.y * 2) / cc.view.getScaleY());
        return visibleRect;
    };
    CommonUtils.httpGet = function (url, cb) {
        var xhr = cc.loader.getXMLHttpRequest();
        xhr.onreadystatechange = function () {
            // cc.log("Get: readyState:" + xhr.readyState + " status:" + xhr.status);
            if (xhr.readyState === 4 && xhr.status == 200) {
                var respone = xhr.responseText;
                var rsp = JSON.parse(respone);
                cb(rsp);
            }
            else if (xhr.readyState === 4 && xhr.status == 401) {
                cb({ "ret": 1 });
            }
            else {
                //callback(-1);
            }
        };
        xhr.withCredentials = true;
        xhr.open('GET', url, true);
        xhr.withCredentials = false;
        // if (cc.sys.isNative) {
        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
        xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
        xhr.setRequestHeader("Content-Type", "application/json");
        //xhr.setRequestHeader('Authorization', 'Bearer ' + cc.myGame.gameManager.getToken());
        // xhr.setRequestHeader('Authorization', 'Bearer ' + "");
        // }
        // note: In Internet Explorer, the timeout property may be set only after calling the open()
        // method and before calling the send() method.
        xhr.timeout = 8000; // 8 seconds for timeout
        xhr.send();
    };
    /**
     * Box-Muller algorithm
     * @param avg
     */
    CommonUtils.randomGaussian = function (avg, variant, randGenerator) {
        if (randGenerator === void 0) { randGenerator = kDefaultRandomGenerator; }
        randGenerator = randGenerator || kDefaultRandomGenerator;
        var x1 = randGenerator.next01();
        var x2 = randGenerator.next01();
        var standard = Math.sqrt(-2 * Math.log(x1)) * Math.cos(2 * Math.PI * x2);
        return standard * variant + avg;
    };
    CommonUtils.deepCopy = function (dst, src) {
        for (var field in src) {
            this._deepCopyFields(dst, src, field);
        }
    };
    CommonUtils.constructObjectMap = function (obj) {
        var map = new Map();
        for (var key in obj) {
            var val = obj[key];
            if (typeof val === "object") {
                map.set(key, this.constructObjectMap(val));
            }
            else {
                map.set(key, val);
            }
        }
        return map;
    };
    CommonUtils._deepCopyFields = function (dst, src, field) {
        var value = src[field];
        if (typeof value == "number" || typeof value == "string") {
            dst[field] = value;
        }
        else if (this.isArray[value]) {
            var dstArr = dst[field] = [];
            for (var i = 0; i < value.length; i++) {
                this._deepCopyFields(dstArr, value, i);
            }
        }
        else if (value == null) {
            dst[field] = null;
        }
        else if (typeof value == "object") {
            var dstObj = new value.constructor();
            for (var field_1 in src) {
                this._deepCopyFields(dstObj, value, field_1);
            }
        }
    };
    /**
     * 格式化数字变成K,M,B
     * @param value
     */
    CommonUtils.formatNumberToEng = function (value) {
        if (value < 1 && value > 0) {
            return 1 + "";
        }
        value = Math.floor(value);
        var exp = Math.floor(CommonUtils.getExponent(value));
        if (exp < 13) {
            if (exp < 4) {
                return value + "";
            }
            var unitIt = Math.floor(exp / CommonUtils.constNum);
            var rem = exp % CommonUtils.constNum;
            var numStr = String(value / Math.pow(10, unitIt * CommonUtils.constNum)).substr(0, CommonUtils.constNum + rem);
            return numStr + CommonUtils.getUnit(exp);
        }
        else {
            var _num = value / Math.pow(10, exp);
            return _num.toFixed(3) + "e" + exp;
        }
    };
    CommonUtils.getExponent = function (value) {
        var exp = 0;
        while (value >= 10) {
            exp++;
            value /= 10;
        }
        return exp;
    };
    CommonUtils.getUnit = function (exp) {
        var unitIt = Math.floor(exp / CommonUtils.constNum);
        if (exp < 13) {
            return CommonUtils.unitArr[unitIt];
        }
        else {
            var unitIt = Math.floor(exp / CommonUtils.constNum);
            return "e" + unitIt * CommonUtils.constNum;
        }
    };
    /**
     * 转化成带有小数点的K,M,B
     * @param number
     * @param decimals
     */
    CommonUtils.formatEngNumber = function (number, decimals) {
        if (decimals === void 0) { decimals = 2; }
        var str;
        var num;
        number = number;
        if (number >= 1000000) {
            num = number / 1000000;
            str = (Math.floor(num / 0.001) * 0.001).toFixed(decimals);
            return this.formatEndingZero(str) + "M";
        }
        else if (number >= 1000) {
            num = number / 1000;
            str = (Math.floor(num / 0.001) * 0.001).toFixed(decimals);
            return this.formatEndingZero(str) + "K";
        }
        else {
            return number + "";
        }
    };
    CommonUtils.formatEndingZero = function (c) {
        if (c.indexOf(".") != -1) {
            if (this.endWith(c, "00")) {
                return c.substring(0, c.length - 3);
            }
            else if (this.endWith(c, "0")) {
                return c.substring(0, c.length - 1);
            }
        }
        return c;
    };
    CommonUtils.endWith = function (c, suffix) {
        return (suffix == c.substring(c.length - suffix.length));
    };
    CommonUtils.makeMaxWidthLabel = function (label, width) {
        var obj = {};
        obj["__proto__"] = label;
        Object.defineProperty(obj, "string", {
            configurable: true,
            enumerable: true,
            get: function () {
                return label.string;
            },
            set: function (str) {
                label.overflow = cc.Label.Overflow.NONE;
                label.string = str;
                label["_updateRenderData"](true);
                if (label.node.width > width) {
                    label.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
                    label.node.setContentSize(width, 1);
                    label.string = str;
                }
            }
        });
        return obj;
    };
    CommonUtils.climeUserName = function (name, showLen) {
        if (showLen === void 0) { showLen = 14; }
        var len = name.length;
        while (this.strlen(name) > showLen) {
            name = name.substring(0, name.length - 1);
        }
        if (name.length != len) {
            name = name + "...";
        }
        return name;
    };
    CommonUtils.strlen = function (str) {
        var len = 0;
        for (var i = 0; i < str.length; i++) {
            var c = str.charCodeAt(i);
            //单字节加1 
            if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                len++;
            }
            else {
                len += 2;
            }
        }
        return len;
    };
    /** 打乱数组 */
    CommonUtils.shuffleArr = function (arr) {
        var _swap = function (a, b) {
            var tmp = arr[a];
            arr[a] = arr[b];
            arr[b] = tmp;
        };
        var len = arr.length;
        for (var i = 0; i < len; i++) {
            var idx = Math.floor(Math.random() * (len - i));
            _swap(idx, len - i - 1);
        }
        return arr;
    };
    /** 二分查找, findFlag 为false表示没找到的时候返回一个较小的, 为true返回一个较大的 */
    CommonUtils.binarySearch = function (arr, target, findFlag) {
        if (findFlag === void 0) { findFlag = false; }
        var start = 0, end = arr.length - 1;
        while (end - start > 1) {
            var idx = Math.floor((start + end) / 2);
            if (target < arr[idx]) {
                end = idx;
            }
            else if (target > arr[idx]) {
                start = idx;
            }
            else {
                return idx;
            }
        }
        // 没有找到对应的值
        if (!findFlag) {
            if (end == 0)
                return -1;
            return start;
        }
        else {
            if (start == arr.length - 1)
                return arr.length;
            return end;
        }
    };
    // 判断一个点是否在三角形内
    CommonUtils.isInTriangle = function (point, triA, triB, triC) {
        var AB = triB.sub(triA), AC = triC.sub(triA), BC = triC.sub(triB), AD = point.sub(triA), BD = point.sub(triB);
        //@ts-ignore
        return (AB.cross(AC) >= 0 ^ AB.cross(AD) < 0) && (AB.cross(AC) >= 0 ^ AC.cross(AD) >= 0) && (BC.cross(AB) > 0 ^ BC.cross(BD) >= 0);
    };
    CommonUtils.isInPolygon = function (checkPoint, polygonPoints) {
        var counter = 0, i, xinters;
        var p1, p2;
        var pointCount = polygonPoints.length;
        p1 = polygonPoints[0];
        for (i = 1; i <= pointCount; i++) {
            p2 = polygonPoints[i % pointCount];
            if (checkPoint.x > Math.min(p1.x, p2.x) &&
                checkPoint.x <= Math.max(p1.x, p2.x)) {
                if (checkPoint.y <= Math.max(p1.y, p2.y)) {
                    if (p1.x != p2.x) {
                        xinters = (checkPoint.x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y;
                        if (p1.y == p2.y || checkPoint.y <= xinters) {
                            counter++;
                        }
                    }
                }
            }
            p1 = p2;
        }
        return (counter & 1) !== 0;
    };
    // 多边形 三角切割
    CommonUtils.splitePolygon = function (points) {
        if (points.length <= 3)
            return [0, 1, 2];
        var pointMap = {}; // point与idx的映射
        for (var i = 0; i < points.length; i++) {
            var p = points[i];
            pointMap[p.x + "-" + p.y] = i;
        }
        var getIdx = function (p) {
            return pointMap[p.x + "-" + p.y];
        };
        points = points.concat([]);
        var idxs = [];
        var index = 0;
        while (points.length > 3) {
            var p1 = points[(index) % points.length], p2 = points[(index + 1) % points.length], p3 = points[(index + 2) % points.length];
            var splitPoint = (index + 1) % points.length;
            var v1 = p2.sub(p1);
            var v2 = p3.sub(p2);
            if (v1.cross(v2) < 0) { // 是一个凹角, 寻找下一个
                index = (index + 1) % points.length;
                continue;
            }
            var hasPoint = false;
            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
                var p = points_1[_i];
                if (p != p1 && p != p2 && p != p3 && this.isInTriangle(p, p1, p2, p3)) {
                    hasPoint = true;
                    break;
                }
            }
            if (hasPoint) { // 当前三角形包含其他点, 寻找下一个
                index = (index + 1) % points.length;
                continue;
            }
            // 找到了耳朵, 切掉
            idxs.push(getIdx(p1), getIdx(p2), getIdx(p3));
            points.splice(splitPoint, 1);
        }
        for (var _a = 0, points_2 = points; _a < points_2.length; _a++) {
            var p = points_2[_a];
            idxs.push(getIdx(p));
        }
        return idxs;
    };
    /** 计算uv, 锚点都是中心 */
    CommonUtils.computeUv = function (points, width, height) {
        var uvs = [];
        for (var _i = 0, points_3 = points; _i < points_3.length; _i++) {
            var p = points_3[_i];
            // uv原点是左上角
            var x = MatchUtils_1.MathUtils.clamp(0, 1, (p.x + width / 2) / width);
            var y = MatchUtils_1.MathUtils.clamp(0, 1, 1. - (p.y + height / 2) / height);
            uvs.push(cc.v2(x, y));
        }
        return uvs;
    };
    CommonUtils.tweenFloat = function (from, to, duration, onUpdate, onComplete, autoStart) {
        if (autoStart === void 0) { autoStart = true; }
        var o = { _value: from };
        Object.defineProperty(o, 'value', {
            get: function () { return o._value; },
            set: function (v) { o._value = v; onUpdate && onUpdate(o._value); },
        });
        var tween = cc.tween(o).to(duration, { value: to }).call(onComplete);
        if (autoStart) {
            tween.start();
        }
        return tween;
    };
    CommonUtils.tweenVec2 = function (from, to, duration, onUpdate, onComplete, autoStart) {
        if (autoStart === void 0) { autoStart = true; }
        var o = { _value: from };
        Object.defineProperty(o, 'value', {
            get: function () { return o._value; },
            set: function (v) { o._value = v; onUpdate && onUpdate(o._value); },
        });
        var tween = cc.tween(o).to(duration, { value: to }).call(onComplete);
        if (autoStart) {
            tween.start();
        }
        return tween;
    };
    CommonUtils.unitArr = ["", "K", "M", "B"];
    CommonUtils.constNum = 3;
    return CommonUtils;
}());
exports.CommonUtils = CommonUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/StateMachine/StateMachine.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a7054SKrgdF4Z4s5xp++8qZ', 'StateMachine');
// Script/Common/StateMachine/StateMachine.js

"use strict";

/*
  Javascript State Machine Library - https://github.com/jakesgordon/javascript-state-machine
  Copyright (c) 2012, 2013, 2014, 2015, Jake Gordon and contributors
  Released under the MIT license - https://github.com/jakesgordon/javascript-state-machine/blob/master/LICENSE
*/
(function () {
  var StateMachine = {
    //---------------------------------------------------------------------------
    VERSION: "2.4.0",
    //---------------------------------------------------------------------------
    Result: {
      SUCCEEDED: 1,
      // the event transitioned successfully from one state to another
      NOTRANSITION: 2,
      // the event was successfull but no state transition was necessary
      CANCELLED: 3,
      // the event was cancelled by the caller in a beforeEvent callback
      PENDING: 4 // the event is asynchronous and the caller is in control of when the transition occurs

    },
    Error: {
      INVALID_TRANSITION: 100,
      // caller tried to fire an event that was innapropriate in the current state
      PENDING_TRANSITION: 200,
      // caller tried to fire an event while an async transition was still pending
      INVALID_CALLBACK: 300 // caller provided callback function threw an exception

    },
    WILDCARD: '*',
    ASYNC: 'async',
    //---------------------------------------------------------------------------
    create: function create(cfg, target) {
      var initial = typeof cfg.initial == 'string' ? {
        state: cfg.initial
      } : cfg.initial; // allow for a simple string, or an object with { state: 'foo', event: 'setup', defer: true|false }

      var terminal = cfg.terminal || cfg['final'];
      var fsm = target || cfg.target || {};
      var events = cfg.events || [];
      var callbacks = cfg.callbacks || {};
      var map = {}; // track state transitions allowed for an event { event: { from: [ to ] } }

      var transitions = {}; // track events allowed from a state            { state: [ event ] }

      var add = function add(e) {
        var from = Array.isArray(e.from) ? e.from : e.from ? [e.from] : [StateMachine.WILDCARD]; // allow 'wildcard' transition if 'from' is not specified

        map[e.name] = map[e.name] || {};

        for (var n = 0; n < from.length; n++) {
          transitions[from[n]] = transitions[from[n]] || [];
          transitions[from[n]].push(e.name);
          map[e.name][from[n]] = e.to || from[n]; // allow no-op transition if 'to' is not specified
        }

        if (e.to) transitions[e.to] = transitions[e.to] || [];
      };

      if (initial) {
        initial.event = initial.event || 'startup';
        add({
          name: initial.event,
          from: 'none',
          to: initial.state
        });
      }

      for (var n = 0; n < events.length; n++) {
        add(events[n]);
      }

      for (var name in map) {
        if (map.hasOwnProperty(name)) fsm[name] = StateMachine.buildEvent(name, map[name]);
      }

      for (var name in callbacks) {
        if (callbacks.hasOwnProperty(name)) fsm[name] = callbacks[name];
      }

      fsm.current = 'none';

      fsm.is = function (state) {
        return Array.isArray(state) ? state.indexOf(this.current) >= 0 : this.current === state;
      };

      fsm.can = function (event) {
        return !this.transition && map[event] !== undefined && (map[event].hasOwnProperty(this.current) || map[event].hasOwnProperty(StateMachine.WILDCARD));
      };

      fsm.cannot = function (event) {
        return !this.can(event);
      };

      fsm.transitions = function () {
        return (transitions[this.current] || []).concat(transitions[StateMachine.WILDCARD] || []);
      };

      fsm.isFinished = function () {
        return this.is(terminal);
      };

      fsm.error = cfg.error || function (name, from, to, args, error, msg, e) {
        throw e || msg;
      }; // default behavior when something unexpected happens is to throw an exception, but caller can override this behavior if desired (see github issue #3 and #17)


      fsm.states = function () {
        return Object.keys(transitions).sort();
      };

      if (initial && !initial.defer) fsm[initial.event]();
      return fsm;
    },
    //===========================================================================
    doCallback: function doCallback(fsm, func, name, from, to, args) {
      if (func) {
        try {
          return func.apply(fsm, [name, from, to].concat(args));
        } catch (e) {
          return fsm.error(name, from, to, args, StateMachine.Error.INVALID_CALLBACK, "an exception occurred in a caller-provided callback function", e);
        }
      }
    },
    beforeAnyEvent: function beforeAnyEvent(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onbeforeevent'], name, from, to, args);
    },
    afterAnyEvent: function afterAnyEvent(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onafterevent'] || fsm['onevent'], name, from, to, args);
    },
    leaveAnyState: function leaveAnyState(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onleavestate'], name, from, to, args);
    },
    enterAnyState: function enterAnyState(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onenterstate'] || fsm['onstate'], name, from, to, args);
    },
    changeState: function changeState(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onchangestate'], name, from, to, args);
    },
    beforeThisEvent: function beforeThisEvent(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onbefore' + name], name, from, to, args);
    },
    afterThisEvent: function afterThisEvent(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onafter' + name] || fsm['on' + name], name, from, to, args);
    },
    leaveThisState: function leaveThisState(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onleave' + from], name, from, to, args);
    },
    enterThisState: function enterThisState(fsm, name, from, to, args) {
      return StateMachine.doCallback(fsm, fsm['onenter' + to] || fsm['on' + to], name, from, to, args);
    },
    beforeEvent: function beforeEvent(fsm, name, from, to, args) {
      if (false === StateMachine.beforeThisEvent(fsm, name, from, to, args) || false === StateMachine.beforeAnyEvent(fsm, name, from, to, args)) return false;
    },
    afterEvent: function afterEvent(fsm, name, from, to, args) {
      StateMachine.afterThisEvent(fsm, name, from, to, args);
      StateMachine.afterAnyEvent(fsm, name, from, to, args);
    },
    leaveState: function leaveState(fsm, name, from, to, args) {
      var specific = StateMachine.leaveThisState(fsm, name, from, to, args),
          general = StateMachine.leaveAnyState(fsm, name, from, to, args);
      if (false === specific || false === general) return false;else if (StateMachine.ASYNC === specific || StateMachine.ASYNC === general) return StateMachine.ASYNC;
    },
    enterState: function enterState(fsm, name, from, to, args) {
      StateMachine.enterThisState(fsm, name, from, to, args);
      StateMachine.enterAnyState(fsm, name, from, to, args);
    },
    //===========================================================================
    buildEvent: function buildEvent(name, map) {
      return function () {
        var from = this.current;
        var to = map[from] || (map[StateMachine.WILDCARD] != StateMachine.WILDCARD ? map[StateMachine.WILDCARD] : from) || from;
        var args = Array.prototype.slice.call(arguments); // turn arguments into pure array

        if (this.transition) return this.error(name, from, to, args, StateMachine.Error.PENDING_TRANSITION, "event " + name + " inappropriate because previous transition did not complete");
        if (this.cannot(name)) return this.error(name, from, to, args, StateMachine.Error.INVALID_TRANSITION, "event " + name + " inappropriate in current state " + this.current);
        if (false === StateMachine.beforeEvent(this, name, from, to, args)) return StateMachine.Result.CANCELLED;

        if (from === to) {
          StateMachine.afterEvent(this, name, from, to, args);
          return StateMachine.Result.NOTRANSITION;
        } // prepare a transition method for use EITHER lower down, or by caller if they want an async transition (indicated by an ASYNC return value from leaveState)


        var fsm = this;

        this.transition = function () {
          fsm.transition = null; // this method should only ever be called once

          fsm.current = to;
          StateMachine.enterState(fsm, name, from, to, args);
          StateMachine.changeState(fsm, name, from, to, args);
          StateMachine.afterEvent(fsm, name, from, to, args);
          return StateMachine.Result.SUCCEEDED;
        };

        this.transition.cancel = function () {
          // provide a way for caller to cancel async transition if desired (issue #22)
          fsm.transition = null;
          StateMachine.afterEvent(fsm, name, from, to, args);
        };

        var leave = StateMachine.leaveState(this, name, from, to, args);

        if (false === leave) {
          this.transition = null;
          return StateMachine.Result.CANCELLED;
        } else if (StateMachine.ASYNC === leave) {
          return StateMachine.Result.PENDING;
        } else {
          if (this.transition) // need to check in case user manually called transition() but forgot to return StateMachine.ASYNC
            return this.transition();
        }
      };
    }
  }; // StateMachine
  //===========================================================================
  //======
  // NODE
  //======

  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = StateMachine;
    }

    exports.StateMachine = StateMachine;
  } //============
  // AMD/REQUIRE
  //============
  else if (typeof define === 'function' && define.amd) {
    define(function (require) {
      return StateMachine;
    });
  } //========
  // BROWSER
  //========
  else if (typeof window !== 'undefined') {
    window.StateMachine = StateMachine;
  } //===========
  // WEB WORKER
  //===========
  else if (typeof self !== 'undefined') {
    self.StateMachine = StateMachine;
  }
})();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1N0YXRlTWFjaGluZS9TdGF0ZU1hY2hpbmUuanMiXSwibmFtZXMiOlsiU3RhdGVNYWNoaW5lIiwiVkVSU0lPTiIsIlJlc3VsdCIsIlNVQ0NFRURFRCIsIk5PVFJBTlNJVElPTiIsIkNBTkNFTExFRCIsIlBFTkRJTkciLCJFcnJvciIsIklOVkFMSURfVFJBTlNJVElPTiIsIlBFTkRJTkdfVFJBTlNJVElPTiIsIklOVkFMSURfQ0FMTEJBQ0siLCJXSUxEQ0FSRCIsIkFTWU5DIiwiY3JlYXRlIiwiY2ZnIiwidGFyZ2V0IiwiaW5pdGlhbCIsInN0YXRlIiwidGVybWluYWwiLCJmc20iLCJldmVudHMiLCJjYWxsYmFja3MiLCJtYXAiLCJ0cmFuc2l0aW9ucyIsImFkZCIsImUiLCJmcm9tIiwiQXJyYXkiLCJpc0FycmF5IiwibmFtZSIsIm4iLCJsZW5ndGgiLCJwdXNoIiwidG8iLCJldmVudCIsImhhc093blByb3BlcnR5IiwiYnVpbGRFdmVudCIsImN1cnJlbnQiLCJpcyIsImluZGV4T2YiLCJjYW4iLCJ0cmFuc2l0aW9uIiwidW5kZWZpbmVkIiwiY2Fubm90IiwiY29uY2F0IiwiaXNGaW5pc2hlZCIsImVycm9yIiwiYXJncyIsIm1zZyIsInN0YXRlcyIsIk9iamVjdCIsImtleXMiLCJzb3J0IiwiZGVmZXIiLCJkb0NhbGxiYWNrIiwiZnVuYyIsImFwcGx5IiwiYmVmb3JlQW55RXZlbnQiLCJhZnRlckFueUV2ZW50IiwibGVhdmVBbnlTdGF0ZSIsImVudGVyQW55U3RhdGUiLCJjaGFuZ2VTdGF0ZSIsImJlZm9yZVRoaXNFdmVudCIsImFmdGVyVGhpc0V2ZW50IiwibGVhdmVUaGlzU3RhdGUiLCJlbnRlclRoaXNTdGF0ZSIsImJlZm9yZUV2ZW50IiwiYWZ0ZXJFdmVudCIsImxlYXZlU3RhdGUiLCJzcGVjaWZpYyIsImdlbmVyYWwiLCJlbnRlclN0YXRlIiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwiY2FuY2VsIiwibGVhdmUiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwicmVxdWlyZSIsIndpbmRvdyIsInNlbGYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVDLGFBQVk7QUFFVCxNQUFJQSxZQUFZLEdBQUc7QUFFakI7QUFFQUMsSUFBQUEsT0FBTyxFQUFFLE9BSlE7QUFNakI7QUFFQUMsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLFNBQVMsRUFBSyxDQURSO0FBQ1c7QUFDakJDLE1BQUFBLFlBQVksRUFBRSxDQUZSO0FBRVc7QUFDakJDLE1BQUFBLFNBQVMsRUFBSyxDQUhSO0FBR1c7QUFDakJDLE1BQUFBLE9BQU8sRUFBTyxDQUpSLENBSVc7O0FBSlgsS0FSUztBQWVqQkMsSUFBQUEsS0FBSyxFQUFFO0FBQ0xDLE1BQUFBLGtCQUFrQixFQUFFLEdBRGY7QUFDb0I7QUFDekJDLE1BQUFBLGtCQUFrQixFQUFFLEdBRmY7QUFFb0I7QUFDekJDLE1BQUFBLGdCQUFnQixFQUFJLEdBSGYsQ0FHbUI7O0FBSG5CLEtBZlU7QUFxQmpCQyxJQUFBQSxRQUFRLEVBQUUsR0FyQk87QUFzQmpCQyxJQUFBQSxLQUFLLEVBQUUsT0F0QlU7QUF3QmpCO0FBRUFDLElBQUFBLE1BQU0sRUFBRSxnQkFBU0MsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBRTVCLFVBQUlDLE9BQU8sR0FBUyxPQUFPRixHQUFHLENBQUNFLE9BQVgsSUFBc0IsUUFBdkIsR0FBbUM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFSCxHQUFHLENBQUNFO0FBQWIsT0FBbkMsR0FBNERGLEdBQUcsQ0FBQ0UsT0FBbkYsQ0FGNEIsQ0FFZ0U7O0FBQzVGLFVBQUlFLFFBQVEsR0FBT0osR0FBRyxDQUFDSSxRQUFKLElBQWdCSixHQUFHLENBQUMsT0FBRCxDQUF0QztBQUNBLFVBQUlLLEdBQUcsR0FBWUosTUFBTSxJQUFJRCxHQUFHLENBQUNDLE1BQWQsSUFBeUIsRUFBNUM7QUFD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Q3RDQSxJQUFBQSxNQUFNLENBQUNuRixZQUFQLEdBQXNCQSxZQUF0QjtBQUNELEdBRkksQ0FHTDtBQUNBO0FBQ0E7QUFMSyxPQU1BLElBQUksT0FBT29GLElBQVAsS0FBZ0IsV0FBcEIsRUFBaUM7QUFDcENBLElBQUFBLElBQUksQ0FBQ3BGLFlBQUwsR0FBb0JBLFlBQXBCO0FBQ0Q7QUFFRixDQTVORixHQUFEIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBKYXZhc2NyaXB0IFN0YXRlIE1hY2hpbmUgTGlicmFyeSAtIGh0dHBzOi8vZ2l0aHViLmNvbS9qYWtlc2dvcmRvbi9qYXZhc2NyaXB0LXN0YXRlLW1hY2hpbmVcbiAgQ29weXJpZ2h0IChjKSAyMDEyLCAyMDEzLCAyMDE0LCAyMDE1LCBKYWtlIEdvcmRvbiBhbmQgY29udHJpYnV0b3JzXG4gIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSAtIGh0dHBzOi8vZ2l0aHViLmNvbS9qYWtlc2dvcmRvbi9qYXZhc2NyaXB0LXN0YXRlLW1hY2hpbmUvYmxvYi9tYXN0ZXIvTElDRU5TRVxuKi9cblxuKGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciBTdGF0ZU1hY2hpbmUgPSB7XG4gIFxuICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgXG4gICAgICBWRVJTSU9OOiBcIjIuNC4wXCIsXG4gIFxuICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgXG4gICAgICBSZXN1bHQ6IHtcbiAgICAgICAgU1VDQ0VFREVEOiAgICAxLCAvLyB0aGUgZXZlbnQgdHJhbnNpdGlvbmVkIHN1Y2Nlc3NmdWxseSBmcm9tIG9uZSBzdGF0ZSB0byBhbm90aGVyXG4gICAgICAgIE5PVFJBTlNJVElPTjogMiwgLy8gdGhlIGV2ZW50IHdhcyBzdWNjZXNzZnVsbCBidXQgbm8gc3RhdGUgdHJhbnNpdGlvbiB3YXMgbmVjZXNzYXJ5XG4gICAgICAgIENBTkNFTExFRDogICAgMywgLy8gdGhlIGV2ZW50IHdhcyBjYW5jZWxsZWQgYnkgdGhlIGNhbGxlciBpbiBhIGJlZm9yZUV2ZW50IGNhbGxiYWNrXG4gICAgICAgIFBFTkRJTkc6ICAgICAgNCAgLy8gdGhlIGV2ZW50IGlzIGFzeW5jaHJvbm91cyBhbmQgdGhlIGNhbGxlciBpcyBpbiBjb250cm9sIG9mIHdoZW4gdGhlIHRyYW5zaXRpb24gb2NjdXJzXG4gICAgICB9LFxuICBcbiAgICAgIEVycm9yOiB7XG4gICAgICAgIElOVkFMSURfVFJBTlNJVElPTjogMTAwLCAvLyBjYWxsZXIgdHJpZWQgdG8gZmlyZSBhbiBldmVudCB0aGF0IHdhcyBpbm5hcHJvcHJpYXRlIGluIHRoZSBjdXJyZW50IHN0YXRlXG4gICAgICAgIFBFTkRJTkdfVFJBTlNJVElPTjogMjAwLCAvLyBjYWxsZXIgdHJpZWQgdG8gZmlyZSBhbiBldmVudCB3aGlsZSBhbiBhc3luYyB0cmFuc2l0aW9uIHdhcyBzdGlsbCBwZW5kaW5nXG4gICAgICAgIElOVkFMSURfQ0FMTEJBQ0s6ICAgMzAwIC8vIGNhbGxlciBwcm92aWRlZCBjYWxsYmFjayBmdW5jdGlvbiB0aHJldyBhbiBleGNlcHRpb25cbiAgICAgIH0sXG4gIFxuICAgICAgV0lMRENBUkQ6ICcqJyxcbiAgICAgIEFTWU5DOiAnYXN5bmMnLFxuICBcbiAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIFxuICAgICAgY3JlYXRlOiBmdW5jdGlvbihjZmcsIHRhcmdldCkge1xuICBcbiAgICAgICAgdmFyIGluaXRpYWwgICAgICA9ICh0eXBlb2YgY2ZnLmluaXRpYWwgPT0gJ3N0cmluZycpID8geyBzdGF0ZTogY2ZnLmluaXRpYWwgfSA6IGNmZy5pbml0aWFsOyAvLyBhbGxvdyBmb3IgYSBzaW1wbGUgc3RyaW5nLCBvciBhbiBvYmplY3Qgd2l0aCB7IHN0YXRlOiAnZm9vJywgZXZlbnQ6ICdzZXR1cCcsIGRlZmVyOiB0cnVlfGZhbHNlIH1cbiAgICAgICAgdmFyIHRlcm1pbmFsICAgICA9IGNmZy50ZXJtaW5hbCB8fCBjZmdbJ2ZpbmFsJ107XG4gICAgICAgIHZhciBmc20gICAgICAgICAgPSB0YXJnZXQgfHwgY2ZnLnRhcmdldCAgfHwge307XG4gICAgICAgIHZhciBldmVudHMgICAgICAgPSBjZmcuZXZlbnRzIHx8IFtdO1xuICAgICAgICB2YXIgY2FsbGJhY2tzICAgID0gY2ZnLmNhbGxiYWNrcyB8fCB7fTtcbiAgICAgICAgdmFyIG1hcCAgICAgICAgICA9IHt9OyAvLyB0cmFjayBzdGF0ZSB0cmFuc2l0aW9ucyBhbGxvd2VkIGZvciBhbiBldmVudCB7IGV2ZW50OiB7IGZyb206IFsgdG8gXSB9IH1cbiAgICAgICAgdmFyIHRyYW5zaXRpb25zICA9IHt9OyAvLyB0cmFjayBldmVudHMgYWxsb3dlZCBmcm9tIGEgc3RhdGUgICAgICAgICAgICB7IHN0YXRlOiBbIGV2ZW50IF0gfVxuICBcbiAgICAgICAgdmFyIGFkZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICB2YXIgZnJvbSA9IEFycmF5LmlzQXJyYXkoZS5mcm9tKSA/IGUuZnJvbSA6IChlLmZyb20gPyBbZS5mcm9tXSA6IFtTdGF0ZU1hY2hpbmUuV0lMRENBUkRdKTsgLy8gYWxsb3cgJ3dpbGRjYXJkJyB0cmFuc2l0aW9uIGlmICdmcm9tJyBpcyBub3Qgc3BlY2lmaWVkXG4gICAgICAgICAgbWFwW2UubmFtZV0gPSBtYXBbZS5uYW1lXSB8fCB7fTtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMCA7IG4gPCBmcm9tLmxlbmd0aCA7IG4rKykge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnNbZnJvbVtuXV0gPSB0cmFuc2l0aW9uc1tmcm9tW25dXSB8fCBbXTtcbiAgICAgICAgICAgIHRyYW5zaXRpb25zW2Zyb21bbl1dLnB1c2goZS5uYW1lKTtcbiAgXG4gICAgICAgICAgICBtYXBbZS5uYW1lXVtmcm9tW25dXSA9IGUudG8gfHwgZnJvbVtuXTsgLy8gYWxsb3cgbm8tb3AgdHJhbnNpdGlvbiBpZiAndG8nIGlzIG5vdCBzcGVjaWZpZWRcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGUudG8pXG4gICAgICAgICAgICB0cmFuc2l0aW9uc1tlLnRvXSA9IHRyYW5zaXRpb25zW2UudG9dIHx8IFtdO1xuICAgICAgICB9O1xuICBcbiAgICAgICAgaWYgKGluaXRpYWwpIHtcbiAgICAgICAgICBpbml0aWFsLmV2ZW50ID0gaW5pdGlhbC5ldmVudCB8fCAnc3RhcnR1cCc7XG4gICAgICAgICAgYWRkKHsgbmFtZTogaW5pdGlhbC5ldmVudCwgZnJvbTogJ25vbmUnLCB0bzogaW5pdGlhbC5zdGF0ZSB9KTtcbiAgICAgICAgfVxuICBcbiAgICAgICAgZm9yKHZhciBuID0gMCA7IG4gPCBldmVudHMubGVuZ3RoIDsgbisrKVxuICAgICAgICAgIGFkZChldmVudHNbbl0pO1xuICBcbiAgICAgICAgZm9yKHZhciBuYW1lIGluIG1hcCkge1xuICAgICAgICAgIGlmIChtYXAuaGFzT3duUHJvcGVydHkobmFtZSkpXG4gICAgICAgICAgICBmc21bbmFtZV0gPSBTdGF0ZU1hY2hpbmUuYnVpbGRFdmVudChuYW1lLCBtYXBbbmFtZV0pO1xuICAgICAgICB9XG4gIFxuICAgICAgICBmb3IodmFyIG5hbWUgaW4gY2FsbGJhY2tzKSB7XG4gICAgICAgICAgaWYgKGNhbGxiYWNrcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSlcbiAgICAgICAgICAgIGZzbVtuYW1lXSA9IGNhbGxiYWNrc1tuYW1lXVxuICAgICAgICB9XG4gIFxuICAgICAgICBmc20uY3VycmVudCAgICAgPSAnbm9uZSc7XG4gICAgICAgIGZzbS5pcyAgICAgICAgICA9IGZ1bmN0aW9uKHN0YXRlKSB7IHJldHVybiBBcnJheS5pc0FycmF5KHN0YXRlKSA/IChzdGF0ZS5pbmRleE9mKHRoaXMuY3VycmVudCkgPj0gMCkgOiAodGhpcy5jdXJyZW50ID09PSBzdGF0ZSk7IH07XG4gICAgICAgIGZzbS5jYW4gICAgICAgICA9IGZ1bmN0aW9uKGV2ZW50KSB7IHJldHVybiAhdGhpcy50cmFuc2l0aW9uICYmIChtYXBbZXZlbnRdICE9PSB1bmRlZmluZWQpICYmIChtYXBbZXZlbnRdLmhhc093blByb3BlcnR5KHRoaXMuY3VycmVudCkgfHwgbWFwW2V2ZW50XS5oYXNPd25Qcm9wZXJ0eShTdGF0ZU1hY2hpbmUuV0lMRENBUkQpKTsgfVxuICAgICAgICBmc20uY2Fubm90ICAgICAgPSBmdW5jdGlvbihldmVudCkgeyByZXR1cm4gIXRoaXMuY2FuKGV2ZW50KTsgfTtcbiAgICAgICAgZnNtLnRyYW5zaXRpb25zID0gZnVuY3Rpb24oKSAgICAgIHsgcmV0dXJuICh0cmFuc2l0aW9uc1t0aGlzLmN1cnJlbnRdIHx8IFtdKS5jb25jYXQodHJhbnNpdGlvbnNbU3RhdGVNYWNoaW5lLldJTERDQVJEXSB8fCBbXSk7IH07XG4gICAgICAgIGZzbS5pc0ZpbmlzaGVkICA9IGZ1bmN0aW9uKCkgICAgICB7IHJldHVybiB0aGlzLmlzKHRlcm1pbmFsKTsgfTtcbiAgICAgICAgZnNtLmVycm9yICAgICAgID0gY2ZnLmVycm9yIHx8IGZ1bmN0aW9uKG5hbWUsIGZyb20sIHRvLCBhcmdzLCBlcnJvciwgbXNnLCBlKSB7IHRocm93IGUgfHwgbXNnOyB9OyAvLyBkZWZhdWx0IGJlaGF2aW9yIHdoZW4gc29tZXRoaW5nIHVuZXhwZWN0ZWQgaGFwcGVucyBpcyB0byB0aHJvdyBhbiBleGNlcHRpb24sIGJ1dCBjYWxsZXIgY2FuIG92ZXJyaWRlIHRoaXMgYmVoYXZpb3IgaWYgZGVzaXJlZCAoc2VlIGdpdGh1YiBpc3N1ZSAjMyBhbmQgIzE3KVxuICAgICAgICBmc20uc3RhdGVzICAgICAgPSBmdW5jdGlvbigpIHsgcmV0dXJuIE9iamVjdC5rZXlzKHRyYW5zaXRpb25zKS5zb3J0KCkgfTtcbiAgXG4gICAgICAgIGlmIChpbml0aWFsICYmICFpbml0aWFsLmRlZmVyKVxuICAgICAgICAgIGZzbVtpbml0aWFsLmV2ZW50XSgpO1xuICBcbiAgICAgICAgcmV0dXJuIGZzbTtcbiAgXG4gICAgICB9LFxuICBcbiAgICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIFxuICAgICAgZG9DYWxsYmFjazogZnVuY3Rpb24oZnNtLCBmdW5jLCBuYW1lLCBmcm9tLCB0bywgYXJncykge1xuICAgICAgICBpZiAoZnVuYykge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuYy5hcHBseShmc20sIFtuYW1lLCBmcm9tLCB0b10uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2F0Y2goZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZzbS5lcnJvcihuYW1lLCBmcm9tLCB0bywgYXJncywgU3RhdGVNYWNoaW5lLkVycm9yLklOVkFMSURfQ0FMTEJBQ0ssIFwiYW4gZXhjZXB0aW9uIG9jY3VycmVkIGluIGEgY2FsbGVyLXByb3ZpZGVkIGNhbGxiYWNrIGZ1bmN0aW9uXCIsIGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgXG4gICAgICBiZWZvcmVBbnlFdmVudDogIGZ1bmN0aW9uKGZzbSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpIHsgcmV0dXJuIFN0YXRlTWFjaGluZS5kb0NhbGxiYWNrKGZzbSwgZnNtWydvbmJlZm9yZWV2ZW50J10sICAgICAgICAgICAgICAgICAgICAgICBuYW1lLCBmcm9tLCB0bywgYXJncyk7IH0sXG4gICAgICBhZnRlckFueUV2ZW50OiAgIGZ1bmN0aW9uKGZzbSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpIHsgcmV0dXJuIFN0YXRlTWFjaGluZS5kb0NhbGxiYWNrKGZzbSwgZnNtWydvbmFmdGVyZXZlbnQnXSB8fCBmc21bJ29uZXZlbnQnXSwgICAgICBuYW1lLCBmcm9tLCB0bywgYXJncyk7IH0sXG4gICAgICBsZWF2ZUFueVN0YXRlOiAgIGZ1bmN0aW9uKGZzbSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpIHsgcmV0dXJuIFN0YXRlTWFjaGluZS5kb0NhbGxiYWNrKGZzbSwgZnNtWydvbmxlYXZlc3RhdGUnXSwgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLCBmcm9tLCB0bywgYXJncyk7IH0sXG4gICAgICBlbnRlckFueVN0YXRlOiAgIGZ1bmN0aW9uKGZzbSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpIHsgcmV0dXJuIFN0YXRlTWFjaGluZS5kb0NhbGxiYWNrKGZzbSwgZnNtWydvbmVudGVyc3RhdGUnXSB8fCBmc21bJ29uc3RhdGUnXSwgICAgICBuYW1lLCBmcm9tLCB0bywgYXJncyk7IH0sXG4gICAgICBjaGFuZ2VTdGF0ZTogICAgIGZ1bmN0aW9uKGZzbSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpIHsgcmV0dXJuIFN0YXRlTWFjaGluZS5kb0NhbGxiYWNrKGZzbSwgZnNtWydvbmNoYW5nZXN0YXRlJ10sICAgICAgICAgICAgICAgICAgICAgICBuYW1lLCBmcm9tLCB0bywgYXJncyk7IH0sXG4gIFxuICAgICAgYmVmb3JlVGhpc0V2ZW50OiBmdW5jdGlvbihmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKSB7IHJldHVybiBTdGF0ZU1hY2hpbmUuZG9DYWxsYmFjayhmc20sIGZzbVsnb25iZWZvcmUnICsgbmFtZV0sICAgICAgICAgICAgICAgICAgICAgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpOyB9LFxuICAgICAgYWZ0ZXJUaGlzRXZlbnQ6ICBmdW5jdGlvbihmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKSB7IHJldHVybiBTdGF0ZU1hY2hpbmUuZG9DYWxsYmFjayhmc20sIGZzbVsnb25hZnRlcicgICsgbmFtZV0gfHwgZnNtWydvbicgKyBuYW1lXSwgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpOyB9LFxuICAgICAgbGVhdmVUaGlzU3RhdGU6ICBmdW5jdGlvbihmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKSB7IHJldHVybiBTdGF0ZU1hY2hpbmUuZG9DYWxsYmFjayhmc20sIGZzbVsnb25sZWF2ZScgICsgZnJvbV0sICAgICAgICAgICAgICAgICAgICAgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpOyB9LFxuICAgICAgZW50ZXJUaGlzU3RhdGU6ICBmdW5jdGlvbihmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKSB7IHJldHVybiBTdGF0ZU1hY2hpbmUuZG9DYWxsYmFjayhmc20sIGZzbVsnb25lbnRlcicgICsgdG9dICAgfHwgZnNtWydvbicgKyB0b10sICAgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpOyB9LFxuICBcbiAgICAgIGJlZm9yZUV2ZW50OiBmdW5jdGlvbihmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKSB7XG4gICAgICAgIGlmICgoZmFsc2UgPT09IFN0YXRlTWFjaGluZS5iZWZvcmVUaGlzRXZlbnQoZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncykpIHx8XG4gICAgICAgICAgICAoZmFsc2UgPT09IFN0YXRlTWFjaGluZS5iZWZvcmVBbnlFdmVudCggZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncykpKVxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0sXG4gIFxuICAgICAgYWZ0ZXJFdmVudDogZnVuY3Rpb24oZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncykge1xuICAgICAgICBTdGF0ZU1hY2hpbmUuYWZ0ZXJUaGlzRXZlbnQoZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyk7XG4gICAgICAgIFN0YXRlTWFjaGluZS5hZnRlckFueUV2ZW50KCBmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKTtcbiAgICAgIH0sXG4gIFxuICAgICAgbGVhdmVTdGF0ZTogZnVuY3Rpb24oZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncykge1xuICAgICAgICB2YXIgc3BlY2lmaWMgPSBTdGF0ZU1hY2hpbmUubGVhdmVUaGlzU3RhdGUoZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyksXG4gICAgICAgICAgICBnZW5lcmFsICA9IFN0YXRlTWFjaGluZS5sZWF2ZUFueVN0YXRlKCBmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKTtcbiAgICAgICAgaWYgKChmYWxzZSA9PT0gc3BlY2lmaWMpIHx8IChmYWxzZSA9PT0gZ2VuZXJhbCkpXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBlbHNlIGlmICgoU3RhdGVNYWNoaW5lLkFTWU5DID09PSBzcGVjaWZpYykgfHwgKFN0YXRlTWFjaGluZS5BU1lOQyA9PT0gZ2VuZXJhbCkpXG4gICAgICAgICAgcmV0dXJuIFN0YXRlTWFjaGluZS5BU1lOQztcbiAgICAgIH0sXG4gIFxuICAgICAgZW50ZXJTdGF0ZTogZnVuY3Rpb24oZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncykge1xuICAgICAgICBTdGF0ZU1hY2hpbmUuZW50ZXJUaGlzU3RhdGUoZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyk7XG4gICAgICAgIFN0YXRlTWFjaGluZS5lbnRlckFueVN0YXRlKCBmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKTtcbiAgICAgIH0sXG4gIFxuICAgICAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgICBidWlsZEV2ZW50OiBmdW5jdGlvbihuYW1lLCBtYXApIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICBcbiAgICAgICAgICB2YXIgZnJvbSAgPSB0aGlzLmN1cnJlbnQ7XG4gICAgICAgICAgdmFyIHRvICAgID0gbWFwW2Zyb21dIHx8IChtYXBbU3RhdGVNYWNoaW5lLldJTERDQVJEXSAhPSBTdGF0ZU1hY2hpbmUuV0lMRENBUkQgPyBtYXBbU3RhdGVNYWNoaW5lLldJTERDQVJEXSA6IGZyb20pIHx8IGZyb207XG4gICAgICAgICAgdmFyIGFyZ3MgID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTsgLy8gdHVybiBhcmd1bWVudHMgaW50byBwdXJlIGFycmF5XG4gIFxuICAgICAgICAgIGlmICh0aGlzLnRyYW5zaXRpb24pXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lcnJvcihuYW1lLCBmcm9tLCB0bywgYXJncywgU3RhdGVNYWNoaW5lLkVycm9yLlBFTkRJTkdfVFJBTlNJVElPTiwgXCJldmVudCBcIiArIG5hbWUgKyBcIiBpbmFwcHJvcHJpYXRlIGJlY2F1c2UgcHJldmlvdXMgdHJhbnNpdGlvbiBkaWQgbm90IGNvbXBsZXRlXCIpO1xuICBcbiAgICAgICAgICBpZiAodGhpcy5jYW5ub3QobmFtZSkpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lcnJvcihuYW1lLCBmcm9tLCB0bywgYXJncywgU3RhdGVNYWNoaW5lLkVycm9yLklOVkFMSURfVFJBTlNJVElPTiwgXCJldmVudCBcIiArIG5hbWUgKyBcIiBpbmFwcHJvcHJpYXRlIGluIGN1cnJlbnQgc3RhdGUgXCIgKyB0aGlzLmN1cnJlbnQpO1xuICBcbiAgICAgICAgICBpZiAoZmFsc2UgPT09IFN0YXRlTWFjaGluZS5iZWZvcmVFdmVudCh0aGlzLCBuYW1lLCBmcm9tLCB0bywgYXJncykpXG4gICAgICAgICAgICByZXR1cm4gU3RhdGVNYWNoaW5lLlJlc3VsdC5DQU5DRUxMRUQ7XG4gIFxuICAgICAgICAgIGlmIChmcm9tID09PSB0bykge1xuICAgICAgICAgICAgU3RhdGVNYWNoaW5lLmFmdGVyRXZlbnQodGhpcywgbmFtZSwgZnJvbSwgdG8sIGFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIFN0YXRlTWFjaGluZS5SZXN1bHQuTk9UUkFOU0lUSU9OO1xuICAgICAgICAgIH1cbiAgXG4gICAgICAgICAgLy8gcHJlcGFyZSBhIHRyYW5zaXRpb24gbWV0aG9kIGZvciB1c2UgRUlUSEVSIGxvd2VyIGRvd24sIG9yIGJ5IGNhbGxlciBpZiB0aGV5IHdhbnQgYW4gYXN5bmMgdHJhbnNpdGlvbiAoaW5kaWNhdGVkIGJ5IGFuIEFTWU5DIHJldHVybiB2YWx1ZSBmcm9tIGxlYXZlU3RhdGUpXG4gICAgICAgICAgdmFyIGZzbSA9IHRoaXM7XG4gICAgICAgICAgdGhpcy50cmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBmc20udHJhbnNpdGlvbiA9IG51bGw7IC8vIHRoaXMgbWV0aG9kIHNob3VsZCBvbmx5IGV2ZXIgYmUgY2FsbGVkIG9uY2VcbiAgICAgICAgICAgIGZzbS5jdXJyZW50ID0gdG87XG4gICAgICAgICAgICBTdGF0ZU1hY2hpbmUuZW50ZXJTdGF0ZSggZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyk7XG4gICAgICAgICAgICBTdGF0ZU1hY2hpbmUuY2hhbmdlU3RhdGUoZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyk7XG4gICAgICAgICAgICBTdGF0ZU1hY2hpbmUuYWZ0ZXJFdmVudCggZnNtLCBuYW1lLCBmcm9tLCB0bywgYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gU3RhdGVNYWNoaW5lLlJlc3VsdC5TVUNDRUVERUQ7XG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLnRyYW5zaXRpb24uY2FuY2VsID0gZnVuY3Rpb24oKSB7IC8vIHByb3ZpZGUgYSB3YXkgZm9yIGNhbGxlciB0byBjYW5jZWwgYXN5bmMgdHJhbnNpdGlvbiBpZiBkZXNpcmVkIChpc3N1ZSAjMjIpXG4gICAgICAgICAgICBmc20udHJhbnNpdGlvbiA9IG51bGw7XG4gICAgICAgICAgICBTdGF0ZU1hY2hpbmUuYWZ0ZXJFdmVudChmc20sIG5hbWUsIGZyb20sIHRvLCBhcmdzKTtcbiAgICAgICAgICB9XG4gIFxuICAgICAgICAgIHZhciBsZWF2ZSA9IFN0YXRlTWFjaGluZS5sZWF2ZVN0YXRlKHRoaXMsIG5hbWUsIGZyb20sIHRvLCBhcmdzKTtcbiAgICAgICAgICBpZiAoZmFsc2UgPT09IGxlYXZlKSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zaXRpb24gPSBudWxsO1xuICAgICAgICAgICAgcmV0dXJuIFN0YXRlTWFjaGluZS5SZXN1bHQuQ0FOQ0VMTEVEO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIGlmIChTdGF0ZU1hY2hpbmUuQVNZTkMgPT09IGxlYXZlKSB7XG4gICAgICAgICAgICByZXR1cm4gU3RhdGVNYWNoaW5lLlJlc3VsdC5QRU5ESU5HO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnRyYW5zaXRpb24pIC8vIG5lZWQgdG8gY2hlY2sgaW4gY2FzZSB1c2VyIG1hbnVhbGx5IGNhbGxlZCB0cmFuc2l0aW9uKCkgYnV0IGZvcmdvdCB0byByZXR1cm4gU3RhdGVNYWNoaW5lLkFTWU5DXG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLnRyYW5zaXRpb24oKTtcbiAgICAgICAgICB9XG4gIFxuICAgICAgICB9O1xuICAgICAgfVxuICBcbiAgICB9OyAvLyBTdGF0ZU1hY2hpbmVcbiAgXG4gICAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgXG4gICAgLy89PT09PT1cbiAgICAvLyBOT0RFXG4gICAgLy89PT09PT1cbiAgICBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gU3RhdGVNYWNoaW5lO1xuICAgICAgfVxuICAgICAgZXhwb3J0cy5TdGF0ZU1hY2hpbmUgPSBTdGF0ZU1hY2hpbmU7XG4gICAgfVxuICAgIC8vPT09PT09PT09PT09XG4gICAgLy8gQU1EL1JFUVVJUkVcbiAgICAvLz09PT09PT09PT09PVxuICAgIGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgZGVmaW5lKGZ1bmN0aW9uKHJlcXVpcmUpIHsgcmV0dXJuIFN0YXRlTWFjaGluZTsgfSk7XG4gICAgfVxuICAgIC8vPT09PT09PT1cbiAgICAvLyBCUk9XU0VSXG4gICAgLy89PT09PT09PVxuICAgIGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB3aW5kb3cuU3RhdGVNYWNoaW5lID0gU3RhdGVNYWNoaW5lO1xuICAgIH1cbiAgICAvLz09PT09PT09PT09XG4gICAgLy8gV0VCIFdPUktFUlxuICAgIC8vPT09PT09PT09PT1cbiAgICBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHNlbGYuU3RhdGVNYWNoaW5lID0gU3RhdGVNYWNoaW5lO1xuICAgIH1cbiAgXG4gIH0oKSk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Scene/Scene.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b13f3yncLhOvJSRs1QLB0sR', 'Scene');
// Script/Scene/Scene.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("../Logic/Game");
var AdapterMgr_1 = require("../UIFrame/AdapterMgr");
var EventCenter_1 = require("../UIFrame/EventCenter");
var EventType_1 = require("../UIFrame/EventType");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Scene = /** @class */ (function (_super) {
    __extends(Scene, _super);
    function Scene() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ndBlock = null;
        /** 设置是否阻挡游戏触摸输入 */
        _this._block = 0;
        return _this;
    }
    Scene_1 = Scene;
    Scene.prototype.onLoad = function () {
        this.initBlockNode();
    };
    Scene.prototype.initBlockNode = function () {
        this.ndBlock = new cc.Node("block");
        this.ndBlock.addComponent(cc.BlockInputEvents);
        this.node.addChild(this.ndBlock, cc.macro.MAX_ZINDEX);
    };
    Scene.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        Scene_1.inst = this;
                        AdapterMgr_1.default.inst.adapteByType(AdapterMgr_1.AdapterType.StretchHeight | AdapterMgr_1.AdapterType.StretchWidth, this.node);
                        return [4 /*yield*/, this.onGameInit()];
                    case 1:
                        _a.sent();
                        this.registerEvent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 游戏初始化 */
    Scene.prototype.onGameInit = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // 第一步 展示loading页面，当然有些默认就是loading页面
                    // 第二步 初始化游戏（Managers，Configs，SDKs）
                    return [4 /*yield*/, Game_1.default.init(this.node)];
                    case 1:
                        // 第一步 展示loading页面，当然有些默认就是loading页面
                        // 第二步 初始化游戏（Managers，Configs，SDKs）
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 初始化事件 */
    Scene.prototype.registerEvent = function () {
        if (cc.sys.platform === cc.sys.WECHAT_GAME) {
            wx.onShow(this.onGameShow.bind(this));
            wx.onHide(this.onGameHide.bind(this));
        }
        else {
            cc.game.on(cc.game.EVENT_SHOW, this.onGameShow, this);
            cc.game.on(cc.game.EVENT_HIDE, this.onGameHide, this);
        }
    };
    Scene.prototype.onGameShow = function (param) {
        EventCenter_1.EventCenter.emit(EventType_1.EventType.GameShow, param);
        cc.director.resume();
    };
    Scene.prototype.onGameHide = function () {
        EventCenter_1.EventCenter.emit(EventType_1.EventType.GameHide);
        cc.director.pause();
    };
    Scene.prototype.update = function (dt) {
        Game_1.default.update(dt);
    };
    Scene.prototype.lateUpdate = function () {
    };
    Scene.prototype.setInputBlock = function (bool) {
        if (!this.ndBlock) {
            cc.warn("未启用 block input");
            return;
        }
        bool ? ++this._block : --this._block;
        this.ndBlock.active = this._block > 0;
    };
    var Scene_1;
    Scene.inst = null;
    Scene = Scene_1 = __decorate([
        ccclass
    ], Scene);
    return Scene;
}(cc.Component));
exports.default = Scene;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvU2NlbmUvU2NlbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0NBQWlDO0FBQ2pDLG9EQUFnRTtBQUNoRSxzREFBcUQ7QUFDckQsa0RBQWlEO0FBRTNDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQW1DLHlCQUFZO0lBQS9DO1FBQUEscUVBcUVDO1FBbEVXLGFBQU8sR0FBWSxJQUFJLENBQUM7UUF3RGhDLG1CQUFtQjtRQUNYLFlBQU0sR0FBRyxDQUFDLENBQUM7O0lBU3ZCLENBQUM7Y0FyRW9CLEtBQUs7SUFJdEIsc0JBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRU0sNkJBQWEsR0FBcEI7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVZLHFCQUFLLEdBQWxCOzs7Ozt3QkFDSSxPQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQzt3QkFDbEIsb0JBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLHdCQUFXLENBQUMsYUFBYSxHQUFHLHdCQUFXLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDOUYscUJBQU0sSUFBSSxDQUFDLFVBQVUsRUFBRSxFQUFBOzt3QkFBdkIsU0FBdUIsQ0FBQzt3QkFDeEIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDOzs7OztLQUN4QjtJQUNELFlBQVk7SUFDQywwQkFBVSxHQUF2Qjs7Ozs7b0JBQ0ksb0NBQW9DO29CQUVwQyxtQ0FBbUM7b0JBQ25DLHFCQUFNLGNBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFBOzt3QkFIMUIsb0NBQW9DO3dCQUVwQyxtQ0FBbUM7d0JBQ25DLFNBQTBCLENBQUM7Ozs7O0tBSzlCO0lBQ0QsWUFBWTtJQUNKLDZCQUFhLEdBQXJCO1FBQ0ksSUFBRyxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUN2QyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQ3pDO2FBQUs7WUFDRixFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3RELEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDekQ7SUFDTCxDQUFDO0lBRU8sMEJBQVUsR0FBbEIsVUFBbUIsS0FBVTtRQUN6Qix5QkFBVyxDQUFDLElBQUksQ0FBQyxxQkFBUyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM1QyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFBO0lBQ3hCLENBQUM7SUFDTywwQkFBVSxHQUFsQjtRQUNJLHlCQUFXLENBQUMsSUFBSSxDQUFDLHFCQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU0sc0JBQU0sR0FBYixVQUFjLEVBQVU7UUFDcEIsY0FBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwQixDQUFDO0lBRU0sMEJBQVUsR0FBakI7SUFFQSxDQUFDO0lBSU0sNkJBQWEsR0FBcEIsVUFBcUIsSUFBYTtRQUM5QixJQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNkLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUMzQixPQUFRO1NBQ1g7UUFDRCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7O0lBbEVhLFVBQUksR0FBVSxJQUFJLENBQUM7SUFGaEIsS0FBSztRQUR6QixPQUFPO09BQ2EsS0FBSyxDQXFFekI7SUFBRCxZQUFDO0NBckVELEFBcUVDLENBckVrQyxFQUFFLENBQUMsU0FBUyxHQXFFOUM7a0JBckVvQixLQUFLIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWUgZnJvbSBcIi4uL0xvZ2ljL0dhbWVcIjtcbmltcG9ydCBBZGFwdGVyTWdyLCB7IEFkYXB0ZXJUeXBlIH0gZnJvbSBcIi4uL1VJRnJhbWUvQWRhcHRlck1nclwiO1xuaW1wb3J0IHsgRXZlbnRDZW50ZXIgfSBmcm9tIFwiLi4vVUlGcmFtZS9FdmVudENlbnRlclwiO1xuaW1wb3J0IHsgRXZlbnRUeXBlIH0gZnJvbSBcIi4uL1VJRnJhbWUvRXZlbnRUeXBlXCI7XG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2NlbmUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgcHVibGljIHN0YXRpYyBpbnN0OiBTY2VuZSA9IG51bGw7XG4gICAgcHJpdmF0ZSBuZEJsb2NrOiBjYy5Ob2RlID0gbnVsbDtcbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIHRoaXMuaW5pdEJsb2NrTm9kZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0QmxvY2tOb2RlKCkge1xuICAgICAgICB0aGlzLm5kQmxvY2sgPSBuZXcgY2MuTm9kZShcImJsb2NrXCIpO1xuICAgICAgICB0aGlzLm5kQmxvY2suYWRkQ29tcG9uZW50KGNjLkJsb2NrSW5wdXRFdmVudHMpO1xuICAgICAgICB0aGlzLm5vZGUuYWRkQ2hpbGQodGhpcy5uZEJsb2NrLCBjYy5tYWNyby5NQVhfWklOREVYKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQoKSB7XG4gICAgICAgIFNjZW5lLmluc3QgPSB0aGlzO1xuICAgICAgICBBZGFwdGVyTWdyLmluc3QuYWRhcHRlQnlUeXBlKEFkYXB0ZXJUeXBlLlN0cmV0Y2hIZWlnaHQgfCBBZGFwdGVyVHlwZS5TdHJldGNoV2lkdGgsIHRoaXMubm9kZSk7XG4gICAgICAgIGF3YWl0IHRoaXMub25HYW1lSW5pdCgpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoKTtcbiAgICB9XG4gICAgLyoqIOa4uOaIj+WIneWni+WMliAqL1xuICAgIHB1YmxpYyBhc3luYyBvbkdhbWVJbml0KCkge1xuICAgICAgICAvLyDnrKzkuIDmraUg5bGV56S6bG9hZGluZ+mhtemdou+8jOW9k+eEtuacieS6m+m7mOiupOWwseaYr2xvYWRpbmfpobXpnaJcblxuICAgICAgICAvLyDnrKzkuozmraUg5Yid5aeL5YyW5ri45oiP77yITWFuYWdlcnPvvIxDb25maWdz77yMU0RLc++8iVxuICAgICAgICBhd2FpdCBHYW1lLmluaXQodGhpcy5ub2RlKTtcbiAgICAgICAgLy8g56ys5LiJ5q2lIOaehOW7uuWIneWni+WcuuaZr++8iOWKoOi9veW/heimgeeahHByZWZhYu+8jOmfs+mike+8jHRleHR1cmXvvIlcblxuICAgICAgICAvLyDnrKzlm5vmraUg5Yqg6L295Li755WM6Z2iVUks5YWz5o6JbG9hZGluZ+mhtemdoizmraPlvI/ov5vlhaXmuLjmiI9cblxuICAgIH1cbiAgICAvKiog5Yid5aeL5YyW5LqL5Lu2ICovXG4gICAgcHJpdmF0ZSByZWdpc3RlckV2ZW50KCkge1xuICAgICAgICBpZihjYy5zeXMucGxhdGZvcm0gPT09IGNjLnN5cy5XRUNIQVRfR0FNRSkge1xuICAgICAgICAgICAgd3gub25TaG93KHRoaXMub25HYW1lU2hvdy5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIHd4Lm9uSGlkZSh0aGlzLm9uR2FtZUhpZGUuYmluZCh0aGlzKSk7XG4gICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgIGNjLmdhbWUub24oY2MuZ2FtZS5FVkVOVF9TSE9XLCB0aGlzLm9uR2FtZVNob3csIHRoaXMpO1xuICAgICAgICAgICAgY2MuZ2FtZS5vbihjYy5nYW1lLkVWRU5UX0hJREUsIHRoaXMub25HYW1lSGlkZSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uR2FtZVNob3cocGFyYW06IGFueSkge1xuICAgICAgICBFdmVudENlbnRlci5lbWl0KEV2ZW50VHlwZS5HYW1lU2hvdywgcGFyYW0pO1xuICAgICAgICBjYy5kaXJlY3Rvci5yZXN1bWUoKVxuICAgIH1cbiAgICBwcml2YXRlIG9uR2FtZUhpZGUoKSB7XG4gICAgICAgIEV2ZW50Q2VudGVyLmVtaXQoRXZlbnRUeXBlLkdhbWVIaWRlKTtcbiAgICAgICAgY2MuZGlyZWN0b3IucGF1c2UoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdXBkYXRlKGR0OiBudW1iZXIpIHtcbiAgICAgICAgR2FtZS51cGRhdGUoZHQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBsYXRlVXBkYXRlKCkge1xuXG4gICAgfVxuXG4gICAgLyoqIOiuvue9ruaYr+WQpumYu+aMoea4uOaIj+inpuaRuOi+k+WFpSAqL1xuICAgIHByaXZhdGUgX2Jsb2NrID0gMDtcbiAgICBwdWJsaWMgc2V0SW5wdXRCbG9jayhib29sOiBib29sZWFuKSB7XG4gICAgICAgIGlmKCF0aGlzLm5kQmxvY2spIHtcbiAgICAgICAgICAgIGNjLndhcm4oXCLmnKrlkK/nlKggYmxvY2sgaW5wdXRcIik7XG4gICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICB9XG4gICAgICAgIGJvb2wgPyArKyB0aGlzLl9ibG9jayA6IC0tIHRoaXMuX2Jsb2NrO1xuICAgICAgICB0aGlzLm5kQmxvY2suYWN0aXZlID0gdGhpcy5fYmxvY2sgPiAwO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UILoading_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd6a9c7+3lFNSZtgW9z8QvXg', 'UILoading_Auto');
// Script/AutoScripts/UILoading_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILoading_Auto = /** @class */ (function (_super) {
    __extends(UILoading_Auto, _super);
    function UILoading_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Right = null;
        _this.Left = null;
        return _this;
    }
    __decorate([
        property(cc.Node)
    ], UILoading_Auto.prototype, "Right", void 0);
    __decorate([
        property(cc.Node)
    ], UILoading_Auto.prototype, "Left", void 0);
    UILoading_Auto = __decorate([
        ccclass
    ], UILoading_Auto);
    return UILoading_Auto;
}(cc.Component));
exports.default = UILoading_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlMb2FkaW5nX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBNEMsa0NBQVk7SUFBeEQ7UUFBQSxxRUFNQztRQUpBLFdBQUssR0FBWSxJQUFJLENBQUM7UUFFdEIsVUFBSSxHQUFZLElBQUksQ0FBQzs7SUFFdEIsQ0FBQztJQUpBO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7aURBQ0k7SUFFdEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztnREFDRztJQUpELGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FNbEM7SUFBRCxxQkFBQztDQU5ELEFBTUMsQ0FOMkMsRUFBRSxDQUFDLFNBQVMsR0FNdkQ7a0JBTm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlMb2FkaW5nX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoY2MuTm9kZSlcblx0UmlnaHQ6IGNjLk5vZGUgPSBudWxsO1xuXHRAcHJvcGVydHkoY2MuTm9kZSlcblx0TGVmdDogY2MuTm9kZSA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UILevel_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a077dk8+/xJHLVJDt0+l4cP', 'UILevel_Auto');
// Script/AutoScripts/UILevel_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILevel_Auto = /** @class */ (function (_super) {
    __extends(UILevel_Auto, _super);
    function UILevel_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Setting = null;
        _this.Skills = null;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UILevel_Auto.prototype, "Setting", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UILevel_Auto.prototype, "Skills", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UILevel_Auto.prototype, "Back", void 0);
    UILevel_Auto = __decorate([
        ccclass
    ], UILevel_Auto);
    return UILevel_Auto;
}(cc.Component));
exports.default = UILevel_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlMZXZlbF9BdXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdFQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUEwQyxnQ0FBWTtJQUF0RDtRQUFBLHFFQVFDO1FBTkEsYUFBTyxHQUFlLElBQUksQ0FBQztRQUUzQixZQUFNLEdBQWUsSUFBSSxDQUFDO1FBRTFCLFVBQUksR0FBZSxJQUFJLENBQUM7O0lBRXpCLENBQUM7SUFOQTtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO2lEQUNNO0lBRTNCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7Z0RBQ0s7SUFFMUI7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzs4Q0FDRztJQU5KLFlBQVk7UUFEaEMsT0FBTztPQUNhLFlBQVksQ0FRaEM7SUFBRCxtQkFBQztDQVJELEFBUUMsQ0FSeUMsRUFBRSxDQUFDLFNBQVMsR0FRckQ7a0JBUm9CLFlBQVkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUxldmVsX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0U2V0dGluZzogQnV0dG9uUGx1cyA9IG51bGw7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRTa2lsbHM6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0QmFjazogQnV0dG9uUGx1cyA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIDungeon_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '74ba6VsKwJNPo4au7YjBx4f', 'UIDungeon_Auto');
// Script/AutoScripts/UIDungeon_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIDungeon_Auto = /** @class */ (function (_super) {
    __extends(UIDungeon_Auto, _super);
    function UIDungeon_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Items = null;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(cc.Node)
    ], UIDungeon_Auto.prototype, "Items", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIDungeon_Auto.prototype, "Back", void 0);
    UIDungeon_Auto = __decorate([
        ccclass
    ], UIDungeon_Auto);
    return UIDungeon_Auto;
}(cc.Component));
exports.default = UIDungeon_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlEdW5nZW9uX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBTUM7UUFKQSxXQUFLLEdBQVksSUFBSSxDQUFDO1FBRXRCLFVBQUksR0FBZSxJQUFJLENBQUM7O0lBRXpCLENBQUM7SUFKQTtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO2lEQUNJO0lBRXRCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7Z0RBQ0c7SUFKSixjQUFjO1FBRGxDLE9BQU87T0FDYSxjQUFjLENBTWxDO0lBQUQscUJBQUM7Q0FORCxBQU1DLENBTjJDLEVBQUUsQ0FBQyxTQUFTLEdBTXZEO2tCQU5vQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlEdW5nZW9uX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoY2MuTm9kZSlcblx0SXRlbXM6IGNjLk5vZGUgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0QmFjazogQnV0dG9uUGx1cyA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIMap_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'adecbZD4u1CU5tY/U48Fb7E', 'UIMap_Auto');
// Script/AutoScripts/UIMap_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIMap_Auto = /** @class */ (function (_super) {
    __extends(UIMap_Auto, _super);
    function UIMap_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Round = null;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMap_Auto.prototype, "Round", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMap_Auto.prototype, "Back", void 0);
    UIMap_Auto = __decorate([
        ccclass
    ], UIMap_Auto);
    return UIMap_Auto;
}(cc.Component));
exports.default = UIMap_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlNYXBfQXV0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBMEQ7QUFFcEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUFNQztRQUpBLFdBQUssR0FBZSxJQUFJLENBQUM7UUFFekIsVUFBSSxHQUFlLElBQUksQ0FBQzs7SUFFekIsQ0FBQztJQUpBO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7NkNBQ0k7SUFFekI7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzs0Q0FDRztJQUpKLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FNOUI7SUFBRCxpQkFBQztDQU5ELEFBTUMsQ0FOdUMsRUFBRSxDQUFDLFNBQVMsR0FNbkQ7a0JBTm9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSU1hcF9BdXRvIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdFJvdW5kOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJhY2s6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UILogin_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a88begnTmZOIY7ImNZFjPCO', 'UILogin_Auto');
// Script/AutoScripts/UILogin_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILogin_Auto = /** @class */ (function (_super) {
    __extends(UILogin_Auto, _super);
    function UILogin_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Login = null;
        _this.btn = null;
        _this.Name = null;
        return _this;
    }
    __decorate([
        property(cc.Node)
    ], UILogin_Auto.prototype, "Login", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UILogin_Auto.prototype, "btn", void 0);
    __decorate([
        property(cc.Label)
    ], UILogin_Auto.prototype, "Name", void 0);
    UILogin_Auto = __decorate([
        ccclass
    ], UILogin_Auto);
    return UILogin_Auto;
}(cc.Component));
exports.default = UILogin_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlMb2dpbl9BdXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdFQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUEwQyxnQ0FBWTtJQUF0RDtRQUFBLHFFQVFDO1FBTkEsV0FBSyxHQUFZLElBQUksQ0FBQztRQUV0QixTQUFHLEdBQWUsSUFBSSxDQUFDO1FBRXZCLFVBQUksR0FBYSxJQUFJLENBQUM7O0lBRXZCLENBQUM7SUFOQTtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOytDQUNJO0lBRXRCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7NkNBQ0U7SUFFdkI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzs4Q0FDRztJQU5GLFlBQVk7UUFEaEMsT0FBTztPQUNhLFlBQVksQ0FRaEM7SUFBRCxtQkFBQztDQVJELEFBUUMsQ0FSeUMsRUFBRSxDQUFDLFNBQVMsR0FRckQ7a0JBUm9CLFlBQVkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUxvZ2luX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoY2MuTm9kZSlcblx0TG9naW46IGNjLk5vZGUgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0YnRuOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KGNjLkxhYmVsKVxuXHROYW1lOiBjYy5MYWJlbCA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIECSView_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '05b26GD8QtA74GhissSA2qn', 'UIECSView_Auto');
// Script/AutoScripts/UIECSView_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIECSView_Auto = /** @class */ (function (_super) {
    __extends(UIECSView_Auto, _super);
    function UIECSView_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIECSView_Auto.prototype, "Back", void 0);
    UIECSView_Auto = __decorate([
        ccclass
    ], UIECSView_Auto);
    return UIECSView_Auto;
}(cc.Component));
exports.default = UIECSView_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlFQ1NWaWV3X0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBSUM7UUFGQSxVQUFJLEdBQWUsSUFBSSxDQUFDOztJQUV6QixDQUFDO0lBRkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQztnREFDRztJQUZKLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FJbEM7SUFBRCxxQkFBQztDQUpELEFBSUMsQ0FKMkMsRUFBRSxDQUFDLFNBQVMsR0FJdkQ7a0JBSm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUVDU1ZpZXdfQXV0byBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRCYWNrOiBCdXR0b25QbHVzID0gbnVsbDtcbiBcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIPop_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ff343z++axN/JazAmdJADSo', 'UIPop_Auto');
// Script/AutoScripts/UIPop_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIPop_Auto = /** @class */ (function (_super) {
    __extends(UIPop_Auto, _super);
    function UIPop_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Close = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIPop_Auto.prototype, "Close", void 0);
    UIPop_Auto = __decorate([
        ccclass
    ], UIPop_Auto);
    return UIPop_Auto;
}(cc.Component));
exports.default = UIPop_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlQb3BfQXV0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBMEQ7QUFFcEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUFJQztRQUZBLFdBQUssR0FBZSxJQUFJLENBQUM7O0lBRTFCLENBQUM7SUFGQTtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDOzZDQUNJO0lBRkwsVUFBVTtRQUQ5QixPQUFPO09BQ2EsVUFBVSxDQUk5QjtJQUFELGlCQUFDO0NBSkQsQUFJQyxDQUp1QyxFQUFFLENBQUMsU0FBUyxHQUluRDtrQkFKb0IsVUFBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IEJ1dHRvblBsdXMgZnJvbSBcIi4vLi4vQ29tbW9uL0NvbXBvbmVudHMvQnV0dG9uUGx1c1wiXG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJUG9wX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0Q2xvc2U6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UILight_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8c485spEilPeKnloxpdqCcq', 'UILight_Auto');
// Script/AutoScripts/UILight_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UILight_Auto = /** @class */ (function (_super) {
    __extends(UILight_Auto, _super);
    function UILight_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UILight_Auto.prototype, "Back", void 0);
    UILight_Auto = __decorate([
        ccclass
    ], UILight_Auto);
    return UILight_Auto;
}(cc.Component));
exports.default = UILight_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlMaWdodF9BdXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdFQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUEwQyxnQ0FBWTtJQUF0RDtRQUFBLHFFQUlDO1FBRkEsVUFBSSxHQUFlLElBQUksQ0FBQzs7SUFFekIsQ0FBQztJQUZBO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7OENBQ0c7SUFGSixZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBSWhDO0lBQUQsbUJBQUM7Q0FKRCxBQUlDLENBSnlDLEVBQUUsQ0FBQyxTQUFTLEdBSXJEO2tCQUpvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlMaWdodF9BdXRvIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJhY2s6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UISetting_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '22575SjFCNL45HIdqXg3GL6', 'UISetting_Auto');
// Script/AutoScripts/UISetting_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISetting_Auto = /** @class */ (function (_super) {
    __extends(UISetting_Auto, _super);
    function UISetting_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Pop = null;
        _this.Mobx = null;
        _this.Capture = null;
        _this.Light = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UISetting_Auto.prototype, "Pop", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UISetting_Auto.prototype, "Mobx", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UISetting_Auto.prototype, "Capture", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UISetting_Auto.prototype, "Light", void 0);
    UISetting_Auto = __decorate([
        ccclass
    ], UISetting_Auto);
    return UISetting_Auto;
}(cc.Component));
exports.default = UISetting_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlTZXR0aW5nX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQTRDLGtDQUFZO0lBQXhEO1FBQUEscUVBVUM7UUFSQSxTQUFHLEdBQWUsSUFBSSxDQUFDO1FBRXZCLFVBQUksR0FBZSxJQUFJLENBQUM7UUFFeEIsYUFBTyxHQUFlLElBQUksQ0FBQztRQUUzQixXQUFLLEdBQWUsSUFBSSxDQUFDOztJQUUxQixDQUFDO0lBUkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzsrQ0FDRTtJQUV2QjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO2dEQUNHO0lBRXhCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7bURBQ007SUFFM0I7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQztpREFDSTtJQVJMLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FVbEM7SUFBRCxxQkFBQztDQVZELEFBVUMsQ0FWMkMsRUFBRSxDQUFDLFNBQVMsR0FVdkQ7a0JBVm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSVNldHRpbmdfQXV0byBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRQb3A6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0TW9ieDogQnV0dG9uUGx1cyA9IG51bGw7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRDYXB0dXJlOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdExpZ2h0OiBCdXR0b25QbHVzID0gbnVsbDtcbiBcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UISkills_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8169469d1pBaIeedlgzYf6P', 'UISkills_Auto');
// Script/AutoScripts/UISkills_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISkills_Auto = /** @class */ (function (_super) {
    __extends(UISkills_Auto, _super);
    function UISkills_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Close = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UISkills_Auto.prototype, "Close", void 0);
    UISkills_Auto = __decorate([
        ccclass
    ], UISkills_Auto);
    return UISkills_Auto;
}(cc.Component));
exports.default = UISkills_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlTa2lsbHNfQXV0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBMEQ7QUFFcEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUFJQztRQUZBLFdBQUssR0FBZSxJQUFJLENBQUM7O0lBRTFCLENBQUM7SUFGQTtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO2dEQUNJO0lBRkwsYUFBYTtRQURqQyxPQUFPO09BQ2EsYUFBYSxDQUlqQztJQUFELG9CQUFDO0NBSkQsQUFJQyxDQUowQyxFQUFFLENBQUMsU0FBUyxHQUl0RDtrQkFKb0IsYUFBYSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IEJ1dHRvblBsdXMgZnJvbSBcIi4vLi4vQ29tbW9uL0NvbXBvbmVudHMvQnV0dG9uUGx1c1wiXG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJU2tpbGxzX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0Q2xvc2U6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UITips_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '720c13VLvBJS7Yo0OZQVmt0', 'UITips_Auto');
// Script/AutoScripts/UITips_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UITips_Auto = /** @class */ (function (_super) {
    __extends(UITips_Auto, _super);
    function UITips_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Tips = null;
        return _this;
    }
    __decorate([
        property(cc.Label)
    ], UITips_Auto.prototype, "Tips", void 0);
    UITips_Auto = __decorate([
        ccclass
    ], UITips_Auto);
    return UITips_Auto;
}(cc.Component));
exports.default = UITips_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlUaXBzX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBeUMsK0JBQVk7SUFBckQ7UUFBQSxxRUFJQztRQUZBLFVBQUksR0FBYSxJQUFJLENBQUM7O0lBRXZCLENBQUM7SUFGQTtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzZDQUNHO0lBRkYsV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQUkvQjtJQUFELGtCQUFDO0NBSkQsQUFJQyxDQUp3QyxFQUFFLENBQUMsU0FBUyxHQUlwRDtrQkFKb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSVRpcHNfQXV0byBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cdEBwcm9wZXJ0eShjYy5MYWJlbClcblx0VGlwczogY2MuTGFiZWwgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UISplitTexture_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e756flXrulLpp2O1qP7l/Ru', 'UISplitTexture_Auto');
// Script/AutoScripts/UISplitTexture_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UISplitTexture_Auto = /** @class */ (function (_super) {
    __extends(UISplitTexture_Auto, _super);
    function UISplitTexture_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Close = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UISplitTexture_Auto.prototype, "Close", void 0);
    UISplitTexture_Auto = __decorate([
        ccclass
    ], UISplitTexture_Auto);
    return UISplitTexture_Auto;
}(cc.Component));
exports.default = UISplitTexture_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlTcGxpdFRleHR1cmVfQXV0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBMEQ7QUFFcEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUM7SUFBaUQsdUNBQVk7SUFBN0Q7UUFBQSxxRUFJQztRQUZBLFdBQUssR0FBZSxJQUFJLENBQUM7O0lBRTFCLENBQUM7SUFGQTtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO3NEQUNJO0lBRkwsbUJBQW1CO1FBRHZDLE9BQU87T0FDYSxtQkFBbUIsQ0FJdkM7SUFBRCwwQkFBQztDQUpELEFBSUMsQ0FKZ0QsRUFBRSxDQUFDLFNBQVMsR0FJNUQ7a0JBSm9CLG1CQUFtQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IEJ1dHRvblBsdXMgZnJvbSBcIi4vLi4vQ29tbW9uL0NvbXBvbmVudHMvQnV0dG9uUGx1c1wiXG5cbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xuQGNjY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJU3BsaXRUZXh0dXJlX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0Q2xvc2U6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIAbout_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8aceanbfPFAnZ5HmcwWJqVl', 'UIAbout_Auto');
// Script/AutoScripts/UIAbout_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIAbout_Auto = /** @class */ (function (_super) {
    __extends(UIAbout_Auto, _super);
    function UIAbout_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Close = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIAbout_Auto.prototype, "Close", void 0);
    UIAbout_Auto = __decorate([
        ccclass
    ], UIAbout_Auto);
    return UIAbout_Auto;
}(cc.Component));
exports.default = UIAbout_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlBYm91dF9BdXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdFQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUEwQyxnQ0FBWTtJQUF0RDtRQUFBLHFFQUlDO1FBRkEsV0FBSyxHQUFlLElBQUksQ0FBQzs7SUFFMUIsQ0FBQztJQUZBO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7K0NBQ0k7SUFGTCxZQUFZO1FBRGhDLE9BQU87T0FDYSxZQUFZLENBSWhDO0lBQUQsbUJBQUM7Q0FKRCxBQUlDLENBSnlDLEVBQUUsQ0FBQyxTQUFTLEdBSXJEO2tCQUpvQixZQUFZIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlBYm91dF9BdXRvIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdENsb3NlOiBCdXR0b25QbHVzID0gbnVsbDtcbiBcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Assemblers/BaseAssembler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e3feaq91SVBdIfW2t1TEvv2', 'BaseAssembler');
// Script/Common/Assemblers/BaseAssembler.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var gfx = cc['gfx'];
// 顶点格式 -> 位置 UV, 颜色
var vfmtPosUvColor = new gfx.VertexFormat([
    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },
]);
/**
 * assembler for texture
 */
var BaseAssembler = /** @class */ (function (_super) {
    __extends(BaseAssembler, _super);
    function BaseAssembler() {
        var _this = _super.call(this) || this;
        _this.verticesCount = 4;
        _this.indicesCount = 6;
        _this.floatsPerVert = 5;
        _this.uvOffset = 2;
        _this.colorOffset = 4;
        _this._renderData = null;
        _this._local = null;
        _this._renderData = new cc.RenderData();
        _this._renderData.init(_this);
        _this.initData();
        _this.initLocal();
        return _this;
    }
    Object.defineProperty(BaseAssembler.prototype, "verticesFloats", {
        get: function () {
            return this.verticesCount * this.floatsPerVert;
        },
        enumerable: false,
        configurable: true
    });
    BaseAssembler.prototype.getVfmt = function () {
        return vfmtPosUvColor;
    };
    BaseAssembler.prototype.getBuffer = function () {
        return cc.renderer['_handle'].getBuffer('mesh', this.getVfmt());
    };
    BaseAssembler.prototype.initData = function () {
        var data = this._renderData;
        data.createQuadData(0, this.verticesFloats, this.indicesCount);
    };
    BaseAssembler.prototype.initLocal = function () {
        this._local = [];
        this._local.length = 4;
    };
    /** 填充顶点的color */
    BaseAssembler.prototype.updateColor = function (comp, color) {
        var uintVerts = this._renderData.uintVDatas[0];
        if (!uintVerts)
            return;
        color = color != null ? color : comp.node.color['_val'];
        var floatsPerVert = this.floatsPerVert;
        var colorOffset = this.colorOffset;
        for (var i = 0; i < this.verticesCount; i++) {
            uintVerts[colorOffset + i * floatsPerVert] = color;
        }
    };
    /** 更新uv */
    BaseAssembler.prototype.updateUVs = function (comp) {
        // 对应的是 l, b, r, b, l, t, r, t 既左下， 右下， 左上， 右上
        var uv = [0, 1, 1, 1, 0, 0, 1, 0];
        var uvOffset = this.uvOffset;
        var floatsPerVert = this.floatsPerVert;
        var verts = this._renderData.vDatas[0];
        // 填充render data中4个顶点的uv部分
        for (var i = 0; i < this.verticesCount; i++) {
            var srcOffset = i * 2;
            var dstOffset = floatsPerVert * i + uvOffset;
            verts[dstOffset] = uv[srcOffset]; // 设置 u
            verts[dstOffset + 1] = uv[srcOffset + 1]; // 设置 v
        }
    };
    BaseAssembler.prototype.updateWorldVertsWebGL = function (comp) {
        var local = this._local;
        var verts = this._renderData.vDatas[0];
        var matrix = comp.node['_worldMatrix'];
        var matrixm = matrix.m, a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5], tx = matrixm[12], ty = matrixm[13];
        var vl = local[0], vr = local[2], vb = local[1], vt = local[3];
        var justTranslate = a === 1 && b === 0 && c === 0 && d === 1;
        var index = 0;
        var floatsPerVert = this.floatsPerVert;
        if (justTranslate) {
            // left bottom
            verts[index] = vl + tx; // 顶点位置 x = 世界坐标left + x的偏移量
            verts[index + 1] = vb + ty; // 顶点位置 y
            index += floatsPerVert;
            // right bottom
            verts[index] = vr + tx;
            verts[index + 1] = vb + ty;
            index += floatsPerVert;
            // right top
            verts[index] = vr + tx;
            verts[index + 1] = vt + ty;
            index += floatsPerVert;
            // left top
            verts[index] = vl + tx;
            verts[index + 1] = vt + ty;
            index += floatsPerVert;
        }
        else {
            // 4对xy分别乘以 [2,2]仿射矩阵，然后+平移量
            var al = a * vl, ar = a * vr, bl = b * vl, br = b * vr, cb = c * vb, ct = c * vt, db = d * vb, dt = d * vt;
            // left bottom
            verts[index] = al + cb + tx;
            verts[index + 1] = bl + db + ty;
            index += floatsPerVert;
            // right bottom
            verts[index] = ar + cb + tx;
            verts[index + 1] = br + db + ty;
            index += floatsPerVert;
            // left top
            verts[index] = al + ct + tx;
            verts[index + 1] = bl + dt + ty;
            index += floatsPerVert;
            // right top
            verts[index] = ar + ct + tx;
            verts[index + 1] = br + dt + ty;
        }
    };
    BaseAssembler.prototype.updateWorldVertsNative = function (comp) {
        var local = this._local;
        var verts = this._renderData.vDatas[0];
        var floatsPerVert = this.floatsPerVert;
        var vl = local[0], vr = local[2], vb = local[1], vt = local[3];
        var index = 0;
        // left bottom
        verts[index] = vl;
        verts[index + 1] = vb;
        index += floatsPerVert;
        // right bottom
        verts[index] = vr;
        verts[index + 1] = vb;
        index += floatsPerVert;
        // left top
        verts[index] = vl;
        verts[index + 1] = vt;
        index += floatsPerVert;
        // right top
        verts[index] = vr;
        verts[index + 1] = vt;
    };
    BaseAssembler.prototype.updateWorldVerts = function (comp) {
        if (CC_NATIVERENDERER) {
            this.updateWorldVertsNative(comp);
        }
        else {
            this.updateWorldVertsWebGL(comp);
        }
    };
    /** 更新顶点数据 */
    BaseAssembler.prototype.updateVerts = function (comp) {
        var node = comp.node, cw = node.width, ch = node.height, appx = node.anchorX * cw, appy = node.anchorY * ch, l, b, r, t;
        l = -appx;
        b = -appy;
        r = cw - appx;
        t = ch - appy;
        var local = this._local;
        local[0] = l;
        local[1] = b;
        local[2] = r;
        local[3] = t;
        this.updateWorldVerts(comp);
    };
    /** 更新renderdata */
    BaseAssembler.prototype.updateRenderData = function (comp) {
        if (comp._vertsDirty) {
            this.updateUVs(comp);
            this.updateVerts(comp);
            comp._vertsDirty = false;
        }
    };
    BaseAssembler.prototype.fillBuffers = function (comp, renderer) {
        if (renderer.worldMatDirty) {
            this.updateWorldVerts(comp);
        }
        var renderData = this._renderData;
        // vData里包含 pos， uv， color数据， iData中包含顶点索引
        var vData = renderData.vDatas[0];
        var iData = renderData.iDatas[0];
        var buffer = this.getBuffer();
        var offsetInfo = buffer.request(this.verticesCount, this.indicesCount);
        // buffer data may be realloc, need get reference after request.
        // fill vertices
        var vertexOffset = offsetInfo.byteOffset >> 2, vbuf = buffer._vData;
        if (vData.length + vertexOffset > vbuf.length) {
            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);
        }
        else {
            vbuf.set(vData, vertexOffset);
        }
        // fill indices
        var ibuf = buffer._iData, indiceOffset = offsetInfo.indiceOffset, vertexId = offsetInfo.vertexOffset; // vertexId是已经在buffer里的顶点数，也是当前顶点序号的基数
        var textData = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7];
        for (var i = 0, l = iData.length; i < l; i++) {
            ibuf[indiceOffset++] = vertexId + textData[i];
        }
    };
    BaseAssembler.prototype.packToDynamicAtlas = function (comp, frame) {
        if (CC_TEST)
            return;
        if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {
            var packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame);
            if (packedFrame) {
                frame._setDynamicAtlasFrame(packedFrame);
            }
        }
        var material = comp._materials[0];
        if (!material)
            return;
        if (material.getProperty('texture') !== frame._texture) {
            // texture was packed to dynamic atlas, should update uvs
            comp._vertsDirty = true;
            comp._updateMaterial();
        }
    };
    return BaseAssembler;
}(cc.Assembler));
exports.default = BaseAssembler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Assemblers/BatchAssembler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3989dU4L8BIBJM9muUNLD0B', 'BatchAssembler');
// Script/Common/Assemblers/BatchAssembler.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BaseAssembler_1 = require("./BaseAssembler");
/** 禁止子节点执行的FLAG */
var BAN_FALG = (cc.RenderFlow.FLAG_RENDER | cc.RenderFlow.FLAG_POST_RENDER);
/** 对子节点有影响的FLAG */
var DIRTY_PROP = cc.RenderFlow.FLAG_OPACITY | cc.RenderFlow.FLAG_WORLD_TRANSFORM;
/** 开关 */
var BATCH_SWITCH = true;
var BatchAssembler = /** @class */ (function (_super) {
    __extends(BatchAssembler, _super);
    function BatchAssembler() {
        var _this = _super.call(this) || this;
        /** 分层渲染 */
        _this._groups = [];
        return _this;
    }
    /**
     * 重写
     * 第一步, 让item的render方法都不执行, 只执行处理数据的方法 但是不执行fillbuffers方法
     * 第二步, 在postFillBuffers中按照顺序, 自己调用render方法, 填充数据, 以达到合批的目的
    **/
    BatchAssembler.prototype.fillBuffers = function (comp, renderer) {
        if (CC_NATIVERENDERER) {
            return;
        }
        if (!BATCH_SWITCH)
            return;
        // 记录当前结点是否会给孩子结点造成影响
        var worldTransformFlag = renderer.worldMatDirty ? cc.RenderFlow.FLAG_WORLD_TRANSFORM : 0;
        var worldOpacityFlag = renderer.parentOpacityDirty ? cc.RenderFlow.FLAG_OPACITY_COLOR : 0;
        var dirtyFlag = worldTransformFlag | worldOpacityFlag;
        comp.node['__DirtyFlag__'] = dirtyFlag;
        this._groups = [];
        this._walkByName(comp.node.children);
    };
    BatchAssembler.prototype.postFillBuffers = function (comp, renderer) {
        var originWorldMatDirty = renderer.worldMatDirty;
        if (!BATCH_SWITCH || !this._groups || this._groups.length <= 0)
            return;
        BATCH_SWITCH = false;
        for (var _i = 0, _a = this._groups; _i < _a.length; _i++) {
            var group = _a[_i];
            if (group.length <= 0)
                continue;
            for (var _b = 0, group_1 = group; _b < group_1.length; _b++) {
                var node = group_1[_b];
                var renderFlag = node['__RenderFlag__'];
                var dirtyFlag = node['__DirtyFlag__'];
                renderer.worldMatDirty = dirtyFlag > 0 ? 1 : 0;
                node._renderFlag |= renderFlag;
                if (renderFlag) {
                    cc.RenderFlow.flows[renderFlag]._func(node);
                }
            }
        }
        this._groups = null;
        BATCH_SWITCH = true;
        renderer.worldMatDirty = originWorldMatDirty;
    };
    /**
     * 方案一
     * 默认的广度遍历方式
     * 优点: 速度较快
     * 缺点: 新增或删除节点可能会导致合批失败
     */
    BatchAssembler.prototype._walkDefault = function (nodes) {
        if (!nodes || nodes.length <= 0)
            return;
        var count = nodes[0].childrenCount;
        var groups = [];
        for (var i = 0; i < count; i++) {
            groups[i] = [];
        }
        var group = [];
        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
            var node = nodes_1[_i];
            if (!node._activeInHierarchy || node.opacity == 0)
                continue;
            var flag = node._renderFlag & BAN_FALG;
            if (flag > 0) { // 表示这个node需要渲染
                node['__RenderFlag__'] = flag;
                node._renderFlag &= ~flag; // 去掉对应的flag
                group.push(node);
            }
            node['__DirtyFlag__'] = node.parent['__DirtyFlag__'] | (node._renderFlag & DIRTY_PROP);
            for (var i = 0; i < count; i++) {
                groups[i].push(node.children[i]);
            }
        }
        if (group.length > 0) {
            this._groups.push(group);
        }
        for (var _a = 0, groups_1 = groups; _a < groups_1.length; _a++) {
            var group_2 = groups_1[_a];
            this._walkDefault(group_2);
        }
    };
    /**
     * 方案二
     * 同名结点同批次渲染
     * 优点: 新增或删除节点不会导致合批失败
     * 缺点: 兄弟结点不能同名,速度没方案一快,内存消耗也大
     */
    BatchAssembler.prototype._walkByName = function (nodes) {
        if (!nodes || nodes.length <= 0)
            return;
        var groups = {};
        var group = [];
        var keys = [];
        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {
            var node = nodes_2[_i];
            if (!node._activeInHierarchy || node.opacity == 0)
                continue;
            var flag = node._renderFlag & BAN_FALG;
            if (flag > 0) { // 表示这个node需要渲染
                node['__RenderFlag__'] = flag;
                node._renderFlag &= ~flag; // 去掉对应的flag
                group.push(node);
            }
            node['__DirtyFlag__'] = node.parent['__DirtyFlag__'] | (node._renderFlag & DIRTY_PROP);
            var lastKey = "";
            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {
                var n = _b[_a];
                var key = n.name;
                if (!groups[key])
                    groups[key] = [];
                groups[key].push(n);
                if (keys.indexOf(key) == -1) {
                    if (lastKey.length == 0) { // 当前key肯定要存0号位
                        keys.unshift(key);
                    }
                    else {
                        var idx = keys.indexOf(lastKey);
                        keys.splice(idx + 1, 0, key);
                    }
                }
                lastKey = key;
            }
        }
        if (group.length > 0) {
            this._groups.push(group);
        }
        for (var _c = 0, keys_1 = keys; _c < keys_1.length; _c++) {
            var key = keys_1[_c];
            this._walkByName(groups[key]);
        }
    };
    return BatchAssembler;
}(BaseAssembler_1.default));
exports.default = BatchAssembler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/DrawBorad.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d19bkVv4BM774fPMww+bzv', 'DrawBorad');
// Script/Common/Components/DrawBorad.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DrawingBoard_1 = require("../Utils/DrawingBoard");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DrawBorad = /** @class */ (function (_super) {
    __extends(DrawBorad, _super);
    function DrawBorad() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ndBroad = null;
        _this._drawingBroad = null;
        _this._texture = new cc.Texture2D();
        _this._sprite = null;
        _this.broadYMax = -1; // 画板上边界最大值
        _this.broadXMin = -1; // 画板左边界最小值
        _this._touching = false;
        return _this;
    }
    DrawBorad.prototype.onLoad = function () {
        if (!this.ndBroad) {
            this.ndBroad = this.node;
        }
        this._sprite = this.ndBroad.getComponent(cc.Sprite);
        if (!this._sprite) {
            this.ndBroad.addComponent(cc.Sprite);
        }
        this._drawingBroad = new DrawingBoard_1.default(this.ndBroad.width, this.ndBroad.height);
        this._drawingBroad.setColor(0, 0, 0, 255);
        this._drawingBroad.setLineWidth(5);
        this._touching = false;
        var worldPos = this.ndBroad.convertToWorldSpaceAR(cc.v2(0, 0));
        this.broadYMax = worldPos.y + this.ndBroad.height / 2;
        this.broadXMin = worldPos.x - this.ndBroad.width / 2;
        this.ndBroad.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
        this.ndBroad.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
        this.ndBroad.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
        this.ndBroad.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
    };
    DrawBorad.prototype.start = function () {
    };
    DrawBorad.prototype.setData = function (data) {
        this._drawingBroad.setData(data);
        this.updateTexture(this._drawingBroad.getData(), this.ndBroad.width, this.ndBroad.height);
    };
    DrawBorad.prototype.touchStart = function (e) {
        if (this._touching)
            return;
        this._touching = true;
        var worldPos = e.getLocation();
        this._drawingBroad.moveTo(worldPos.x - this.broadXMin, this.getRealY(worldPos.y));
    };
    DrawBorad.prototype.touchMove = function (e) {
        if (!this._touching)
            return;
        var worldPos = e.getLocation();
        this._drawingBroad.lineTo(worldPos.x - this.broadXMin, this.getRealY(worldPos.y));
        this.updateTexture(this._drawingBroad.getData(), this.ndBroad.width, this.ndBroad.height);
    };
    DrawBorad.prototype.touchCancel = function (e) {
        this._touching = false;
    };
    DrawBorad.prototype.touchEnd = function (e) {
        this._touching = false;
    };
    DrawBorad.prototype.onDestroy = function () {
        this.ndBroad.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
        this.ndBroad.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
        this.ndBroad.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
        this.ndBroad.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
    };
    DrawBorad.prototype.setColor = function (r, g, b, a) {
        this._drawingBroad.setColor(r, g, b, a);
    };
    DrawBorad.prototype.setLineWidth = function (width) {
        this._drawingBroad.setLineWidth(width);
    };
    DrawBorad.prototype.setPen = function () {
        this.setColor(0, 0, 0, 255);
        this.setLineWidth(5);
    };
    DrawBorad.prototype.setReaser = function () {
        this.setColor(0, 0, 0, 0);
        this.setLineWidth(20);
    };
    DrawBorad.prototype.getTexture = function () {
        return this._texture;
    };
    DrawBorad.prototype.updateTexture = function (data, width, height) {
        this._texture.initWithData(data, cc.Texture2D.PixelFormat.RGBA8888, width, height);
        this._sprite.spriteFrame.setTexture(this._texture);
        this._sprite.markForRender(true);
    };
    DrawBorad.prototype.getRealY = function (y) {
        if (this._sprite.spriteFrame['_flipY']) {
            return this.broadYMax - (cc.visibleRect.height - y);
        }
        return this.broadYMax - y;
    };
    __decorate([
        property(cc.Node)
    ], DrawBorad.prototype, "ndBroad", void 0);
    DrawBorad = __decorate([
        ccclass
    ], DrawBorad);
    return DrawBorad;
}(cc.Component));
exports.default = DrawBorad;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIGame_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9eb95Sc8n9DtbkW3ATza3Qx', 'UIGame_Auto');
// Script/AutoScripts/UIGame_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIGame_Auto = /** @class */ (function (_super) {
    __extends(UIGame_Auto, _super);
    function UIGame_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Back = null;
        _this.GuideNode = null;
        _this.LblTip = null;
        _this.guidNode = null;
        _this.toMap = null;
        _this.items = null;
        _this.buldtool = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIGame_Auto.prototype, "Back", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIGame_Auto.prototype, "GuideNode", void 0);
    __decorate([
        property(cc.Label)
    ], UIGame_Auto.prototype, "LblTip", void 0);
    __decorate([
        property(cc.Node)
    ], UIGame_Auto.prototype, "guidNode", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIGame_Auto.prototype, "toMap", void 0);
    __decorate([
        property(cc.Node)
    ], UIGame_Auto.prototype, "items", void 0);
    __decorate([
        property(cc.Node)
    ], UIGame_Auto.prototype, "buldtool", void 0);
    UIGame_Auto = __decorate([
        ccclass
    ], UIGame_Auto);
    return UIGame_Auto;
}(cc.Component));
exports.default = UIGame_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlHYW1lX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQXlDLCtCQUFZO0lBQXJEO1FBQUEscUVBc0JDO1FBcEJBLFVBQUksR0FBZSxJQUFJLENBQUM7UUFHckIsZUFBUyxHQUFhLElBQUksQ0FBQztRQUczQixZQUFNLEdBQVcsSUFBSSxDQUFDO1FBR3RCLGNBQVEsR0FBVSxJQUFJLENBQUM7UUFHdkIsV0FBSyxHQUFhLElBQUksQ0FBQztRQUd2QixXQUFLLEdBQVUsSUFBSSxDQUFDO1FBR3BCLGNBQVEsR0FBVSxJQUFJLENBQUM7O0lBRTNCLENBQUM7SUFwQkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzs2Q0FDRztJQUdyQjtRQURGLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO2tEQUNTO0lBRzNCO1FBREYsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7K0NBQ007SUFHdEI7UUFERixRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztpREFDUTtJQUd2QjtRQURGLFFBQVEsQ0FBQyxvQkFBVSxDQUFDOzhDQUNLO0lBR3ZCO1FBREYsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7OENBQ0s7SUFHcEI7UUFERixRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztpREFDUTtJQXBCTixXQUFXO1FBRC9CLE9BQU87T0FDYSxXQUFXLENBc0IvQjtJQUFELGtCQUFDO0NBdEJELEFBc0JDLENBdEJ3QyxFQUFFLENBQUMsU0FBUyxHQXNCcEQ7a0JBdEJvQixXQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlHYW1lX0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0QmFjazogQnV0dG9uUGx1cyA9IG51bGw7XG5cblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG4gICAgR3VpZGVOb2RlOiBCdXR0b25QbHVzPW51bGw7XG5cblx0QHByb3BlcnR5KGNjLkxhYmVsKVxuICAgIExibFRpcDogY2MuTGFiZWw9bnVsbDtcblxuXHRAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBndWlkTm9kZTogY2MuTm9kZT1udWxsO1xuXG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuICAgIHRvTWFwOiBCdXR0b25QbHVzPW51bGw7XG5cblx0QHByb3BlcnR5KGNjLk5vZGUpXG4gICAgaXRlbXM6IGNjLk5vZGU9bnVsbDtcblxuXHRAcHJvcGVydHkoY2MuTm9kZSlcbiAgICBidWxkdG9vbDogY2MuTm9kZT1udWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/MeshTexture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1acd7QWgaNGAIz6Mkh6ICTD', 'MeshTexture');
// Script/Common/Components/MeshTexture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var MeshAssembler_1 = require("../Assemblers/MeshAssembler");
var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, executeInEditMode = _a.executeInEditMode, mixins = _a.mixins, property = _a.property;
var MeshTexture = /** @class */ (function (_super) {
    __extends(MeshTexture, _super);
    function MeshTexture() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._texture = null;
        _this.step = 10;
        _this.srcBlendFactor = cc.macro.BlendFactor.SRC_ALPHA;
        _this.dstBlendFactor = cc.macro.BlendFactor.ONE_MINUS_SRC_ALPHA;
        _this._assembler = null;
        return _this;
    }
    Object.defineProperty(MeshTexture.prototype, "texture", {
        get: function () {
            return this._texture;
        },
        set: function (val) {
            this._texture = val;
            this.node.width = val.width;
            this.node.height = val.height;
            this._updateMaterial();
        },
        enumerable: false,
        configurable: true
    });
    MeshTexture.prototype._updateVerts = function () {
        this.setVertsDirty();
    };
    MeshTexture.prototype._updateMaterial = function () {
        var texture = this._texture;
        var material = this.getMaterial(0);
        if (material) {
            if (material.getDefine("USE_TEXTURE") !== undefined) {
                material.define("USE_TEXTURE", true);
            }
            material.setProperty("texture", texture);
        }
        this['__proto__']._updateBlendFunc.call(this);
        this.setVertsDirty();
    };
    MeshTexture.prototype._validateRender = function () {
    };
    MeshTexture.prototype._resetAssembler = function () {
        var assembler = this._assembler = window["textureAssember"] = new MeshAssembler_1.default();
        assembler.init(this);
        this._updateColor();
        this.setVertsDirty();
    };
    MeshTexture.prototype.getPolygonCenter = function (polygon) {
        var x = 0, y = 0;
        for (var i = 0; i < polygon.length; i++) {
            x += polygon[i].x;
            y += polygon[i].y;
        }
        x = x / polygon.length;
        y = y / polygon.length;
        return cc.v2(x, y);
    };
    MeshTexture.prototype.tweenVec2 = function (from, to, duration, onUpdate, onComplete, delay) {
        if (delay === void 0) { delay = 0; }
        var o = { _value: from };
        Object.defineProperty(o, 'position', {
            get: function () { return o._value; },
            set: function (v) { o._value = v; onUpdate && onUpdate(o._value); },
        });
        var tween = cc.tween(o).delay(delay).to(duration, { position: to }).call(onComplete);
        tween.start();
        return tween;
    };
    MeshTexture.prototype.tweenVec2Bezier = function (from, to, duration, onUpdate, onComplete, delay) {
        if (delay === void 0) { delay = 0; }
        var o = { _value: from };
        Object.defineProperty(o, 'position', {
            get: function () { return o._value; },
            set: function (v) { o._value = v; onUpdate && onUpdate(o._value); },
        });
        // let tween = cc.tween(o).delay(delay).to(duration, { position: to }).call(onComplete);
        var tween = cc.tween(o).delay(delay).bezierTo(duration, cc.v2(from.x, from.y + 100), cc.v2(to.x, to.y + 100), to).call(onComplete);
        tween.start();
        return tween;
    };
    MeshTexture.prototype.doScaleEffect = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var rectCount = _this._assembler.getRectCount();
            var pos = _this.node.convertToWorldSpaceAR(cc.v2(0, 0));
            var _loop_1 = function (i) {
                var arr = _this._assembler.getRect(i);
                var center = _this.getPolygonCenter(arr);
                var dir = center.sub(pos).normalize();
                _this.tweenVec2(cc.v2(0, 0), dir.mul(1.5), 0.3, function (dt) {
                    _this._assembler.setRect(i, [
                        arr[0].addSelf(dt),
                        arr[1].addSelf(dt),
                        arr[2].addSelf(dt),
                        arr[3].addSelf(dt)
                    ]);
                }, function () {
                    if (i == rectCount - 1)
                        resolve(true);
                });
            };
            for (var i = 0; i < rectCount; i++) {
                _loop_1(i);
            }
        });
    };
    MeshTexture.prototype.doTextureMove = function (e, data) {
        return __awaiter(this, void 0, void 0, function () {
            var dir, rectCount, pos, _loop_2, this_1, i;
            var _this = this;
            return __generator(this, function (_a) {
                dir = cc.v2(-1, 0);
                if (data == 'right') {
                    dir = cc.v2(1, 0);
                }
                rectCount = this._assembler.getRectCount();
                pos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));
                _loop_2 = function (i) {
                    var idx = rectCount - i - 1;
                    var arr = this_1._assembler.getRect(idx);
                    var targetPos = dir.mul(400);
                    this_1.tweenVec2Bezier(cc.v2(0, 0), targetPos, 1, function (dt) {
                        _this._assembler.setRect(idx, [
                            arr[0].add(dt),
                            arr[1].add(dt),
                            arr[2].add(dt),
                            arr[3].add(dt),
                        ]);
                    }, function () {
                        _this._assembler.setRect(idx, [
                            arr[0].add(targetPos),
                            arr[1].add(targetPos),
                            arr[2].add(targetPos),
                            arr[3].add(targetPos),
                        ]);
                    }, Math.floor(i / 40) * 0.1);
                };
                this_1 = this;
                for (i = 0; i < rectCount; i++) {
                    _loop_2(i);
                }
                return [2 /*return*/];
            });
        });
    };
    __decorate([
        property(cc.Texture2D)
    ], MeshTexture.prototype, "_texture", void 0);
    __decorate([
        property(cc.Texture2D)
    ], MeshTexture.prototype, "texture", null);
    __decorate([
        property({ displayName: "步长" })
    ], MeshTexture.prototype, "step", void 0);
    __decorate([
        property({ type: cc.Enum(cc.macro.BlendFactor), override: true })
    ], MeshTexture.prototype, "srcBlendFactor", void 0);
    __decorate([
        property({ type: cc.Enum(cc.macro.BlendFactor), override: true })
    ], MeshTexture.prototype, "dstBlendFactor", void 0);
    MeshTexture = __decorate([
        ccclass,
        executeInEditMode,
        menu('i18n:MAIN_MENU.component.ui/MeshTexture'),
        mixins(cc.BlendFunc)
    ], MeshTexture);
    return MeshTexture;
}(cc.RenderComponent));
exports.default = MeshTexture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIMobx_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '09c65yYakpLkJuHNEjfCfPN', 'UIMobx_Auto');
// Script/AutoScripts/UIMobx_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIMobx_Auto = /** @class */ (function (_super) {
    __extends(UIMobx_Auto, _super);
    function UIMobx_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Close = null;
        _this.Txt1 = null;
        _this.Btn1 = null;
        _this.Txt2 = null;
        _this.Btn2 = null;
        _this.Txt3 = null;
        _this.Txt4 = null;
        _this.Btn3 = null;
        _this.Btn4 = null;
        _this.Txt5 = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMobx_Auto.prototype, "Close", void 0);
    __decorate([
        property(cc.Label)
    ], UIMobx_Auto.prototype, "Txt1", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMobx_Auto.prototype, "Btn1", void 0);
    __decorate([
        property(cc.Label)
    ], UIMobx_Auto.prototype, "Txt2", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMobx_Auto.prototype, "Btn2", void 0);
    __decorate([
        property(cc.Label)
    ], UIMobx_Auto.prototype, "Txt3", void 0);
    __decorate([
        property(cc.Label)
    ], UIMobx_Auto.prototype, "Txt4", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMobx_Auto.prototype, "Btn3", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIMobx_Auto.prototype, "Btn4", void 0);
    __decorate([
        property(cc.Label)
    ], UIMobx_Auto.prototype, "Txt5", void 0);
    UIMobx_Auto = __decorate([
        ccclass
    ], UIMobx_Auto);
    return UIMobx_Auto;
}(cc.Component));
exports.default = UIMobx_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlNb2J4X0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQXlDLCtCQUFZO0lBQXJEO1FBQUEscUVBc0JDO1FBcEJBLFdBQUssR0FBZSxJQUFJLENBQUM7UUFFekIsVUFBSSxHQUFhLElBQUksQ0FBQztRQUV0QixVQUFJLEdBQWUsSUFBSSxDQUFDO1FBRXhCLFVBQUksR0FBYSxJQUFJLENBQUM7UUFFdEIsVUFBSSxHQUFlLElBQUksQ0FBQztRQUV4QixVQUFJLEdBQWEsSUFBSSxDQUFDO1FBRXRCLFVBQUksR0FBYSxJQUFJLENBQUM7UUFFdEIsVUFBSSxHQUFlLElBQUksQ0FBQztRQUV4QixVQUFJLEdBQWUsSUFBSSxDQUFDO1FBRXhCLFVBQUksR0FBYSxJQUFJLENBQUM7O0lBRXZCLENBQUM7SUFwQkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzs4Q0FDSTtJQUV6QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzZDQUNHO0lBRXRCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7NkNBQ0c7SUFFeEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzs2Q0FDRztJQUV0QjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDOzZDQUNHO0lBRXhCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7NkNBQ0c7SUFFdEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzs2Q0FDRztJQUV0QjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDOzZDQUNHO0lBRXhCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7NkNBQ0c7SUFFeEI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzs2Q0FDRztJQXBCRixXQUFXO1FBRC9CLE9BQU87T0FDYSxXQUFXLENBc0IvQjtJQUFELGtCQUFDO0NBdEJELEFBc0JDLENBdEJ3QyxFQUFFLENBQUMsU0FBUyxHQXNCcEQ7a0JBdEJvQixXQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlNb2J4X0F1dG8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0Q2xvc2U6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoY2MuTGFiZWwpXG5cdFR4dDE6IGNjLkxhYmVsID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJ0bjE6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoY2MuTGFiZWwpXG5cdFR4dDI6IGNjLkxhYmVsID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJ0bjI6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoY2MuTGFiZWwpXG5cdFR4dDM6IGNjLkxhYmVsID0gbnVsbDtcblx0QHByb3BlcnR5KGNjLkxhYmVsKVxuXHRUeHQ0OiBjYy5MYWJlbCA9IG51bGw7XG5cdEBwcm9wZXJ0eShCdXR0b25QbHVzKVxuXHRCdG4zOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJ0bjQ6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoY2MuTGFiZWwpXG5cdFR4dDU6IGNjLkxhYmVsID0gbnVsbDtcbiBcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/CacheUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f7caav8yMdOrZNrAy/SIOIW', 'CacheUtils');
// Script/Common/Components/CacheUtils.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ResMgr_1 = require("../../UIFrame/ResMgr");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CacheUtils = /** @class */ (function (_super) {
    __extends(CacheUtils, _super);
    function CacheUtils() {
        // LIFE-CYCLE CALLBACKS:
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.com = null;
        _this.passTime = 0;
        return _this;
    }
    CacheUtils.prototype.onLoad = function () {
        this.com = this.getComponent(cc.Label);
    };
    CacheUtils.prototype.start = function () {
        var _this = this;
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (e) {
            _this.node.x += e.getDeltaX();
            _this.node.y += e.getDeltaY();
        }, this);
    };
    CacheUtils.prototype.update = function (dt) {
        this.passTime += dt;
        if (this.passTime > 1) {
            this.passTime = 0;
            this.com.string = ResMgr_1.default.inst.computeTextureCache();
        }
    };
    CacheUtils = __decorate([
        ccclass
    ], CacheUtils);
    return CacheUtils;
}(cc.Component));
exports.default = CacheUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvQ2FjaGVVdGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQ0FBMEM7QUFFcEMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFFSSx3QkFBd0I7UUFGNUIscUVBeUJDO1FBckJVLFNBQUcsR0FBYSxJQUFJLENBQUM7UUFZcEIsY0FBUSxHQUFHLENBQUMsQ0FBQzs7SUFTekIsQ0FBQztJQXBCRywyQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsMEJBQUssR0FBTDtRQUFBLGlCQUtDO1FBSkcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLFVBQUMsQ0FBc0I7WUFDOUQsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQzdCLEtBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNqQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBR0QsMkJBQU0sR0FBTixVQUFRLEVBQUU7UUFDTixJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztRQUNwQixJQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ2xCLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLGdCQUFNLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7U0FDdkQ7SUFFTCxDQUFDO0lBeEJnQixVQUFVO1FBRDlCLE9BQU87T0FDYSxVQUFVLENBeUI5QjtJQUFELGlCQUFDO0NBekJELEFBeUJDLENBekJ1QyxFQUFFLENBQUMsU0FBUyxHQXlCbkQ7a0JBekJvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlc01nciBmcm9tIFwiLi4vLi4vVUlGcmFtZS9SZXNNZ3JcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYWNoZVV0aWxzIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuXG4gICAgcHVibGljIGNvbTogY2MuTGFiZWwgPSBudWxsO1xuICAgIG9uTG9hZCAoKSB7XG4gICAgICAgIHRoaXMuY29tID0gdGhpcy5nZXRDb21wb25lbnQoY2MuTGFiZWwpO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIChlOiBjYy5FdmVudC5FdmVudFRvdWNoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm5vZGUueCArPSBlLmdldERlbHRhWCgpO1xuICAgICAgICAgICAgdGhpcy5ub2RlLnkgKz0gZS5nZXREZWx0YVkoKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwYXNzVGltZSA9IDA7XG4gICAgdXBkYXRlIChkdCkge1xuICAgICAgICB0aGlzLnBhc3NUaW1lICs9IGR0O1xuICAgICAgICBpZih0aGlzLnBhc3NUaW1lID4gMSkge1xuICAgICAgICAgICAgdGhpcy5wYXNzVGltZSA9IDA7XG4gICAgICAgICAgICB0aGlzLmNvbS5zdHJpbmcgPSBSZXNNZ3IuaW5zdC5jb21wdXRlVGV4dHVyZUNhY2hlKCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/GridScrollList.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1cacdUiKzNJIJRK/5ihZG1M', 'GridScrollList');
// Script/Common/Components/GridScrollList.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GridScrollList = void 0;
var ScrollViewHelper_1 = require("../../Common/Components/ScrollViewHelper");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var RowDirection;
(function (RowDirection) {
    RowDirection[RowDirection["LeftToRight"] = 0] = "LeftToRight";
    RowDirection[RowDirection["TopToBottom"] = 1] = "TopToBottom";
})(RowDirection || (RowDirection = {}));
var GridScrollList = /** @class */ (function (_super) {
    __extends(GridScrollList, _super);
    function GridScrollList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.allProxy = [];
        _this.scrollHelper = null;
        _this.rowDirection = RowDirection.LeftToRight;
        _this.colSpace = 10;
        _this.rowSpace = 10;
        _this.colCount = 3;
        _this.margin = 10;
        return _this;
    }
    GridScrollList.prototype.doLayout = function () {
        this._layoutItems();
    };
    GridScrollList.prototype._layoutItems = function () {
        this.scrollHelper.clearData();
        var data = this.allProxy;
        var elemSize = data.length ? data[0].region.size : cc.size(0, 0);
        var xSpace = this.colSpace;
        var ySpace = this.rowSpace;
        var colCount = this.colCount;
        var viewSize = this.scrollHelper.scrollView.node.getContentSize();
        if (this.rowDirection == RowDirection.TopToBottom) {
            var temp = viewSize.width;
            viewSize.width = viewSize.height;
            viewSize.height = temp;
            temp = elemSize.width;
            elemSize.width = elemSize.height;
            elemSize.height = temp;
        }
        var yMargin = this.margin;
        var xMargin = (viewSize.width - (colCount * elemSize.width + (colCount - 1) * xSpace)) / 2;
        var x = xMargin;
        var y = -yMargin + ySpace + elemSize.height;
        var dy = -ySpace - elemSize.height;
        var dx = xSpace + elemSize.width;
        if (this.rowDirection == RowDirection.TopToBottom) {
            dy = ySpace + elemSize.height;
            dx = -xSpace - elemSize.width;
            y = yMargin - dy;
        }
        for (var i = 0; i < data.length; i++) {
            x += dx;
            if (i % colCount == 0) {
                y += dy;
                x = xMargin;
            }
            var proxy = data[i];
            if (this.rowDirection == RowDirection.LeftToRight) {
                proxy.region.origin = cc.v2(x, y - elemSize.height);
            }
            else {
                proxy.region.origin = cc.v2(y, x - elemSize.height);
            }
            this.scrollHelper.addData(proxy);
        }
        if (this.rowDirection == RowDirection.LeftToRight) {
            this.scrollHelper.scrollView.content.setContentSize(viewSize.width, -y + elemSize.height + yMargin);
        }
        else {
            this.scrollHelper.scrollView.content.setContentSize(y + elemSize.height + yMargin, viewSize.width);
        }
    };
    __decorate([
        property(ScrollViewHelper_1.ScrollViewHelper)
    ], GridScrollList.prototype, "scrollHelper", void 0);
    __decorate([
        property({ type: cc.Enum(RowDirection) })
    ], GridScrollList.prototype, "rowDirection", void 0);
    __decorate([
        property()
    ], GridScrollList.prototype, "colSpace", void 0);
    __decorate([
        property()
    ], GridScrollList.prototype, "rowSpace", void 0);
    __decorate([
        property()
    ], GridScrollList.prototype, "colCount", void 0);
    __decorate([
        property()
    ], GridScrollList.prototype, "margin", void 0);
    GridScrollList = __decorate([
        ccclass
    ], GridScrollList);
    return GridScrollList;
}(cc.Component));
exports.GridScrollList = GridScrollList;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/MaskPlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a1aa9cyaadEZ67qCIT1FuzO', 'MaskPlus');
// Script/Common/Components/MaskPlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaskPlusType = void 0;
var CommonUtils_1 = require("../Utils/CommonUtils");
var MaskPlusType;
(function (MaskPlusType) {
    /**
     * !#en Rect mask.
     * !#zh 使用矩形作为遮罩
     * @property {Number} RECT
     */
    MaskPlusType[MaskPlusType["RECT"] = 0] = "RECT";
    /**
     * !#en Ellipse Mask.
     * !#zh 使用椭圆作为遮罩
     * @property {Number} ELLIPSE
     */
    MaskPlusType[MaskPlusType["ELLIPSE"] = 1] = "ELLIPSE";
    /**
     * !#en Image Stencil Mask.
     * !#zh 使用图像模版作为遮罩
     * @property {Number} IMAGE_STENCIL
     */
    MaskPlusType[MaskPlusType["IMAGE_STENCIL"] = 2] = "IMAGE_STENCIL";
    /**
     * 多边形遮罩
     */
    MaskPlusType[MaskPlusType["Polygon"] = 3] = "Polygon";
})(MaskPlusType = exports.MaskPlusType || (exports.MaskPlusType = {}));
var _vec2_temp = new cc.Vec2();
var _mat4_temp = new cc.Mat4();
var _circlepoints = [];
function _calculateCircle(center, radius, segements) {
    _circlepoints.length = 0;
    var anglePerStep = Math.PI * 2 / segements;
    for (var step = 0; step < segements; ++step) {
        _circlepoints.push(cc.v2(radius.x * Math.cos(anglePerStep * step) + center.x, radius.y * Math.sin(anglePerStep * step) + center.y));
    }
    return _circlepoints;
}
var EllipseConfig = /** @class */ (function () {
    function EllipseConfig() {
    }
    return EllipseConfig;
}());
/**
 * 遮罩扩展
 * 自定义多边形遮罩
 */
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, menu = _a.menu, help = _a.help, inspector = _a.inspector;
var MaskPlus = /** @class */ (function (_super) {
    __extends(MaskPlus, _super);
    function MaskPlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._type = 0;
        _this._polygon = [];
        _this.ellipse = new EllipseConfig();
        return _this;
    }
    Object.defineProperty(MaskPlus.prototype, "type", {
        get: function () {
            return this._type;
        },
        // @ts-ignore
        set: function (value) {
            if (this._type !== value) {
                this['_resetAssembler']();
            }
            this._type = value;
            if (this._type === MaskPlusType.Polygon) {
                if (this._polygon.length === 0) {
                    var _a = this.getNodeRect(), x = _a[0], y = _a[1], width = _a[2], height = _a[3];
                    this._polygon.push(cc.v2(x, y), cc.v2(x + width, y), cc.v2(x + width, y + height), cc.v2(x, y + height));
                }
            }
            if (this._type !== MaskPlusType.IMAGE_STENCIL) {
                this.spriteFrame = null;
                this.alphaThreshold = 0;
                this._updateGraphics();
            }
            this['_activateMaterial']();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MaskPlus.prototype, "polygon", {
        get: function () {
            return this._polygon;
        },
        set: function (points) {
            this._polygon = points;
            this._updateGraphics();
        },
        enumerable: false,
        configurable: true
    });
    MaskPlus.prototype.setEllipse = function (center, r, segments) {
        this.ellipse.center = center;
        this.ellipse.r = r;
        this.ellipse.segments = segments || this.segements;
    };
    MaskPlus.prototype._updateGraphics = function () {
        var node = this.node;
        var graphics = this['_graphics'];
        // Share render data with graphics content
        graphics.clear(false);
        var _a = this.getNodeRect(), x = _a[0], y = _a[1], width = _a[2], height = _a[3];
        if (this['_type'] === MaskPlusType.RECT) {
            graphics.rect(x, y, width, height);
        }
        else if (this['_type'] === MaskPlusType.ELLIPSE) {
            var center = this.ellipse.center || cc.v2(x + width / 2, y + height / 2);
            var radius = this.ellipse.r || { x: width / 2, y: height / 2 };
            var segments = this.ellipse.segments || this['_segments'];
            var points = _calculateCircle(center, radius, segments);
            for (var i = 0; i < points.length; ++i) {
                var point = points[i];
                if (i === 0) {
                    graphics.moveTo(point.x, point.y);
                }
                else {
                    graphics.lineTo(point.x, point.y);
                }
            }
            graphics.close();
        }
        else if (this['_type'] === MaskPlusType.Polygon) {
            if (this._polygon.length === 0)
                this._polygon.push(cc.v2(0, 0));
            graphics.moveTo(this._polygon[0].x, this._polygon[0].y);
            for (var i = 1; i < this._polygon.length; i++) {
                graphics.lineTo(this._polygon[i].x, this._polygon[i].y);
            }
            graphics.lineTo(this._polygon[0].x, this._polygon[0].y);
        }
        if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
            graphics.stroke();
        }
        else {
            graphics.fill();
        }
    };
    MaskPlus.prototype._hitTest = function (cameraPt) {
        var node = this.node;
        var size = node.getContentSize(), w = size.width, h = size.height, testPt = _vec2_temp;
        node['_updateWorldMatrix']();
        // If scale is 0, it can't be hit.
        if (!cc.Mat4.invert(_mat4_temp, node['_worldMatrix'])) {
            return false;
        }
        var point = cc.v2(0, 0);
        cc.Vec2.transformMat4(point, cameraPt, _mat4_temp);
        testPt.x = point.x + node['_anchorPoint'].x * w;
        testPt.y = point.y + node['_anchorPoint'].y * h;
        var result = false;
        if (this.type === MaskPlusType.RECT || this.type === MaskPlusType.IMAGE_STENCIL) {
            result = testPt.x >= 0 && testPt.y >= 0 && testPt.x <= w && testPt.y <= h;
        }
        else if (this.type === MaskPlusType.ELLIPSE) {
            var rx = w / 2, ry = h / 2;
            var px = testPt.x - 0.5 * w, py = testPt.y - 0.5 * h;
            result = px * px / (rx * rx) + py * py / (ry * ry) < 1;
        }
        else if (this.type === MaskPlusType.Polygon) {
            result = CommonUtils_1.CommonUtils.isInPolygon(point, this.polygon);
        }
        if (this.inverted) {
            result = !result;
        }
        return result;
    };
    MaskPlus.prototype.getNodeRect = function () {
        var width = this.node['_contentSize'].width;
        var height = this.node['_contentSize'].height;
        var x = -width * this.node['_anchorPoint'].x;
        var y = -height * this.node['_anchorPoint'].y;
        return [x, y, width, height];
    };
    MaskPlus.Type = MaskPlusType;
    __decorate([
        property({ type: cc.Enum(MaskPlusType), override: true })
    ], MaskPlus.prototype, "_type", void 0);
    __decorate([
        property({ type: cc.Enum(MaskPlusType), override: true })
    ], MaskPlus.prototype, "type", null);
    __decorate([
        property({ type: [cc.Vec2], serializable: true })
    ], MaskPlus.prototype, "_polygon", void 0);
    __decorate([
        property({ type: [cc.Vec2], serializable: true })
    ], MaskPlus.prototype, "polygon", null);
    MaskPlus = __decorate([
        ccclass,
        menu('i18n:MAIN_MENU.component.renderers/MaskPlus'),
        executeInEditMode,
        help('i18n:COMPONENT.help_url.mask'),
        inspector('packages://maskplus/inspector.js')
    ], MaskPlus);
    return MaskPlus;
}(cc.Mask));
exports.default = MaskPlus;
cc['MaskPlus'] = MaskPlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Assemblers/TextureAssembler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e0687tDW69CxalPcgT1Omra', 'TextureAssembler');
// Script/Common/Assemblers/TextureAssembler.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var CommonUtils_1 = require("../Utils/CommonUtils");
var gfx = cc['gfx'];
// 顶点格式 -> 位置 UV, 颜色
var vfmtPosUvColor = new gfx.VertexFormat([
    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },
    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },
]);
/**
 * assembler for texture
 */
var TextureAssembler = /** @class */ (function (_super) {
    __extends(TextureAssembler, _super);
    function TextureAssembler() {
        var _this = _super.call(this) || this;
        _this.verticesCount = 4;
        _this.indicesCount = 6;
        _this.floatsPerVert = 5;
        _this.uvOffset = 2;
        _this.colorOffset = 4;
        _this._renderData = null;
        _this._renderData = new cc.RenderData();
        _this._renderData.init(_this);
        _this.initData();
        return _this;
    }
    Object.defineProperty(TextureAssembler.prototype, "verticesFloats", {
        get: function () {
            return this.verticesCount * this.floatsPerVert;
        },
        enumerable: false,
        configurable: true
    });
    TextureAssembler.prototype.getVfmt = function () {
        return vfmtPosUvColor;
    };
    TextureAssembler.prototype.getBuffer = function () {
        return cc.renderer['_handle'].getBuffer('mesh', this.getVfmt());
    };
    TextureAssembler.prototype.initData = function () {
        var data = this._renderData;
        data.createQuadData(0, this.verticesFloats, this.indicesCount);
    };
    TextureAssembler.prototype.resetData = function (comp) {
        var points = comp.polygon;
        if (!points || points.length < 3)
            return;
        this.verticesCount = points.length;
        this.indicesCount = this.verticesCount + (this.verticesCount - 3) * 2;
        this._renderData['clear']();
        this.initData();
    };
    TextureAssembler.prototype.initQuadIndices = function (indices, arr) {
        for (var i = 0; i < arr.length; i++) {
            indices[i] = arr[i];
        }
    };
    /** 填充顶点的color */
    TextureAssembler.prototype.updateColor = function (comp, color) {
        var uintVerts = this._renderData.uintVDatas[0];
        if (!uintVerts)
            return;
        color = color != null ? color : comp.node.color['_val'];
        var floatsPerVert = this.floatsPerVert;
        var colorOffset = this.colorOffset;
        var polygon = comp.polygon;
        for (var i = 0; i < polygon.length; i++) {
            uintVerts[colorOffset + i * floatsPerVert] = color;
        }
    };
    /** 更新uv */
    TextureAssembler.prototype.updateUVs = function (comp) {
        var uvOffset = this.uvOffset;
        var floatsPerVert = this.floatsPerVert;
        var verts = this._renderData.vDatas[0];
        var uvs = CommonUtils_1.CommonUtils.computeUv(comp.polygon, comp.node.width, comp.node.height);
        var polygon = comp.polygon;
        for (var i = 0; i < polygon.length; i++) {
            var dstOffset = floatsPerVert * i + uvOffset;
            verts[dstOffset] = uvs[i].x;
            verts[dstOffset + 1] = uvs[i].y;
        }
    };
    TextureAssembler.prototype.updateWorldVertsWebGL = function (comp) {
        var verts = this._renderData.vDatas[0];
        var matrix = comp.node['_worldMatrix'];
        var matrixm = matrix.m, a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5], tx = matrixm[12], ty = matrixm[13];
        var justTranslate = a === 1 && b === 0 && c === 0 && d === 1;
        var floatsPerVert = this.floatsPerVert;
        if (justTranslate) {
            var polygon = comp.polygon;
            for (var i = 0; i < polygon.length; i++) {
                verts[i * floatsPerVert] = polygon[i].x + tx;
                verts[i * floatsPerVert + 1] = polygon[i].y + ty;
            }
        }
        else {
            var polygon = comp.polygon;
            for (var i = 0; i < polygon.length; i++) {
                verts[i * floatsPerVert] = a * polygon[i].x + c * polygon[i].y + tx;
                verts[i * floatsPerVert + 1] = b * polygon[i].x + d * polygon[i].y + ty;
            }
        }
    };
    TextureAssembler.prototype.updateWorldVertsNative = function (comp) {
        var verts = this._renderData.vDatas[0];
        var floatsPerVert = this.floatsPerVert;
        var polygon = comp.polygon;
        for (var i = 0; i < polygon.length; i++) {
            verts[i * floatsPerVert] = polygon[i].x;
            verts[i * floatsPerVert + 1] = polygon[i].y;
        }
    };
    TextureAssembler.prototype.updateWorldVerts = function (comp) {
        if (CC_NATIVERENDERER) {
            this.updateWorldVertsNative(comp);
        }
        else {
            this.updateWorldVertsWebGL(comp);
        }
    };
    /** 更新顶点数据 */
    TextureAssembler.prototype.updateVerts = function (comp) {
        var indicesArr = CommonUtils_1.CommonUtils.splitePolygon(comp.polygon);
        this.initQuadIndices(this._renderData.iDatas[0], indicesArr);
        this.updateWorldVerts(comp);
    };
    /** 更新renderdata */
    TextureAssembler.prototype.updateRenderData = function (comp) {
        if (comp._vertsDirty) {
            this.resetData(comp);
            this.updateUVs(comp);
            this.updateVerts(comp);
            this.updateColor(comp, null);
            comp._vertsDirty = false;
        }
    };
    //每帧都会被调用
    TextureAssembler.prototype.fillBuffers = function (comp, renderer) {
        if (renderer.worldMatDirty) {
            this.updateWorldVerts(comp);
        }
        var renderData = this._renderData;
        // vData里包含 pos， uv， color数据， iData中包含顶点索引
        var vData = renderData.vDatas[0];
        var iData = renderData.iDatas[0];
        var buffer = this.getBuffer();
        var offsetInfo = buffer.request(this.verticesCount, this.indicesCount);
        // buffer data may be realloc, need get reference after request.
        // fill vertices
        var vertexOffset = offsetInfo.byteOffset >> 2, vbuf = buffer._vData;
        if (vData.length + vertexOffset > vbuf.length) {
            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);
        }
        else {
            vbuf.set(vData, vertexOffset);
        }
        // fill indices
        var ibuf = buffer._iData, indiceOffset = offsetInfo.indiceOffset, vertexId = offsetInfo.vertexOffset;
        for (var i = 0, l = iData.length; i < l; i++) {
            ibuf[indiceOffset++] = vertexId + iData[i];
        }
    };
    TextureAssembler.prototype.packToDynamicAtlas = function (comp, frame) {
        if (CC_TEST)
            return;
        if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {
            var packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame);
            if (packedFrame) {
                frame._setDynamicAtlasFrame(packedFrame);
            }
        }
        var material = comp['_materials'][0];
        if (!material)
            return;
        if (material.getProperty('texture') !== frame._texture) {
            // texture was packed to dynamic atlas, should update uvs
            comp._vertsDirty = true;
            comp._updateMaterial();
        }
    };
    return TextureAssembler;
}(cc.Assembler));
exports.default = TextureAssembler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/CameraCapture.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '29803DQKJdC2KvHyjig9y8N', 'CameraCapture');
// Script/Common/Components/CameraCapture.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var CocosHelper_1 = require("../../UIFrame/CocosHelper");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CameraCapture = /** @class */ (function (_super) {
    __extends(CameraCapture, _super);
    function CameraCapture() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.captureNode = null;
        _this.camera = null;
        return _this;
    }
    CameraCapture_1 = CameraCapture;
    CameraCapture.prototype.onLoad = function () {
        CameraCapture_1.inst = this;
        this.camera = this.getComponent(cc.Camera);
        if (!this.camera) {
            this.camera = this.addComponent(cc.Camera);
        }
        this.node.active = false;
    };
    CameraCapture.prototype.start = function () { };
    CameraCapture.prototype.captureTexture = function () {
        this.node.active = true;
        this.captureNode.active = false;
        var data = CocosHelper_1.default.captureScreen(this.camera, this.captureNode);
        this.captureNode.active = true;
        this.node.active = false;
        return data;
    };
    var CameraCapture_1;
    CameraCapture.inst = null;
    __decorate([
        property(cc.Node)
    ], CameraCapture.prototype, "captureNode", void 0);
    CameraCapture = CameraCapture_1 = __decorate([
        ccclass
    ], CameraCapture);
    return CameraCapture;
}(cc.Component));
exports.default = CameraCapture;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvQ2FtZXJhQ2FwdHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5REFBb0Q7QUFHOUMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUErQkM7UUExQkcsaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFFcEIsWUFBTSxHQUFjLElBQUksQ0FBQzs7SUF3QnJDLENBQUM7c0JBL0JvQixhQUFhO0lBUTlCLDhCQUFNLEdBQU47UUFDSSxlQUFhLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNDLElBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUM5QztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUU3QixDQUFDO0lBRUQsNkJBQUssR0FBTCxjQUFVLENBQUM7SUFFWCxzQ0FBYyxHQUFkO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNoQyxJQUFJLElBQUksR0FBRyxxQkFBVyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBRXpCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7O0lBMUJNLGtCQUFJLEdBQWtCLElBQUksQ0FBQztJQUdsQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNVO0lBTFgsYUFBYTtRQURqQyxPQUFPO09BQ2EsYUFBYSxDQStCakM7SUFBRCxvQkFBQztDQS9CRCxBQStCQyxDQS9CMEMsRUFBRSxDQUFDLFNBQVMsR0ErQnREO2tCQS9Cb0IsYUFBYSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2Nvc0hlbHBlciBmcm9tIFwiLi4vLi4vVUlGcmFtZS9Db2Nvc0hlbHBlclwiO1xuaW1wb3J0IHsgQ29tbW9uVXRpbHMgfSBmcm9tIFwiLi4vVXRpbHMvQ29tbW9uVXRpbHNcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW1lcmFDYXB0dXJlIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIHN0YXRpYyBpbnN0OiBDYW1lcmFDYXB0dXJlID0gbnVsbDtcblxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxuICAgIGNhcHR1cmVOb2RlOiBjYy5Ob2RlID0gbnVsbDtcblxuICAgIHByaXZhdGUgY2FtZXJhOiBjYy5DYW1lcmEgPSBudWxsO1xuICAgIG9uTG9hZCAoKSB7XG4gICAgICAgIENhbWVyYUNhcHR1cmUuaW5zdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuY2FtZXJhID0gdGhpcy5nZXRDb21wb25lbnQoY2MuQ2FtZXJhKTtcbiAgICAgICAgaWYoIXRoaXMuY2FtZXJhKSB7XG4gICAgICAgICAgICB0aGlzLmNhbWVyYSA9IHRoaXMuYWRkQ29tcG9uZW50KGNjLkNhbWVyYSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuXG4gICAgfVxuXG4gICAgc3RhcnQgKCkge31cblxuICAgIGNhcHR1cmVUZXh0dXJlKCkge1xuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jYXB0dXJlTm9kZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgbGV0IGRhdGEgPSBDb2Nvc0hlbHBlci5jYXB0dXJlU2NyZWVuKHRoaXMuY2FtZXJhLCB0aGlzLmNhcHR1cmVOb2RlKTtcbiAgICAgICAgdGhpcy5jYXB0dXJlTm9kZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cblxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/QuadTree.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '97092zpFuhN/oWHIMkF7jei', 'QuadTree');
// Script/Common/Components/QuadTree.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bound = void 0;
var Bound = /** @class */ (function () {
    function Bound(x, y, width, height, uid) {
        if (uid === void 0) { uid = ""; }
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.uid = uid;
    }
    return Bound;
}());
exports.Bound = Bound;
/**
 * 四叉树
 */
var Quadtree = /** @class */ (function () {
    function Quadtree(bound, maxObjects, maxLevels, level) {
        this._maxObject = 10;
        this._maxLevel = 4;
        this._level = 0;
        this._bound = null;
        this._objects = [];
        this._nodes = [];
        this._bound = bound;
        this._maxObject = maxObjects || this._maxObject;
        this._maxLevel = maxLevels || this._maxLevel;
        this._level = level || this._level;
    }
    /** 切 */
    Quadtree.prototype.split = function () {
        var nextLevel = this._level + 1;
        var subWidth = this._bound.width / 2;
        var subHeight = this._bound.height / 2;
        var x = this._bound.x;
        var y = this._bound.y;
        //top right node
        this._nodes[0] = new Quadtree({
            uid: nextLevel + "-top-right",
            x: x + subWidth,
            y: y,
            width: subWidth,
            height: subHeight
        }, this._maxObject, this._maxLevel, nextLevel);
        //top left node
        this._nodes[1] = new Quadtree({
            uid: nextLevel + "-top-left",
            x: x,
            y: y,
            width: subWidth,
            height: subHeight
        }, this._maxObject, this._maxLevel, nextLevel);
        //bottom left node
        this._nodes[2] = new Quadtree({
            uid: nextLevel + "-bottom-left",
            x: x,
            y: y + subHeight,
            width: subWidth,
            height: subHeight
        }, this._maxObject, this._maxLevel, nextLevel);
        //bottom right node
        this._nodes[3] = new Quadtree({
            uid: nextLevel + "-bottom-right",
            x: x + subWidth,
            y: y + subHeight,
            width: subWidth,
            height: subHeight
        }, this._maxObject, this._maxLevel, nextLevel);
    };
    /**  */
    Quadtree.prototype.getIndex = function (bound) {
        var indexes = [], verticalMidpoint = this._bound.x + (this._bound.width / 2), horizontalMidpoint = this._bound.y + (this._bound.height / 2);
        var startIsNorth = bound.y < horizontalMidpoint, startIsWest = bound.x < verticalMidpoint, endIsEast = bound.x + bound.width > verticalMidpoint, endIsSouth = bound.y + bound.height > horizontalMidpoint;
        //top-right quad
        if (startIsNorth && endIsEast) {
            indexes.push(0);
        }
        //top-left quad
        if (startIsWest && startIsNorth) {
            indexes.push(1);
        }
        //bottom-left quad
        if (startIsWest && endIsSouth) {
            indexes.push(2);
        }
        //bottom-right quad
        if (endIsEast && endIsSouth) {
            indexes.push(3);
        }
        return indexes;
    };
    /** 插入一个bound */
    Quadtree.prototype.insert = function (bound) {
        var i = 0;
        var indexes = [];
        //if we have subnodes, call insert on matching subnodes
        if (this._nodes.length) {
            indexes = this.getIndex(bound);
            for (i = 0; i < indexes.length; i++) {
                this._nodes[indexes[i]].insert(bound);
            }
            return;
        }
        //otherwise, store object here
        this._objects.push(bound);
        //max_objects reached
        if (this._objects.length > this._maxObject && this._level < this._maxLevel) {
            //split if we don't already have subnodes
            if (!this._nodes.length) {
                this.split();
            }
            //add all objects to their corresponding subnode
            for (i = 0; i < this._objects.length; i++) {
                indexes = this.getIndex(this._objects[i]);
                for (var k = 0; k < indexes.length; k++) {
                    this._nodes[indexes[k]].insert(this._objects[i]);
                }
            }
            //clean up this node
            this._objects = [];
        }
    };
    Quadtree.prototype.retrieve = function (bound) {
        var indexes = this.getIndex(bound), returnObjects = this._objects;
        //if we have subnodes, retrieve their objects
        if (this._nodes.length) {
            for (var i = 0; i < indexes.length; i++) {
                returnObjects = returnObjects.concat(this._nodes[indexes[i]].retrieve(bound));
            }
        }
        //remove duplicates
        returnObjects = returnObjects.filter(function (item, index) {
            return returnObjects.indexOf(item) >= index;
        });
        return returnObjects;
    };
    Quadtree.prototype.clear = function () {
        this._objects = [];
        for (var i = 0; i < this._nodes.length; i++) {
            if (this._nodes.length) {
                this._nodes[i].clear();
            }
        }
        this._nodes = [];
    };
    return Quadtree;
}());
exports.default = Quadtree;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/PropController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9c55bh8k9BD0JhzsvfCJYNE', 'PropController');
// Script/Common/Components/PropController.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodePathType = void 0;
var PropSelector_1 = require("./PropSelector");
var NodePathType;
(function (NodePathType) {
    NodePathType[NodePathType["Name"] = 0] = "Name";
    NodePathType[NodePathType["SiblingIndex"] = 1] = "SiblingIndex";
})(NodePathType = exports.NodePathType || (exports.NodePathType = {}));
cc['NodePathType'] = NodePathType;
var _a = cc._decorator, ccclass = _a.ccclass, executeInEditMode = _a.executeInEditMode, menu = _a.menu, inspector = _a.inspector, property = _a.property;
var PropController = /** @class */ (function (_super) {
    __extends(PropController, _super);
    function PropController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.nodePathType = NodePathType.SiblingIndex;
        _this.open = true;
        _this._uid = "";
        _this._state = 0;
        _this._states = [];
        _this.propertyJson = '';
        return _this;
        // update (dt) {}
    }
    PropController_1 = PropController;
    Object.defineProperty(PropController.prototype, "uid", {
        get: function () {
            return this._uid;
        },
        set: function (val) {
            this._uid = val;
            this._refreshIdEnum();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropController.prototype, "state", {
        get: function () {
            return this._state;
        },
        set: function (val) {
            this._state = val;
            this.doControl(val);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropController.prototype, "states", {
        get: function () {
            return this._states;
        },
        set: function (states) {
            this._states = states;
            this._refresh();
        },
        enumerable: false,
        configurable: true
    });
    PropController.prototype.onLoad = function () {
        this._refresh();
        this._refreshIdEnum();
    };
    PropController.prototype.start = function () { };
    PropController.prototype.doControl = function (type) {
        var t = type;
        var ctrl = JSON.parse(this.propertyJson);
        var map = ctrl[t];
        for (var path in map) {
            var paths = path.split(":");
            var node = null;
            switch (+paths[0]) {
                case NodePathType.Name:
                    node = cc.find(paths[1], this.node);
                    break;
                case NodePathType.SiblingIndex:
                    node = this._getNodeBySiblingIndex(paths[1], this.node);
                    break;
            }
            if (!node) {
                cc.warn("find node faild, path:", path);
                continue;
            }
            var nodeProps = map[path];
            for (var key in nodeProps) {
                var func = _localSetFunc[key];
                if (!func)
                    continue;
                func(node, nodeProps[key]);
            }
        }
    };
    PropController.prototype._getNodeBySiblingIndex = function (path, node) {
        path = (path[0] == '/') ? path.substring(1) : path;
        for (var _i = 0, _a = path.split("/"); _i < _a.length; _i++) {
            var e = _a[_i];
            node = node.children[+e];
        }
        return node;
    };
    PropController.prototype._refresh = function () {
        if (CC_EDITOR) {
            var array = this._states.map(function (val, i) {
                return { name: val, value: i };
            });
            //@ts-ignore
            cc.Class.Attr.setClassAttr(this, 'state', 'enumList', array);
            //@ts-ignore
            // Editor.Utils.refreshSelectedInspector('node', this.node.uuid);
        }
    };
    PropController.prototype._refreshIdEnum = function () {
        if (CC_EDITOR) {
            var coms = this.node.getComponents(PropController_1);
            var array = coms.map(function (val, i) {
                return { name: val.uid, value: i };
            });
            //@ts-ignore
            cc.Class.Attr.setClassAttr(PropSelector_1.default, 'ctrlId', 'enumList', array);
        }
    };
    var PropController_1;
    __decorate([
        property({ type: cc.Enum(NodePathType), tooltip: "Name: 根据node name保存, SiblingIndex: 根据node 在children的index保存" })
    ], PropController.prototype, "nodePathType", void 0);
    __decorate([
        property({ tooltip: "是否启用控制器" })
    ], PropController.prototype, "open", void 0);
    __decorate([
        property({ serializable: true })
    ], PropController.prototype, "_uid", void 0);
    __decorate([
        property
    ], PropController.prototype, "uid", null);
    __decorate([
        property({ type: cc.Enum({}) })
    ], PropController.prototype, "_state", void 0);
    __decorate([
        property({ type: cc.Enum({}) })
    ], PropController.prototype, "state", null);
    __decorate([
        property
    ], PropController.prototype, "_states", void 0);
    __decorate([
        property([cc.String])
    ], PropController.prototype, "states", null);
    __decorate([
        property()
    ], PropController.prototype, "propertyJson", void 0);
    PropController = PropController_1 = __decorate([
        ccclass,
        executeInEditMode,
        menu('i18n:状态控制/PropController'),
        inspector('packages://propcontroller/dist/inspector.js')
    ], PropController);
    return PropController;
}(cc.Component));
exports.default = PropController;
function _setPosition(node, prop) {
    node.setPosition(prop);
}
function _setColor(node, prop) {
    node.color = new cc.Color(prop.r, prop.g, prop.b);
}
function _setSacle(node, prop) {
    node.scaleX = prop.scaleX;
    node.scaleY = prop.scaleY;
}
function _setRotation(node, prop) {
    node.angle = prop;
}
function _setOpacity(node, prop) {
    node.opacity = prop;
}
function _setSlew(node, prop) {
    node.skewX = prop.skewX;
    node.skewY = prop.skewY;
}
function _setSize(node, prop) {
    node.setContentSize(prop);
}
function _setAnchor(node, prop) {
    node.anchorX = prop.anchorX;
    node.anchorY = prop.anchorY;
}
function _setActive(node, prop) {
    node.active = prop;
}
function _setLabelString(node, prop) {
    node.getComponent(cc.Label).string = prop;
}
function _setSpriteTexture(node, prop) {
    cc.assetManager.loadAny({ uuid: prop }, function (error, data) {
        if (error) {
            Editor.warn('PropController  load sprite texture faild', prop, error);
            return;
        }
        ;
        node.getComponent(cc.Sprite).spriteFrame = data;
    });
}
var _localSetFunc = {};
function _regiestSetFunction(id, func) {
    if (_localSetFunc[id]) {
        cc.warn("");
    }
    _localSetFunc[id] = func;
}
_regiestSetFunction(PropSelector_1.PropEmum.Active, _setActive);
_regiestSetFunction(PropSelector_1.PropEmum.Position, _setPosition);
_regiestSetFunction(PropSelector_1.PropEmum.Color, _setColor);
_regiestSetFunction(PropSelector_1.PropEmum.Scale, _setSacle);
_regiestSetFunction(PropSelector_1.PropEmum.Rotation, _setRotation);
_regiestSetFunction(PropSelector_1.PropEmum.Opacity, _setOpacity);
_regiestSetFunction(PropSelector_1.PropEmum.Slew, _setSlew);
_regiestSetFunction(PropSelector_1.PropEmum.Size, _setSize);
_regiestSetFunction(PropSelector_1.PropEmum.Anchor, _setAnchor);
_regiestSetFunction(PropSelector_1.PropEmum.Label_String, _setLabelString);
_regiestSetFunction(PropSelector_1.PropEmum.Sprite_Texture, _setSpriteTexture);

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvUHJvcENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtDQUF3RDtBQUV4RCxJQUFZLFlBR1g7QUFIRCxXQUFZLFlBQVk7SUFDcEIsK0NBQUksQ0FBQTtJQUNKLCtEQUFZLENBQUE7QUFDaEIsQ0FBQyxFQUhXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBR3ZCO0FBQ0QsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLFlBQVksQ0FBQztBQUU1QixJQUFBLEtBQTBELEVBQUUsQ0FBQyxVQUFVLEVBQXRFLE9BQU8sYUFBQSxFQUFFLGlCQUFpQix1QkFBQSxFQUFFLElBQUksVUFBQSxFQUFFLFNBQVMsZUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQU05RTtJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQWdIQztRQTdHRyxrQkFBWSxHQUFHLFlBQVksQ0FBQyxZQUFZLENBQUM7UUFHekMsVUFBSSxHQUFHLElBQUksQ0FBQztRQUdaLFVBQUksR0FBRyxFQUFFLENBQUM7UUFXVixZQUFNLEdBQUcsQ0FBQyxDQUFDO1FBV1gsYUFBTyxHQUFhLEVBQUUsQ0FBQztRQVd2QixrQkFBWSxHQUFHLEVBQUUsQ0FBQzs7UUFxRWxCLGlCQUFpQjtJQUNyQixDQUFDO3VCQWhIb0IsY0FBYztJQVcvQixzQkFBSSwrQkFBRzthQUFQO1lBQ0ksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3JCLENBQUM7YUFDRCxVQUFRLEdBQVc7WUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUNoQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDMUIsQ0FBQzs7O09BSkE7SUFTRCxzQkFBSSxpQ0FBSzthQUFUO1lBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3ZCLENBQUM7YUFDRCxVQUFVLEdBQVc7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QU0sYUFBYSxHQUF3RCxFQUFFLENBQUM7QUFDOUUsU0FBUyxtQkFBbUIsQ0FBQyxFQUFVLEVBQUUsSUFBd0M7SUFDN0UsSUFBRyxhQUFhLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDbEIsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUNmO0lBQ0QsYUFBYSxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQztBQUM3QixDQUFDO0FBRUQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDakQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDckQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDL0MsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDL0MsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDckQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDbkQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDN0MsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDN0MsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDakQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxZQUFZLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDNUQsbUJBQW1CLENBQUMsdUJBQVEsQ0FBQyxjQUFjLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wU2VsZWN0b3IsIHsgUHJvcEVtdW0gfSBmcm9tIFwiLi9Qcm9wU2VsZWN0b3JcIjtcblxuZXhwb3J0IGVudW0gTm9kZVBhdGhUeXBlIHtcbiAgICBOYW1lLFxuICAgIFNpYmxpbmdJbmRleCxcbn1cbmNjWydOb2RlUGF0aFR5cGUnXSA9IE5vZGVQYXRoVHlwZTtcblxuY29uc3Qge2NjY2xhc3MsIGV4ZWN1dGVJbkVkaXRNb2RlLCBtZW51LCBpbnNwZWN0b3IsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5AZXhlY3V0ZUluRWRpdE1vZGVcbkBtZW51KCdpMThuOueKtuaAgeaOp+WIti9Qcm9wQ29udHJvbGxlcicpXG5AaW5zcGVjdG9yKCdwYWNrYWdlczovL3Byb3Bjb250cm9sbGVyL2Rpc3QvaW5zcGVjdG9yLmpzJylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb3BDb250cm9sbGVyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblxuICAgIEBwcm9wZXJ0eSh7dHlwZTogY2MuRW51bShOb2RlUGF0aFR5cGUpLCB0b29sdGlwOiBcIk5hbWU6IOagueaNrm5vZGUgbmFtZeS/neWtmCwgU2libGluZ0luZGV4OiDmoLnmja5ub2RlIOWcqGNoaWxkcmVu55qEaW5kZXjkv53lrZhcIn0pXG4gICAgbm9kZVBhdGhUeXBlID0gTm9kZVBhdGhUeXBlLlNpYmxpbmdJbmRleDtcblxuICAgIEBwcm9wZXJ0eSh7dG9vbHRpcDogXCLmmK/lkKblkK/nlKjmjqfliLblmahcIn0pXG4gICAgb3BlbiA9IHRydWU7XG4gICAgXG4gICAgQHByb3BlcnR5KHtzZXJpYWxpemFibGU6IHRydWV9KVxuICAgIF91aWQgPSBcIlwiO1xuICAgIEBwcm9wZXJ0eVxuICAgIGdldCB1aWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl91aWQ7XG4gICAgfVxuICAgIHNldCB1aWQodmFsOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fdWlkID0gdmFsO1xuICAgICAgICB0aGlzLl9yZWZyZXNoSWRFbnVtKCk7XG4gICAgfVxuICAgIFxuICAgIEBwcm9wZXJ0eSh7dHlwZTogY2MuRW51bSh7fSl9KVxuICAgIF9zdGF0ZSA9IDA7XG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5FbnVtKHt9KX0pXG4gICAgZ2V0IHN0YXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhdGU7XG4gICAgfVxuICAgIHNldCBzdGF0ZSh2YWw6IG51bWJlcikge1xuICAgICAgICB0aGlzLl9zdGF0ZSA9IHZhbDtcbiAgICAgICAgdGhpcy5kb0NvbnRyb2wodmFsKTtcbiAgICB9XG5cbiAgICBAcHJvcGVydHlcbiAgICBfc3RhdGVzOiBzdHJpbmdbXSA9IFtdO1xuICAgIEBwcm9wZXJ0eShbY2MuU3RyaW5nXSlcbiAgICBnZXQgc3RhdGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhdGVzO1xuICAgIH1cbiAgICBzZXQgc3RhdGVzKHN0YXRlczogc3RyaW5nW10pIHtcbiAgICAgICAgdGhpcy5fc3RhdGVzID0gc3RhdGVzO1xuICAgICAgICB0aGlzLl9yZWZyZXNoKCk7XG4gICAgfVxuXG4gICAgQHByb3BlcnR5KClcbiAgICBwcm9wZXJ0eUpzb24gPSAnJztcblxuICAgIG9uTG9hZCAoKSB7XG4gICAgICAgIHRoaXMuX3JlZnJlc2goKTtcbiAgICAgICAgdGhpcy5fcmVmcmVzaElkRW51bSgpO1xuICAgIH1cblxuICAgIHN0YXJ0ICgpIHt9XG5cbiAgICBwdWJsaWMgZG9Db250cm9sKHR5cGU6IHN0cmluZyB8IG51bWJlcikge1xuICAgICAgICBsZXQgdCA9IHR5cGU7XG4gICAgICAgIGxldCBjdHJsID0gSlNPTi5wYXJzZSh0aGlzLnByb3BlcnR5SnNvbik7XG5cbiAgICAgICAgbGV0IG1hcCA9IGN0cmxbdF07ICAgICAgXG4gICAgICAgIGZvcihjb25zdCBwYXRoIGluIG1hcCkge1xuICAgICAgICAgICAgbGV0IHBhdGhzID0gcGF0aC5zcGxpdChcIjpcIik7XG4gICAgICAgICAgICBsZXQgbm9kZTogY2MuTm9kZSA9IG51bGw7XG4gICAgICAgICAgICBzd2l0Y2goK3BhdGhzWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBOb2RlUGF0aFR5cGUuTmFtZTpcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGNjLmZpbmQocGF0aHNbMV0sIHRoaXMubm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgTm9kZVBhdGhUeXBlLlNpYmxpbmdJbmRleDpcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHRoaXMuX2dldE5vZGVCeVNpYmxpbmdJbmRleChwYXRoc1sxXSwgdGhpcy5ub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZighbm9kZSkgeyBjYy53YXJuKFwiZmluZCBub2RlIGZhaWxkLCBwYXRoOlwiLCBwYXRoKTsgY29udGludWU7fVxuICAgICAgICAgICAgbGV0IG5vZGVQcm9wcyA9IG1hcFtwYXRoXTtcbiAgICAgICAgICAgIGZvcihjb25zdCBrZXkgaW4gbm9kZVByb3BzKSB7ICBcbiAgICAgICAgICAgICAgICBsZXQgZnVuYyA9IF9sb2NhbFNldEZ1bmNba2V5XTtcbiAgICAgICAgICAgICAgICBpZighZnVuYykgY29udGludWU7XG4gICAgICAgICAgICAgICAgZnVuYyhub2RlLCBub2RlUHJvcHNba2V5XSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX2dldE5vZGVCeVNpYmxpbmdJbmRleChwYXRoOiBzdHJpbmcsIG5vZGU6IGNjLk5vZGUpIHtcbiAgICAgICAgcGF0aCA9IChwYXRoWzBdID09ICcvJykgPyBwYXRoLnN1YnN0cmluZygxKSA6IHBhdGg7XG4gICAgICAgIGZvcihjb25zdCBlIG9mIHBhdGguc3BsaXQoXCIvXCIpKSB7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5jaGlsZHJlblsrZV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfcmVmcmVzaCgpIHtcbiAgICAgICAgaWYoQ0NfRURJVE9SKSB7XG4gICAgICAgICAgICBsZXQgYXJyYXkgPSB0aGlzLl9zdGF0ZXMubWFwKCh2YWwsIGkpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge25hbWU6IHZhbCwgdmFsdWU6IGl9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgICAgIGNjLkNsYXNzLkF0dHIuc2V0Q2xhc3NBdHRyKHRoaXMsICdzdGF0ZScsICdlbnVtTGlzdCcsIGFycmF5KTtcbiAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgLy8gRWRpdG9yLlV0aWxzLnJlZnJlc2hTZWxlY3RlZEluc3BlY3Rvcignbm9kZScsIHRoaXMubm9kZS51dWlkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX3JlZnJlc2hJZEVudW0oKSB7XG4gICAgICAgIGlmKENDX0VESVRPUikge1xuICAgICAgICAgICAgbGV0IGNvbXMgPSB0aGlzLm5vZGUuZ2V0Q29tcG9uZW50cyhQcm9wQ29udHJvbGxlcik7XG4gICAgICAgICAgICBsZXQgYXJyYXkgPSBjb21zLm1hcCgodmFsLCBpKSA9PiB7IFxuICAgICAgICAgICAgICAgIHJldHVybiB7bmFtZTogdmFsLnVpZCwgdmFsdWU6IGl9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgICAgIGNjLkNsYXNzLkF0dHIuc2V0Q2xhc3NBdHRyKFByb3BTZWxlY3RvciwgJ2N0cmxJZCcsICdlbnVtTGlzdCcsIGFycmF5KTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgXG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuXG5mdW5jdGlvbiBfc2V0UG9zaXRpb24obm9kZTogY2MuTm9kZSwgcHJvcDogYW55KSB7XG4gICAgbm9kZS5zZXRQb3NpdGlvbihwcm9wKTtcbn1cbmZ1bmN0aW9uIF9zZXRDb2xvcihub2RlOiBjYy5Ob2RlLCBwcm9wOiBhbnkpIHtcbiAgICBub2RlLmNvbG9yID0gbmV3IGNjLkNvbG9yKHByb3AuciwgcHJvcC5nLCBwcm9wLmIpO1xufVxuZnVuY3Rpb24gX3NldFNhY2xlKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIG5vZGUuc2NhbGVYID0gcHJvcC5zY2FsZVg7XG4gICAgbm9kZS5zY2FsZVkgPSBwcm9wLnNjYWxlWTtcbn1cbmZ1bmN0aW9uIF9zZXRSb3RhdGlvbihub2RlOiBjYy5Ob2RlLCBwcm9wOiBhbnkpIHtcbiAgICBub2RlLmFuZ2xlID0gcHJvcDtcbn1cbmZ1bmN0aW9uIF9zZXRPcGFjaXR5KG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIG5vZGUub3BhY2l0eSA9IHByb3A7XG59XG5mdW5jdGlvbiBfc2V0U2xldyhub2RlOiBjYy5Ob2RlLCBwcm9wOiBhbnkpIHtcbiAgICBub2RlLnNrZXdYID0gcHJvcC5za2V3WDtcbiAgICBub2RlLnNrZXdZID0gcHJvcC5za2V3WTtcbn1cbmZ1bmN0aW9uIF9zZXRTaXplKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIG5vZGUuc2V0Q29udGVudFNpemUocHJvcCk7XG59XG5mdW5jdGlvbiBfc2V0QW5jaG9yKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIG5vZGUuYW5jaG9yWCA9IHByb3AuYW5jaG9yWDtcbiAgICBub2RlLmFuY2hvclkgPSBwcm9wLmFuY2hvclk7XG59XG5mdW5jdGlvbiBfc2V0QWN0aXZlKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIG5vZGUuYWN0aXZlID0gcHJvcDtcbn1cbmZ1bmN0aW9uIF9zZXRMYWJlbFN0cmluZyhub2RlOiBjYy5Ob2RlLCBwcm9wOiBhbnkpIHtcbiAgICBub2RlLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gcHJvcDtcbn1cbmZ1bmN0aW9uIF9zZXRTcHJpdGVUZXh0dXJlKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkge1xuICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkQW55KHt1dWlkOiBwcm9wfSwgKGVycm9yLCBkYXRhKSA9PiB7ICAgICAgICBcbiAgICAgICAgaWYoZXJyb3IpIHtcbiAgICAgICAgICAgIEVkaXRvci53YXJuKCdQcm9wQ29udHJvbGxlciAgbG9hZCBzcHJpdGUgdGV4dHVyZSBmYWlsZCcsIHByb3AsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiA7XG4gICAgICAgIH07XG4gICAgICAgIG5vZGUuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSBkYXRhO1xuICAgIH0pO1xufVxuXG5jb25zdCBfbG9jYWxTZXRGdW5jOiB7W2tleTogbnVtYmVyXTogKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkgPT4gdm9pZH0gPSB7fTtcbmZ1bmN0aW9uIF9yZWdpZXN0U2V0RnVuY3Rpb24oaWQ6IG51bWJlciwgZnVuYzogKG5vZGU6IGNjLk5vZGUsIHByb3A6IGFueSkgPT4gdm9pZCkge1xuICAgIGlmKF9sb2NhbFNldEZ1bmNbaWRdKSB7XG4gICAgICAgIGNjLndhcm4oXCJcIik7XG4gICAgfVxuICAgIF9sb2NhbFNldEZ1bmNbaWRdID0gZnVuYztcbn1cblxuX3JlZ2llc3RTZXRGdW5jdGlvbihQcm9wRW11bS5BY3RpdmUsIF9zZXRBY3RpdmUpO1xuX3JlZ2llc3RTZXRGdW5jdGlvbihQcm9wRW11bS5Qb3NpdGlvbiwgX3NldFBvc2l0aW9uKTtcbl9yZWdpZXN0U2V0RnVuY3Rpb24oUHJvcEVtdW0uQ29sb3IsIF9zZXRDb2xvcik7XG5fcmVnaWVzdFNldEZ1bmN0aW9uKFByb3BFbXVtLlNjYWxlLCBfc2V0U2FjbGUpO1xuX3JlZ2llc3RTZXRGdW5jdGlvbihQcm9wRW11bS5Sb3RhdGlvbiwgX3NldFJvdGF0aW9uKTtcbl9yZWdpZXN0U2V0RnVuY3Rpb24oUHJvcEVtdW0uT3BhY2l0eSwgX3NldE9wYWNpdHkpO1xuX3JlZ2llc3RTZXRGdW5jdGlvbihQcm9wRW11bS5TbGV3LCBfc2V0U2xldyk7XG5fcmVnaWVzdFNldEZ1bmN0aW9uKFByb3BFbXVtLlNpemUsIF9zZXRTaXplKTtcbl9yZWdpZXN0U2V0RnVuY3Rpb24oUHJvcEVtdW0uQW5jaG9yLCBfc2V0QW5jaG9yKTtcbl9yZWdpZXN0U2V0RnVuY3Rpb24oUHJvcEVtdW0uTGFiZWxfU3RyaW5nLCBfc2V0TGFiZWxTdHJpbmcpO1xuX3JlZ2llc3RTZXRGdW5jdGlvbihQcm9wRW11bS5TcHJpdGVfVGV4dHVyZSwgX3NldFNwcml0ZVRleHR1cmUpO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/TexturePlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '58ad8KR/hRJi7EtoZ+PAyOU', 'TexturePlus');
// Script/Common/Components/TexturePlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var TextureAssembler_1 = require("../Assemblers/TextureAssembler");
var CommonUtils_1 = require("../Utils/CommonUtils");
var renderEngine = cc.renderer.renderEngine;
var TextureType;
(function (TextureType) {
    TextureType[TextureType["Cut"] = 0] = "Cut";
    TextureType[TextureType["Stretch"] = 1] = "Stretch"; // 拉伸, 暂未实现
})(TextureType || (TextureType = {}));
var _vec2_temp = new cc.Vec2();
var _mat4_temp = new cc.Mat4();
var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, executeInEditMode = _a.executeInEditMode, mixins = _a.mixins, property = _a.property;
var TexturePlus = /** @class */ (function (_super) {
    __extends(TexturePlus, _super);
    function TexturePlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._texture = null;
        // _type: TextureType = 0;
        // @property({type: cc.Enum(TextureType), serializable: true})
        // get type() {
        //     return this._type;
        // }
        // set type(val: TextureType) {
        //     this._type = val;
        //     this.setVertsDirty();
        // }
        _this._polygon = [];
        _this.srcBlendFactor = cc.macro.BlendFactor.SRC_ALPHA;
        _this.dstBlendFactor = cc.macro.BlendFactor.ONE_MINUS_SRC_ALPHA;
        _this.editing = false;
        _this._assembler = null;
        return _this;
    }
    Object.defineProperty(TexturePlus.prototype, "texture", {
        get: function () {
            return this._texture;
        },
        set: function (val) {
            this._texture = val;
            var l = -val.width / 2, b = -val.height / 2, t = val.height / 2, r = val.width / 2;
            this.polygon = [cc.v2(l, b), cc.v2(r, b), cc.v2(r, t), cc.v2(l, t)];
            this.node.width = val.width;
            this.node.height = val.height;
            this._updateMaterial();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TexturePlus.prototype, "polygon", {
        get: function () {
            return this._polygon;
        },
        set: function (points) {
            this._polygon = points;
            this._updateVerts();
        },
        enumerable: false,
        configurable: true
    });
    TexturePlus.prototype.onLoad = function () {
        this.node['_hitTest'] = this._hitTest.bind(this);
    };
    TexturePlus.prototype.start = function () {
        var _this = this;
        this.node.on(cc.Node.EventType.TOUCH_START, function () {
            console.log("click texture plus");
        }, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (e) {
            _this.node.x += e.getDeltaX();
            _this.node.y += e.getDeltaY();
        }, this);
    };
    TexturePlus.prototype._updateVerts = function () {
        this.setVertsDirty();
    };
    TexturePlus.prototype._updateMaterial = function () {
        var texture = this._texture;
        var material = this.getMaterial(0);
        if (material) {
            if (material.getDefine("USE_TEXTURE") !== undefined) {
                material.define("USE_TEXTURE", true);
            }
            material.setProperty("texture", texture);
        }
        this['__proto__']._updateBlendFunc.call(this);
        this.setVertsDirty();
    };
    TexturePlus.prototype._validateRender = function () {
    };
    TexturePlus.prototype._resetAssembler = function () {
        var assembler = this._assembler = new TextureAssembler_1.default();
        assembler.init(this);
        this._updateColor();
        this.setVertsDirty();
    };
    TexturePlus.prototype._hitTest = function (cameraPt) {
        var node = this.node;
        var size = node.getContentSize(), w = size.width, h = size.height, testPt = _vec2_temp;
        node['_updateWorldMatrix']();
        // If scale is 0, it can't be hit.
        if (!cc.Mat4.invert(_mat4_temp, node['_worldMatrix'])) {
            return false;
        }
        cc.Vec2.transformMat4(testPt, cameraPt, _mat4_temp);
        return CommonUtils_1.CommonUtils.isInPolygon(testPt, this.polygon);
    };
    TexturePlus.Type = TextureType;
    __decorate([
        property(cc.Texture2D)
    ], TexturePlus.prototype, "_texture", void 0);
    __decorate([
        property(cc.Texture2D)
    ], TexturePlus.prototype, "texture", null);
    __decorate([
        property({ type: [cc.Vec2], serializable: true })
    ], TexturePlus.prototype, "_polygon", void 0);
    __decorate([
        property({ type: [cc.Vec2], serializable: true })
    ], TexturePlus.prototype, "polygon", null);
    __decorate([
        property({ type: cc.Enum(cc.macro.BlendFactor), override: true })
    ], TexturePlus.prototype, "srcBlendFactor", void 0);
    __decorate([
        property({ type: cc.Enum(cc.macro.BlendFactor), override: true })
    ], TexturePlus.prototype, "dstBlendFactor", void 0);
    __decorate([
        property(cc.Boolean)
    ], TexturePlus.prototype, "editing", void 0);
    TexturePlus = __decorate([
        ccclass,
        executeInEditMode,
        menu('i18n:MAIN_MENU.component.ui/TexturePlus'),
        mixins(cc.BlendFunc)
    ], TexturePlus);
    return TexturePlus;
}(cc.RenderComponent));
exports.default = TexturePlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/ScrollViewHelper.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '90448z1fXJKVppxfCvCjY6W', 'ScrollViewHelper');
// Script/Common/Components/ScrollViewHelper.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScrollViewHelper = exports.ScrollViewElementProxy = exports.ScrollViewElementProxyState = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
//help:
//add this to the ScrollView node
//add all data by addData function, that includes the layout of the data, we call it a "Proxy"
//set onFreeUI to your free handler, put the node in pool
//set onAllocUI to your alloc handler, instansiate the node, and refresh it.
//enjoy, all ui will have a lazy create 
//if you call scrollTo() function with no duration, you should call checkUI(), because scrollTo with no duration will not trigger "scrollEvents"
var ScrollViewElementProxyState;
(function (ScrollViewElementProxyState) {
    ScrollViewElementProxyState[ScrollViewElementProxyState["NoUI"] = 0] = "NoUI";
    ScrollViewElementProxyState[ScrollViewElementProxyState["HaveUI"] = 1] = "HaveUI";
})(ScrollViewElementProxyState = exports.ScrollViewElementProxyState || (exports.ScrollViewElementProxyState = {}));
var ScrollViewElementProxy = /** @class */ (function () {
    function ScrollViewElementProxy() {
        this.state = ScrollViewElementProxyState.NoUI;
    }
    return ScrollViewElementProxy;
}());
exports.ScrollViewElementProxy = ScrollViewElementProxy;
var ScrollViewHelper = /** @class */ (function (_super) {
    __extends(ScrollViewHelper, _super);
    function ScrollViewHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.syncInterval = 0.05;
        _this._proxys = [];
        _this._syncCounter = 0;
        _this._lastCheckX = 0;
        return _this;
    }
    Object.defineProperty(ScrollViewHelper.prototype, "scrollView", {
        get: function () {
            return this._svCachedScrollView;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollViewHelper.prototype, "datas", {
        get: function () {
            return this._proxys;
        },
        enumerable: false,
        configurable: true
    });
    ScrollViewHelper.prototype.clearData = function () {
        for (var _i = 0, _a = this._proxys; _i < _a.length; _i++) {
            var proxy = _a[_i];
            if (proxy.ui) {
                if (this.onFreeUI) {
                    this.onFreeUI(proxy);
                }
            }
        }
        this._proxys.length = 0;
    };
    ScrollViewHelper.prototype.addData = function (data) {
        this._initializeProxy(data);
        this._proxys.push(data);
    };
    ScrollViewHelper.prototype.setDebug = function (debug) {
        if (debug && !this._debugNode) {
            this._debugNode = (new cc.Node()).addComponent(cc.Graphics);
            this.scrollView.content.addChild(this._debugNode.node);
            this._debugNode.node.setPosition(cc.v2(0, 0));
        }
        else if (!debug && this._debugNode) {
            this._debugNode.node.removeFromParent();
            this._debugNode.node.destroy();
        }
        this._refreshDebug();
    };
    ScrollViewHelper.prototype.checkUI = function () {
        this._checkUIState();
        this._syncingUI = true;
    };
    ScrollViewHelper.prototype.setLoopHorizontal = function (loop) {
        if (loop != this._horizontalLoop) {
            if (loop) {
                for (var i = this._proxys.length - 1; i >= 0; i--) {
                    var target = this._proxys[i];
                    if (!target.horizontalLoop) {
                        //this is a original
                        var copyed = new ScrollViewElementProxy();
                        this._initializeProxy(copyed);
                        copyed.src = target.src;
                        copyed.region = new cc.Rect(target.region.x, target.region.y, target.region.width, target.region.height);
                        copyed.horizontalLoop = true;
                        copyed.verticalLoop = target.verticalLoop;
                        copyed.region.x += this.scrollView.content.width;
                        this._proxys.push(copyed);
                    }
                }
                this.scrollView.content.setContentSize(this.scrollView.content.width * 2, this.scrollView.content.height);
            }
            else {
                for (var i = this._proxys.length - 1; i >= 0; i--) {
                    var target = this._proxys[i];
                    if (target.horizontalLoop) {
                        if (target.ui) {
                            this.onFreeUI(target);
                            target.ui = null;
                            this._proxys.splice(i, 1);
                        }
                    }
                }
                this.scrollView.content.setContentSize(this.scrollView.content.width / 2, this.scrollView.content.height);
            }
            this._horizontalLoop = loop;
        }
    };
    ScrollViewHelper.prototype.onLoad = function () {
        this._bindScrollView(this.getComponent(cc.ScrollView));
    };
    ScrollViewHelper.prototype.update = function (dt) {
        if (this._syncingUI) {
            this._syncCounter += dt;
            if (this._syncCounter >= this.syncInterval) {
                this._syncCounter = 0;
                this._syncUIState(1);
            }
        }
    };
    ScrollViewHelper.prototype._initializeProxy = function (proxy) {
        proxy.horizontalLoop = false;
        proxy.src = proxy;
        proxy.state = ScrollViewElementProxyState.NoUI;
        proxy.ui = null;
        proxy.verticalLoop = false;
    };
    ScrollViewHelper.prototype._checkLoopHorizontal = function () {
        var offset = this.scrollView.getScrollOffset();
        var delta = offset.x - this._lastCheckX;
        if (Math.abs(delta) > 2) {
            this._lastCheckX = offset.x;
            var originalWidth = this.scrollView.content.width / 2;
            //check move whole content
            if (delta < 0 && offset.x < -originalWidth) {
                offset.x += originalWidth;
                this._lastCheckX = offset.x;
                offset.x = -offset.x;
                this.scrollView.scrollToOffset(offset);
            }
            else if (delta > 0 && offset.x > 0) {
                offset.x -= originalWidth;
                this._lastCheckX = offset.x;
                offset.x = -offset.x;
                this.scrollView.scrollToOffset(offset);
            }
        }
    };
    ScrollViewHelper.prototype._bindScrollView = function (view) {
        this._svCachedScrollView = this.getComponent(cc.ScrollView);
        var eventHandler = new cc.Component.EventHandler();
        eventHandler.target = this.node;
        eventHandler.component = "ScrollViewHelper";
        eventHandler.handler = "_onScroll";
        this._svCachedScrollView.scrollEvents.push(eventHandler);
        this._svCachedScrollView.node.on(cc.Node.EventType.SIZE_CHANGED, this._refreshViewportRect, this);
        this._svCachedScrollView.content.on(cc.Node.EventType.ANCHOR_CHANGED, this._refreshViewportRect, this);
        this._svCachedScrollView.content.on(cc.Node.EventType.SIZE_CHANGED, this._refreshViewportRect, this);
        this._refreshViewportRect();
    };
    ScrollViewHelper.prototype._refreshViewportRect = function () {
        this._rectCachedViewport = cc.rect();
        this._rectCachedViewport.size = this._svCachedScrollView.node.getContentSize();
        this._rectCachedViewport.origin = cc.v2(-this._svCachedScrollView.content.anchorX * this._svCachedScrollView.content.width, (1 - this._svCachedScrollView.content.anchorY) * this._svCachedScrollView.content.height - this._rectCachedViewport.size.height);
        this._checkUIState();
        this._syncingUI = true;
    };
    ScrollViewHelper.prototype._checkUIState = function () {
        var delta = this._svCachedScrollView.getScrollOffset();
        var viewWidth = this._rectCachedViewport.width;
        var viewHeight = this._rectCachedViewport.height;
        var viewX = -delta.x + this._rectCachedViewport.x;
        var viewY = -delta.y + this._rectCachedViewport.y;
        for (var _i = 0, _a = this._proxys; _i < _a.length; _i++) {
            var proxy = _a[_i];
            var rect = proxy.region;
            var x = rect.x;
            var y = rect.y;
            if (x > viewX - rect.width && x < viewX + viewWidth &&
                y > viewY - rect.height && y < viewY + viewHeight) {
                proxy.state = ScrollViewElementProxyState.HaveUI;
            }
            else {
                proxy.state = ScrollViewElementProxyState.NoUI;
            }
        }
    };
    ScrollViewHelper.prototype._syncUIState = function (maxAllocCount) {
        var changeCount = 0;
        for (var _i = 0, _a = this._proxys; _i < _a.length; _i++) {
            var proxy = _a[_i];
            if (proxy.state == ScrollViewElementProxyState.NoUI && proxy.ui) {
                this.onFreeUI(proxy);
                changeCount++;
                if (this._debugNode) {
                    cc.log("ScrollViewHelper._syncUIState ----> free ui");
                }
            }
        }
        for (var _b = 0, _c = this._proxys; _b < _c.length; _b++) {
            var proxy = _c[_b];
            if (proxy.state == ScrollViewElementProxyState.HaveUI && !proxy.ui) {
                var pooled = this.isUIPooled && this.isUIPooled(proxy);
                this.onAllocUI(proxy);
                changeCount++;
                if (!pooled) { //real alloc should be limited
                    maxAllocCount--;
                }
                if (this._debugNode) {
                    cc.log("ScrollViewHelper._syncUIState ----> alloc ui");
                }
            }
            if (maxAllocCount <= 0) {
                break;
            }
        }
        if (changeCount <= 0) {
            //everything is changed
            this._syncingUI = false;
        }
    };
    ScrollViewHelper.prototype._onScroll = function () {
        if (this._horizontalLoop) {
            this._checkLoopHorizontal();
        }
        this._checkUIState();
        this._syncingUI = true;
    };
    ScrollViewHelper.prototype._refreshDebug = function () {
        if (this._debugNode) {
            this._debugNode.clear();
            this._debugNode.fillColor = cc.color(255, 0, 0, 255);
            for (var i = 0; i < this._proxys.length; i++) {
                this._debugNode.fillRect(this._proxys[i].region.x, this._proxys[i].region.y, this._proxys[i].region.width, this._proxys[i].region.height);
            }
        }
    };
    __decorate([
        property()
    ], ScrollViewHelper.prototype, "syncInterval", void 0);
    ScrollViewHelper = __decorate([
        ccclass
    ], ScrollViewHelper);
    return ScrollViewHelper;
}(cc.Component));
exports.ScrollViewHelper = ScrollViewHelper;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/TouchPlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1c88eM+YFpH45yVr93vRF2l', 'TouchPlus');
// Script/Common/Components/TouchPlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TouchPlus = /** @class */ (function (_super) {
    __extends(TouchPlus, _super);
    function TouchPlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.offset = 15; // 误差值
        _this.isTouch = false;
        _this.isClick = true;
        return _this;
        // update (dt) {}
    }
    /** 添加点击事件和滑动事件 */
    TouchPlus.prototype.addEvent = function (click, slide) {
        this.clickEvent = click;
        this.slideEvent = slide;
    };
    // onLoad () {}
    TouchPlus.prototype.start = function () {
        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
    };
    TouchPlus.prototype.touchStart = function (e) {
        this.isTouch = true;
        this.startPosition = e.getLocation();
    };
    TouchPlus.prototype.touchMove = function (e) {
        if (!this.isTouch)
            return;
        var pos = e.getLocation();
        var len = pos.sub(this.startPosition).mag();
        if (len > this.offset) {
            this.isClick = false;
            // 触发滑动
            this.slideEvent && this.slideEvent(e);
        }
    };
    TouchPlus.prototype.touchEnd = function (e) {
        if (!this.isTouch)
            return;
        this.isTouch = false;
        this.isClick && this.clickEvent && this.clickEvent(e);
        this.isClick = true;
    };
    TouchPlus.prototype.touchCancel = function (e) {
        if (!this.isTouch)
            return;
        this.isTouch = false;
        this.isClick = true;
    };
    TouchPlus.prototype.onDestroy = function () {
        this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);
        this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);
        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);
    };
    TouchPlus = __decorate([
        ccclass
    ], TouchPlus);
    return TouchPlus;
}(cc.Component));
exports.default = TouchPlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvVG91Y2hQbHVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXVDLDZCQUFZO0lBQW5EO1FBQUEscUVBZ0VDO1FBOURXLFlBQU0sR0FBSSxFQUFFLENBQUMsQ0FBTyxNQUFNO1FBRTFCLGFBQU8sR0FBRyxLQUFLLENBQUM7UUFFaEIsYUFBTyxHQUFHLElBQUksQ0FBQzs7UUF5RHZCLGlCQUFpQjtJQUNyQixDQUFDO0lBckRHLGtCQUFrQjtJQUNYLDRCQUFRLEdBQWYsVUFBZ0IsS0FBZSxFQUFFLEtBQXNDO1FBQ25FLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFFRCxlQUFlO0lBRWYseUJBQUssR0FBTDtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFHTyw4QkFBVSxHQUFsQixVQUFtQixDQUFzQjtRQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBQ08sNkJBQVMsR0FBakIsVUFBa0IsQ0FBc0I7UUFDcEMsSUFBRyxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBUTtRQUMxQixJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDMUIsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDNUMsSUFBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNyQixPQUFPO1lBQ1AsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQztJQUNPLDRCQUFRLEdBQWhCLFVBQWlCLENBQXNCO1FBQ25DLElBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFFLE9BQVE7UUFDMUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFFckIsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQztJQUNPLCtCQUFXLEdBQW5CLFVBQW9CLENBQXNCO1FBQ3RDLElBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFFLE9BQVE7UUFDMUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFFckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQztJQUVELDZCQUFTLEdBQVQ7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBN0RnQixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBZ0U3QjtJQUFELGdCQUFDO0NBaEVELEFBZ0VDLENBaEVzQyxFQUFFLENBQUMsU0FBUyxHQWdFbEQ7a0JBaEVvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3VjaFBsdXMgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuXG4gICAgcHJpdmF0ZSBvZmZzZXQgID0gMTU7ICAgICAgIC8vIOivr+W3ruWAvFxuICAgIHByaXZhdGUgc3RhcnRQb3NpdGlvbjogY2MuVmVjMjtcbiAgICBwcml2YXRlIGlzVG91Y2ggPSBmYWxzZTtcblxuICAgIHByaXZhdGUgaXNDbGljayA9IHRydWU7XG5cbiAgICBwcml2YXRlIGNsaWNrRXZlbnQ6IEZ1bmN0aW9uO1xuICAgIHByaXZhdGUgc2xpZGVFdmVudDogKGU6IGNjLkV2ZW50LkV2ZW50VG91Y2gpID0+IGFueTtcblxuICAgIC8qKiDmt7vliqDngrnlh7vkuovku7blkozmu5Hliqjkuovku7YgKi9cbiAgICBwdWJsaWMgYWRkRXZlbnQoY2xpY2s6IEZ1bmN0aW9uLCBzbGlkZTogKGU6IGNjLkV2ZW50LkV2ZW50VG91Y2gpID0+IGFueSkge1xuICAgICAgICB0aGlzLmNsaWNrRXZlbnQgPSBjbGljaztcbiAgICAgICAgdGhpcy5zbGlkZUV2ZW50ID0gc2xpZGU7XG4gICAgfVxuXG4gICAgLy8gb25Mb2FkICgpIHt9XG5cbiAgICBzdGFydCAoKSB7XG4gICAgICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCwgdGhpcy50b3VjaFN0YXJ0LCB0aGlzKTtcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMudG91Y2hNb3ZlLCB0aGlzKTtcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy50b3VjaEVuZCwgdGhpcyk7XG4gICAgICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9DQU5DRUwsIHRoaXMudG91Y2hDYW5jZWwsIHRoaXMpO1xuICAgIH1cblxuXG4gICAgcHJpdmF0ZSB0b3VjaFN0YXJ0KGU6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdGFydFBvc2l0aW9uID0gZS5nZXRMb2NhdGlvbigpO1xuICAgIH1cbiAgICBwcml2YXRlIHRvdWNoTW92ZShlOiBjYy5FdmVudC5FdmVudFRvdWNoKSB7XG4gICAgICAgIGlmKCF0aGlzLmlzVG91Y2gpIHJldHVybiA7XG4gICAgICAgIGxldCBwb3MgPSBlLmdldExvY2F0aW9uKCk7XG4gICAgICAgIGxldCBsZW4gPSBwb3Muc3ViKHRoaXMuc3RhcnRQb3NpdGlvbikubWFnKCk7XG4gICAgICAgIGlmKGxlbiA+IHRoaXMub2Zmc2V0KSB7XG4gICAgICAgICAgICB0aGlzLmlzQ2xpY2sgPSBmYWxzZTtcbiAgICAgICAgICAgIC8vIOinpuWPkea7keWKqFxuICAgICAgICAgICAgdGhpcy5zbGlkZUV2ZW50ICYmIHRoaXMuc2xpZGVFdmVudChlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcml2YXRlIHRvdWNoRW5kKGU6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcbiAgICAgICAgaWYoIXRoaXMuaXNUb3VjaCkgcmV0dXJuIDtcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICB0aGlzLmlzQ2xpY2sgJiYgdGhpcy5jbGlja0V2ZW50ICYmIHRoaXMuY2xpY2tFdmVudChlKTtcblxuICAgICAgICB0aGlzLmlzQ2xpY2sgPSB0cnVlO1xuICAgIH1cbiAgICBwcml2YXRlIHRvdWNoQ2FuY2VsKGU6IGNjLkV2ZW50LkV2ZW50VG91Y2gpIHtcbiAgICAgICAgaWYoIXRoaXMuaXNUb3VjaCkgcmV0dXJuIDtcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5pc0NsaWNrID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMubm9kZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMudG91Y2hTdGFydCwgdGhpcyk7XG4gICAgICAgIHRoaXMubm9kZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy50b3VjaE1vdmUsIHRoaXMpO1xuICAgICAgICB0aGlzLm5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy50b3VjaEVuZCwgdGhpcyk7XG4gICAgICAgIHRoaXMubm9kZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfQ0FOQ0VMLCB0aGlzLnRvdWNoQ2FuY2VsLCB0aGlzKTtcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/BatchComponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd393a5ZdPJN0q6Ay73BaSB9', 'BatchComponent');
// Script/Common/Components/BatchComponent.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var BatchAssembler_1 = require("../Assemblers/BatchAssembler");
var TraversalMode;
(function (TraversalMode) {
    TraversalMode[TraversalMode["Default"] = 0] = "Default";
    TraversalMode[TraversalMode["SameName"] = 1] = "SameName";
})(TraversalMode || (TraversalMode = {}));
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BantchComponent = /** @class */ (function (_super) {
    __extends(BantchComponent, _super);
    function BantchComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mode = 0;
        return _this;
    }
    BantchComponent.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
        if (!CC_NATIVERENDERER)
            this.node._renderFlag |= cc.RenderFlow.FLAG_POST_RENDER;
    };
    BantchComponent.prototype._resetAssembler = function () {
        this.setVertsDirty();
        var assembler = this._assembler = new BatchAssembler_1.default();
        assembler.init(this);
    };
    __decorate([
        property({ type: cc.Enum(TraversalMode), tooltip: "遍历模式: Default 默认的广度遍历, SameName 同名结点同批次" })
    ], BantchComponent.prototype, "mode", void 0);
    BantchComponent = __decorate([
        ccclass
    ], BantchComponent);
    return BantchComponent;
}(cc.RenderComponent));
exports.default = BantchComponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvQmF0Y2hDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0RBQTBEO0FBRTFELElBQUssYUFJSjtBQUpELFdBQUssYUFBYTtJQUNkLHVEQUFPLENBQUE7SUFDUCx5REFBUSxDQUFBO0FBRVosQ0FBQyxFQUpJLGFBQWEsS0FBYixhQUFhLFFBSWpCO0FBRUssSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBNkMsbUNBQWtCO0lBQS9EO1FBQUEscUVBZUM7UUFaRyxVQUFJLEdBQWtCLENBQUMsQ0FBQzs7SUFZNUIsQ0FBQztJQVZHLGtDQUFRLEdBQVI7UUFDSSxpQkFBTSxRQUFRLFdBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsaUJBQWlCO1lBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNwRixDQUFDO0lBRUQseUNBQWUsR0FBZjtRQUNJLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksd0JBQWMsRUFBRSxDQUFDO1FBQ3ZELFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQztJQVhEO1FBREMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsT0FBTyxFQUFFLHlDQUF5QyxFQUFDLENBQUM7aURBQ3JFO0lBSFAsZUFBZTtRQURuQyxPQUFPO09BQ2EsZUFBZSxDQWVuQztJQUFELHNCQUFDO0NBZkQsQUFlQyxDQWY0QyxFQUFFLENBQUMsZUFBZSxHQWU5RDtrQkFmb0IsZUFBZSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXRjaEFzc2VtYmxlciBmcm9tIFwiLi4vQXNzZW1ibGVycy9CYXRjaEFzc2VtYmxlclwiO1xuXG5lbnVtIFRyYXZlcnNhbE1vZGUge1xuICAgIERlZmF1bHQsXG4gICAgU2FtZU5hbWUsXG5cbn1cblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYW50Y2hDb21wb25lbnQgZXh0ZW5kcyBjYy5SZW5kZXJDb21wb25lbnQge1xuXG4gICAgQHByb3BlcnR5KHt0eXBlOiBjYy5FbnVtKFRyYXZlcnNhbE1vZGUpLCB0b29sdGlwOiBcIumBjeWOhuaooeW8jzogRGVmYXVsdCDpu5jorqTnmoTlub/luqbpgY3ljoYsIFNhbWVOYW1lIOWQjOWQjee7k+eCueWQjOaJueasoVwifSlcbiAgICBtb2RlOiBUcmF2ZXJzYWxNb2RlID0gMDtcblxuICAgIG9uRW5hYmxlKCkge1xuICAgICAgICBzdXBlci5vbkVuYWJsZSgpO1xuICAgICAgICBpZiAoIUNDX05BVElWRVJFTkRFUkVSKSB0aGlzLm5vZGUuX3JlbmRlckZsYWcgfD0gY2MuUmVuZGVyRmxvdy5GTEFHX1BPU1RfUkVOREVSOyAgICBcbiAgICB9XG5cbiAgICBfcmVzZXRBc3NlbWJsZXIoKSB7XG4gICAgICAgIHRoaXMuc2V0VmVydHNEaXJ0eSgpO1xuICAgICAgICBsZXQgYXNzZW1ibGVyID0gdGhpcy5fYXNzZW1ibGVyID0gbmV3IEJhdGNoQXNzZW1ibGVyKCk7XG4gICAgICAgIGFzc2VtYmxlci5pbml0KHRoaXMpO1xuICAgIH1cbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/GameConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f46b13WB51JHaffBN5ie56i', 'GameConfig');
// Script/Common/GameConfig.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    Object.defineProperty(GameConfig, "debugUserId", {
        get: function () {
            return this._debugUserId;
        },
        enumerable: false,
        configurable: true
    });
    GameConfig.gameId = '';
    //游戏版本
    GameConfig.version = '0.0.1';
    GameConfig._debugUserId = '';
    return GameConfig;
}());
exports.default = GameConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0dhbWVDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO0lBVUEsQ0FBQztJQUhHLHNCQUFrQix5QkFBVzthQUE3QjtZQUNJLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUM3QixDQUFDOzs7T0FBQTtJQVBhLGlCQUFNLEdBQUcsRUFBRSxDQUFDO0lBQzFCLE1BQU07SUFDaUIsa0JBQU8sR0FBRyxPQUFPLENBQUM7SUFFM0IsdUJBQVksR0FBRyxFQUFFLENBQUM7SUFJcEMsaUJBQUM7Q0FWRCxBQVVDLElBQUE7a0JBVm9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lQ29uZmlnIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgZ2FtZUlkID0gJyc7XG4gICAgLy/muLjmiI/niYjmnKxcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHZlcnNpb24gPSAnMC4wLjEnO1xuXG4gICAgcHVibGljIHN0YXRpYyBfZGVidWdVc2VySWQgPSAnJztcbiAgICBwdWJsaWMgc3RhdGljIGdldCBkZWJ1Z1VzZXJJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlYnVnVXNlcklkO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Light/Obstacle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'eaa90oCwvRPFqm2RBIJWdZL', 'Obstacle');
// Script/Common/Light/Obstacle.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var QuadTree_1 = require("../Components/QuadTree");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Obstacle = /** @class */ (function (_super) {
    __extends(Obstacle, _super);
    function Obstacle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._quadtree = null;
        _this._polygons = cc.js.createMap();
        return _this;
    }
    Obstacle.prototype.onLoad = function () {
        var size = cc.view.getVisibleSize();
        this._quadtree = new QuadTree_1.default({ x: 0, y: 0, width: size.width, height: size.height });
    };
    Obstacle.prototype.addPolygon = function (uid, points) {
        this._polygons[uid] = points;
        var bound = this._getBound(points);
        bound.uid = uid;
        this._quadtree.insert(bound);
    };
    Obstacle.prototype.removePolygon = function (uid) {
        // todo...
    };
    Obstacle.prototype.getPolygons = function (bound) {
        var bounds = this._quadtree.retrieve(bound);
        var polygons = [];
        for (var _i = 0, bounds_1 = bounds; _i < bounds_1.length; _i++) {
            var e = bounds_1[_i];
            polygons.push(this._polygons[e.uid]);
        }
        return polygons;
    };
    Obstacle.prototype._getBound = function (points) {
        var point = points[0];
        var xMin = point.x;
        var xMax = point.x;
        var yMin = point.y;
        var yMax = point.y;
        for (var i = 0; i < points.length; i++) {
            if (points[i].x < xMin)
                xMin = points[i].x;
            if (points[i].x > xMax)
                xMax = points[i].x;
            if (points[i].y < yMin)
                yMin = points[i].y;
            if (points[i].y > yMax)
                yMax = points[i].y;
        }
        return new QuadTree_1.Bound(xMin, yMin, xMax - xMin, yMax - yMin);
    };
    Obstacle.prototype.clear = function () {
        this._quadtree.clear();
        this._polygons = {};
    };
    Obstacle = __decorate([
        ccclass
    ], Obstacle);
    return Obstacle;
}(cc.Component));
exports.default = Obstacle;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0xpZ2h0L09ic3RhY2xlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG1EQUF5RDtBQUVuRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQW1EQztRQWpEVyxlQUFTLEdBQWEsSUFBSSxDQUFDO1FBQzNCLGVBQVMsR0FBK0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQzs7SUFnRHRFLENBQUM7SUE3Q0cseUJBQU0sR0FBTjtRQUNJLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDcEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLGtCQUFRLENBQUMsRUFBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7SUFFTSw2QkFBVSxHQUFqQixVQUFrQixHQUFXLEVBQUUsTUFBaUI7UUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUM7UUFDN0IsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuQyxLQUFLLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sZ0NBQWEsR0FBcEIsVUFBcUIsR0FBVztRQUM1QixVQUFVO0lBQ2QsQ0FBQztJQUVNLDhCQUFXLEdBQWxCLFVBQW1CLEtBQVk7UUFDM0IsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUMsSUFBSSxRQUFRLEdBQWdCLEVBQUUsQ0FBQztRQUMvQixLQUFlLFVBQU0sRUFBTixpQkFBTSxFQUFOLG9CQUFNLEVBQU4sSUFBTSxFQUFFO1lBQW5CLElBQU0sQ0FBQyxlQUFBO1lBQ1AsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQztJQUVPLDRCQUFTLEdBQWpCLFVBQWtCLE1BQWlCO1FBQy9CLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ25CLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNuQixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ25CLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQy9CLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJO2dCQUFFLElBQUksR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJO2dCQUFFLElBQUksR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJO2dCQUFFLElBQUksR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJO2dCQUFFLElBQUksR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzdDO1FBQ0QsT0FBTyxJQUFJLGdCQUFLLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEdBQUcsSUFBSSxFQUFFLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRU0sd0JBQUssR0FBWjtRQUNJLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQWpEZ0IsUUFBUTtRQUQ1QixPQUFPO09BQ2EsUUFBUSxDQW1ENUI7SUFBRCxlQUFDO0NBbkRELEFBbURDLENBbkRxQyxFQUFFLENBQUMsU0FBUyxHQW1EakQ7a0JBbkRvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1YWR0cmVlLCB7IEJvdW5kIH0gZnJvbSBcIi4uL0NvbXBvbmVudHMvUXVhZFRyZWVcIjtcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPYnN0YWNsZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cbiAgICBwcml2YXRlIF9xdWFkdHJlZTogUXVhZHRyZWUgPSBudWxsO1xuICAgIHByaXZhdGUgX3BvbHlnb25zOiB7W2tleTogc3RyaW5nXTogY2MuVmVjMltdfSA9IGNjLmpzLmNyZWF0ZU1hcCgpO1xuXG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIGxldCBzaXplID0gY2Mudmlldy5nZXRWaXNpYmxlU2l6ZSgpO1xuICAgICAgICB0aGlzLl9xdWFkdHJlZSA9IG5ldyBRdWFkdHJlZSh7eDogMCwgeTogMCwgd2lkdGg6IHNpemUud2lkdGgsIGhlaWdodDogc2l6ZS5oZWlnaHR9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkUG9seWdvbih1aWQ6IHN0cmluZywgcG9pbnRzOiBjYy5WZWMyW10pIHtcbiAgICAgICAgdGhpcy5fcG9seWdvbnNbdWlkXSA9IHBvaW50cztcbiAgICAgICAgbGV0IGJvdW5kID0gdGhpcy5fZ2V0Qm91bmQocG9pbnRzKTtcbiAgICAgICAgYm91bmQudWlkID0gdWlkO1xuICAgICAgICB0aGlzLl9xdWFkdHJlZS5pbnNlcnQoYm91bmQpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVQb2x5Z29uKHVpZDogc3RyaW5nKSB7XG4gICAgICAgIC8vIHRvZG8uLi5cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0UG9seWdvbnMoYm91bmQ6IEJvdW5kKSB7XG4gICAgICAgIGxldCBib3VuZHMgPSB0aGlzLl9xdWFkdHJlZS5yZXRyaWV2ZShib3VuZCk7XG4gICAgICAgIGxldCBwb2x5Z29uczogY2MuVmVjMltdW10gPSBbXTtcbiAgICAgICAgZm9yKGNvbnN0IGUgb2YgYm91bmRzKSB7XG4gICAgICAgICAgICBwb2x5Z29ucy5wdXNoKHRoaXMuX3BvbHlnb25zW2UudWlkXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvbHlnb25zO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2dldEJvdW5kKHBvaW50czogY2MuVmVjMltdKSB7XG4gICAgICAgIGxldCBwb2ludCA9IHBvaW50c1swXTtcbiAgICAgICAgbGV0IHhNaW4gPSBwb2ludC54O1xuICAgICAgICBsZXQgeE1heCA9IHBvaW50Lng7XG4gICAgICAgIGxldCB5TWluID0gcG9pbnQueTtcbiAgICAgICAgbGV0IHlNYXggPSBwb2ludC55O1xuICAgICAgICBmb3IobGV0IGk9MDsgaTxwb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmKHBvaW50c1tpXS54IDwgeE1pbikgeE1pbiA9IHBvaW50c1tpXS54O1xuICAgICAgICAgICAgaWYocG9pbnRzW2ldLnggPiB4TWF4KSB4TWF4ID0gcG9pbnRzW2ldLng7XG4gICAgICAgICAgICBpZihwb2ludHNbaV0ueSA8IHlNaW4pIHlNaW4gPSBwb2ludHNbaV0ueTtcbiAgICAgICAgICAgIGlmKHBvaW50c1tpXS55ID4geU1heCkgeU1heCA9IHBvaW50c1tpXS55O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQm91bmQoeE1pbiwgeU1pbiwgeE1heCAtIHhNaW4sIHlNYXggLSB5TWluKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuX3F1YWR0cmVlLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuX3BvbHlnb25zID0ge307XG4gICAgfVxuXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Light/Light.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '68edfvWcX9CWav9zMp303o6', 'Light');
// Script/Common/Light/Light.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LightType = void 0;
var QuadTree_1 = require("../Components/QuadTree");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LightType;
(function (LightType) {
    LightType[LightType["Round"] = 0] = "Round";
    LightType[LightType["Sector"] = 1] = "Sector";
})(LightType = exports.LightType || (exports.LightType = {}));
var LightBound = new QuadTree_1.Bound(0, 0, 0, 0);
var Light = /** @class */ (function (_super) {
    __extends(Light, _super);
    function Light() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 画笔 */
        _this.graphics = null;
        _this.lightType = 0;
        _this.canvasSize = null;
        _this.visiableSize = null;
        _this.radius = 200;
        _this.fade = 1;
        // graphics
        _this._material = null;
        return _this;
        // update (dt) {}
    }
    Light.prototype.onLoad = function () {
        this._material = this.graphics.getMaterial(0);
        this.canvasSize = cc.view.getCanvasSize();
        this.visiableSize = cc.view.getCanvasSize();
        this.node.setContentSize(this.canvasSize);
        this._material.setProperty("screen", cc.v2(this.canvasSize.width, this.canvasSize.height));
        var r = this.radius / this.canvasSize.width;
        this._material.setProperty("maxRadius", r);
    };
    Light.prototype.start = function () {
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
    };
    Light.prototype.onDestroy = function () {
        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
    };
    Light.prototype.onTouchMove = function (e) {
        this.node.x += e.getDeltaX();
        this.node.y += e.getDeltaY();
    };
    Light.prototype.getBound = function () {
        var pos = this.node.getPosition();
        LightBound.x = pos.x - this.radius / 2;
        LightBound.y = pos.y - this.radius / 2;
        LightBound.width = LightBound.height = this.radius;
        return LightBound;
    };
    /** 绘制光 */
    Light.prototype.draw = function (intersections) {
        var lightPos = this.node.getPosition();
        this._doDraw(this.graphics, lightPos, intersections);
        this._material.setProperty("lightPos", cc.v2(lightPos.x / this.visiableSize.width, lightPos.y / this.visiableSize.height));
    };
    /** 绘制light */
    Light.prototype._doDraw = function (graphics, light, intersects) {
        graphics.clear();
        graphics.moveTo(intersects[0].x, intersects[0].y);
        for (var i = 1; i < intersects.length; i++) {
            var intersect = intersects[i];
            graphics.lineTo(intersect.x, intersect.y);
        }
        graphics.moveTo(intersects[0].x, intersects[0].y);
        graphics.fill();
        // for(let i=0; i<intersects.length; i++) {
        //     let intersect = intersects[i];
        //     graphics.moveTo(light.x, light.y);
        //     graphics.lineTo(intersect.x, intersect.y);
        //     graphics.stroke();
        // }
    };
    __decorate([
        property(cc.Graphics)
    ], Light.prototype, "graphics", void 0);
    __decorate([
        property({ type: cc.Enum(LightType) })
    ], Light.prototype, "lightType", void 0);
    Light = __decorate([
        ccclass
    ], Light);
    return Light;
}(cc.Component));
exports.default = Light;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0xpZ2h0L0xpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBK0M7QUFHekMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUMsSUFBWSxTQUdYO0FBSEQsV0FBWSxTQUFTO0lBQ2pCLDJDQUFLLENBQUE7SUFDTCw2Q0FBTSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBR3BCO0FBRUQsSUFBSSxVQUFVLEdBQUcsSUFBSSxnQkFBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRXZDO0lBQW1DLHlCQUFZO0lBQS9DO1FBQUEscUVBbUZDO1FBbEZHLFNBQVM7UUFFVCxjQUFRLEdBQWdCLElBQUksQ0FBQztRQUU3QixlQUFTLEdBQWMsQ0FBQyxDQUFDO1FBR3pCLGdCQUFVLEdBQVksSUFBSSxDQUFDO1FBQzNCLGtCQUFZLEdBQVksSUFBSSxDQUFDO1FBRTdCLFlBQU0sR0FBRyxHQUFHLENBQUM7UUFDYixVQUFJLEdBQUcsQ0FBQyxDQUFDO1FBRVQsV0FBVztRQUNILGVBQVMsR0FBZ0IsSUFBSSxDQUFDOztRQW1FdEMsaUJBQWlCO0lBQ3JCLENBQUM7SUFsRUcsc0JBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzFDLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUU1QyxJQUFJLENBQUMsSUFBSSxDQUFDLGNB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QUMsQ0FBQztTQUM3QztRQUNELFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbEQsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRWhCLDJDQUEyQztRQUMzQyxxQ0FBcUM7UUFDckMseUNBQXlDO1FBQ3pDLGlEQUFpRDtRQUNqRCx5QkFBeUI7UUFDekIsSUFBSTtJQUNSLENBQUM7SUE3RUQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQzsyQ0FDTztJQUU3QjtRQURDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFDLENBQUM7NENBQ1o7SUFMUixLQUFLO1FBRHpCLE9BQU87T0FDYSxLQUFLLENBbUZ6QjtJQUFELFlBQUM7Q0FuRkQsQUFtRkMsQ0FuRmtDLEVBQUUsQ0FBQyxTQUFTLEdBbUY5QztrQkFuRm9CLEtBQUsiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3VuZCB9IGZyb20gXCIuLi9Db21wb25lbnRzL1F1YWRUcmVlXCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi9MaWdodFN0cnVjdFwiO1xuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcblxuZXhwb3J0IGVudW0gTGlnaHRUeXBlIHtcbiAgICBSb3VuZCwgICAgICAvLyDlnIblvaJcbiAgICBTZWN0b3IsICAgICAvLyDmiYflvaJcbn1cblxubGV0IExpZ2h0Qm91bmQgPSBuZXcgQm91bmQoMCwgMCwgMCwgMCk7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlnaHQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIC8qKiDnlLvnrJQgKi9cbiAgICBAcHJvcGVydHkoY2MuR3JhcGhpY3MpXG4gICAgZ3JhcGhpY3M6IGNjLkdyYXBoaWNzID0gbnVsbDtcbiAgICBAcHJvcGVydHkoe3R5cGU6IGNjLkVudW0oTGlnaHRUeXBlKX0pXG4gICAgbGlnaHRUeXBlOiBMaWdodFR5cGUgPSAwO1xuXG5cbiAgICBjYW52YXNTaXplOiBjYy5TaXplID0gbnVsbDtcbiAgICB2aXNpYWJsZVNpemU6IGNjLlNpemUgPSBudWxsO1xuXG4gICAgcmFkaXVzID0gMjAwO1xuICAgIGZhZGUgPSAxO1xuXG4gICAgLy8gZ3JhcGhpY3NcbiAgICBwcml2YXRlIF9tYXRlcmlhbDogY2MuTWF0ZXJpYWwgPSBudWxsO1xuXG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgdGhpcy5fbWF0ZXJpYWwgPSB0aGlzLmdyYXBoaWNzLmdldE1hdGVyaWFsKDApO1xuICAgIFxuICAgICAgICB0aGlzLmNhbnZhc1NpemUgPSBjYy52aWV3LmdldENhbnZhc1NpemUoKTtcbiAgICAgICAgdGhpcy52aXNpYWJsZVNpemUgPSBjYy52aWV3LmdldENhbnZhc1NpemUoKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMubm9kZS5zZXRDb250ZW50U2l6ZSh0aGlzLmNhbnZhc1NpemUpO1xuXG4gICAgICAgIHRoaXMuX21hdGVyaWFsLnNldFByb3BlcnR5KFwic2NyZWVuXCIsIGNjLnYyKHRoaXMuY2FudmFzU2l6ZS53aWR0aCwgdGhpcy5jYW52YXNTaXplLmhlaWdodCkpO1xuXG5cbiAgICAgICAgbGV0IHIgPSB0aGlzLnJhZGl1cyAvIHRoaXMuY2FudmFzU2l6ZS53aWR0aDtcbiAgICAgICAgdGhpcy5fbWF0ZXJpYWwuc2V0UHJvcGVydHkoXCJtYXhSYWRpdXNcIiwgcik7XG4gICAgfVxuXG4gICAgXG4gICAgc3RhcnQgKCkge1xuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy5vblRvdWNoTW92ZSwgdGhpcyk7XG4gICAgfVxuXG4gICAgb25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLm5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMub25Ub3VjaE1vdmUsIHRoaXMpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Ub3VjaE1vdmUoZTogY2MuRXZlbnQuRXZlbnRUb3VjaCkge1xuICAgICAgICB0aGlzLm5vZGUueCArPSBlLmdldERlbHRhWCgpO1xuICAgICAgICB0aGlzLm5vZGUueSArPSBlLmdldERlbHRhWSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRCb3VuZCgpIHtcbiAgICAgICAgbGV0IHBvcyA9IHRoaXMubm9kZS5nZXRQb3NpdGlvbigpO1xuICAgICAgICBMaWdodEJvdW5kLnggPSBwb3MueC10aGlzLnJhZGl1cy8yOyBMaWdodEJvdW5kLnkgPSBwb3MueS10aGlzLnJhZGl1cy8yOyBcbiAgICAgICAgTGlnaHRCb3VuZC53aWR0aCA9IExpZ2h0Qm91bmQuaGVpZ2h0ID0gdGhpcy5yYWRpdXM7XG4gICAgICAgIHJldHVybiBMaWdodEJvdW5kO1xuICAgIH1cbiAgICBcblxuICAgIC8qKiDnu5jliLblhYkgKi9cbiAgICBwdWJsaWMgZHJhdyhpbnRlcnNlY3Rpb25zOiBJbnRlcnNlY3Rpb25bXSkge1xuICAgICAgICBsZXQgbGlnaHRQb3MgPSB0aGlzLm5vZGUuZ2V0UG9zaXRpb24oKTtcbiAgICAgICAgdGhpcy5fZG9EcmF3KHRoaXMuZ3JhcGhpY3MsIGxpZ2h0UG9zLCBpbnRlcnNlY3Rpb25zKTtcbiAgICAgICAgdGhpcy5fbWF0ZXJpYWwuc2V0UHJvcGVydHkoXCJsaWdodFBvc1wiLCBjYy52MihsaWdodFBvcy54L3RoaXMudmlzaWFibGVTaXplLndpZHRoLCBsaWdodFBvcy55L3RoaXMudmlzaWFibGVTaXplLmhlaWdodCkpO1xuICAgIH1cblxuICAgIC8qKiDnu5jliLZsaWdodCAqL1xuICAgIHByaXZhdGUgX2RvRHJhdyhncmFwaGljczogY2MuR3JhcGhpY3MsIGxpZ2h0OiBjYy5WZWMyLCBpbnRlcnNlY3RzOiBJbnRlcnNlY3Rpb25bXSkge1xuICAgICAgICBcbiAgICAgICAgZ3JhcGhpY3MuY2xlYXIoKTtcbiAgICAgICAgZ3JhcGhpY3MubW92ZVRvKGludGVyc2VjdHNbMF0ueCwgaW50ZXJzZWN0c1swXS55KTtcbiAgICAgICAgZm9yKGxldCBpPTE7IGk8aW50ZXJzZWN0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGludGVyc2VjdCA9IGludGVyc2VjdHNbaV07XG4gICAgICAgICAgICBncmFwaGljcy5saW5lVG8oaW50ZXJzZWN0LngsIGludGVyc2VjdC55KTtcbiAgICAgICAgfVxuICAgICAgICBncmFwaGljcy5tb3ZlVG8oaW50ZXJzZWN0c1swXS54LCBpbnRlcnNlY3RzWzBdLnkpO1xuICAgICAgICBcbiAgICAgICAgZ3JhcGhpY3MuZmlsbCgpO1xuXG4gICAgICAgIC8vIGZvcihsZXQgaT0wOyBpPGludGVyc2VjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gICAgIGxldCBpbnRlcnNlY3QgPSBpbnRlcnNlY3RzW2ldO1xuICAgICAgICAvLyAgICAgZ3JhcGhpY3MubW92ZVRvKGxpZ2h0LngsIGxpZ2h0LnkpO1xuICAgICAgICAvLyAgICAgZ3JhcGhpY3MubGluZVRvKGludGVyc2VjdC54LCBpbnRlcnNlY3QueSk7XG4gICAgICAgIC8vICAgICBncmFwaGljcy5zdHJva2UoKTtcbiAgICAgICAgLy8gfVxuICAgIH1cbiAgICAgICAgXG4gICAgLy8gdXBkYXRlIChkdCkge31cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIFunction_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2840dNdtrlLRZJzxqaCbxi3', 'UIFunction_Auto');
// Script/AutoScripts/UIFunction_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIFunction_Auto = /** @class */ (function (_super) {
    __extends(UIFunction_Auto, _super);
    function UIFunction_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Setting = null;
        _this.Skills = null;
        _this.ScrollHelper = null;
        return _this;
    }
    __decorate([
        property(ButtonPlus_1.default)
    ], UIFunction_Auto.prototype, "Setting", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIFunction_Auto.prototype, "Skills", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIFunction_Auto.prototype, "ScrollHelper", void 0);
    UIFunction_Auto = __decorate([
        ccclass
    ], UIFunction_Auto);
    return UIFunction_Auto;
}(cc.Component));
exports.default = UIFunction_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlGdW5jdGlvbl9BdXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGdFQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUE2QyxtQ0FBWTtJQUF6RDtRQUFBLHFFQVFDO1FBTkEsYUFBTyxHQUFlLElBQUksQ0FBQztRQUUzQixZQUFNLEdBQWUsSUFBSSxDQUFDO1FBRTFCLGtCQUFZLEdBQWUsSUFBSSxDQUFDOztJQUVqQyxDQUFDO0lBTkE7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQztvREFDTTtJQUUzQjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDO21EQUNLO0lBRTFCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7eURBQ1c7SUFOWixlQUFlO1FBRG5DLE9BQU87T0FDYSxlQUFlLENBUW5DO0lBQUQsc0JBQUM7Q0FSRCxBQVFDLENBUjRDLEVBQUUsQ0FBQyxTQUFTLEdBUXhEO2tCQVJvQixlQUFlIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQnV0dG9uUGx1cyBmcm9tIFwiLi8uLi9Db21tb24vQ29tcG9uZW50cy9CdXR0b25QbHVzXCJcblxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlGdW5jdGlvbl9BdXRvIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdFNldHRpbmc6IEJ1dHRvblBsdXMgPSBudWxsO1xuXHRAcHJvcGVydHkoQnV0dG9uUGx1cylcblx0U2tpbGxzOiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdFNjcm9sbEhlbHBlcjogQnV0dG9uUGx1cyA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/SpinePlus.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '30062r80kNGeKSQLxsTnRWf', 'SpinePlus');
// Script/Common/Components/SpinePlus.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, menu = _a.menu, help = _a.help, inspector = _a.inspector;
var SpinePlus = /** @class */ (function (_super) {
    __extends(SpinePlus, _super);
    function SpinePlus() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.paused = false;
        return _this;
    }
    // onLoad () {}
    SpinePlus.prototype.start = function () {
    };
    SpinePlus.prototype.update = function (dt) {
        if (!CC_EDITOR) {
            _super.prototype.update.call(this, dt);
            return;
        }
        if (this.paused)
            return;
        //@ts-ignore
        cc.engine._animatingInEditMode = 1;
        //@ts-ignore
        cc.engine.animatingInEditMode = 1;
        //@ts-ignore
        dt *= this.timeScale * sp.timeScale;
        // @ts-ignore
        this._updateRealtime(dt);
    };
    __decorate([
        property({ override: true, visible: true })
    ], SpinePlus.prototype, "paused", void 0);
    SpinePlus = __decorate([
        ccclass,
        menu('i18n:MAIN_MENU.component.ui/SpinePlus'),
        executeInEditMode,
        help('app://docs/html/components/spine.html'),
        inspector('packages://custom-inspector/inspector/spine.js')
    ], SpinePlus);
    return SpinePlus;
}(sp.Skeleton));
exports.default = SpinePlus;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvU3BpbmVQbHVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBZ0UsRUFBRSxDQUFDLFVBQVUsRUFBNUUsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsaUJBQWlCLHVCQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUUsU0FBUyxlQUFpQixDQUFDO0FBTXBGO0lBQXVDLDZCQUFXO0lBQWxEO1FBQUEscUVBMkJDO1FBeEJHLFlBQU0sR0FBRyxLQUFLLENBQUM7O0lBd0JuQixDQUFDO0lBckJHLGVBQWU7SUFFZix5QkFBSyxHQUFMO0lBRUEsQ0FBQztJQUVELDBCQUFNLEdBQU4sVUFBUSxFQUFVO1FBQ2QsSUFBRyxDQUFDLFNBQVMsRUFBRTtZQUNYLGlCQUFNLE1BQU0sWUFBQyxFQUFFLENBQUMsQ0FBQztZQUNqQixPQUFRO1NBQ1g7UUFDRCxJQUFJLElBQUksQ0FBQyxNQUFNO1lBQUUsT0FBTztRQUN4QixZQUFZO1FBQ1osRUFBRSxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsR0FBRyxDQUFDLENBQUM7UUFDbkMsWUFBWTtRQUNaLEVBQUUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO1FBQ2xDLFlBQVk7UUFDWixFQUFFLElBQUksSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ3BDLGFBQWE7UUFDYixJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUF2QkQ7UUFEQyxRQUFRLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQzs2Q0FDM0I7SUFIRSxTQUFTO1FBTDdCLE9BQU87UUFDUCxJQUFJLENBQUMsdUNBQXVDLENBQUM7UUFDN0MsaUJBQWlCO1FBQ2pCLElBQUksQ0FBQyx1Q0FBdUMsQ0FBQztRQUM3QyxTQUFTLENBQUMsZ0RBQWdELENBQUM7T0FDdkMsU0FBUyxDQTJCN0I7SUFBRCxnQkFBQztDQTNCRCxBQTJCQyxDQTNCc0MsRUFBRSxDQUFDLFFBQVEsR0EyQmpEO2tCQTNCb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5LCBleGVjdXRlSW5FZGl0TW9kZSwgbWVudSwgaGVscCwgaW5zcGVjdG9yfSA9IGNjLl9kZWNvcmF0b3I7XG5AY2NjbGFzc1xuQG1lbnUoJ2kxOG46TUFJTl9NRU5VLmNvbXBvbmVudC51aS9TcGluZVBsdXMnKVxuQGV4ZWN1dGVJbkVkaXRNb2RlXG5AaGVscCgnYXBwOi8vZG9jcy9odG1sL2NvbXBvbmVudHMvc3BpbmUuaHRtbCcpXG5AaW5zcGVjdG9yKCdwYWNrYWdlczovL2N1c3RvbS1pbnNwZWN0b3IvaW5zcGVjdG9yL3NwaW5lLmpzJylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwaW5lUGx1cyBleHRlbmRzIHNwLlNrZWxldG9uIHtcblxuICAgIEBwcm9wZXJ0eSh7b3ZlcnJpZGU6IHRydWUsIHZpc2libGU6IHRydWV9KVxuICAgIHBhdXNlZCA9IGZhbHNlO1xuXG5cbiAgICAvLyBvbkxvYWQgKCkge31cblxuICAgIHN0YXJ0ICgpIHtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgdXBkYXRlIChkdDogbnVtYmVyKSB7XG4gICAgICAgIGlmKCFDQ19FRElUT1IpIHtcbiAgICAgICAgICAgIHN1cGVyLnVwZGF0ZShkdCk7XG4gICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBhdXNlZCkgcmV0dXJuO1xuICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgY2MuZW5naW5lLl9hbmltYXRpbmdJbkVkaXRNb2RlID0gMTtcbiAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgIGNjLmVuZ2luZS5hbmltYXRpbmdJbkVkaXRNb2RlID0gMTtcbiAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgIGR0ICo9IHRoaXMudGltZVNjYWxlICogc3AudGltZVNjYWxlO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHRoaXMuX3VwZGF0ZVJlYWx0aW1lKGR0KTtcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/Shake.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '50dd1CK5CZDxKf4hgecFu92', 'Shake');
// Script/Common/Components/Shake.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Shake = /** @class */ (function (_super) {
    __extends(Shake, _super);
    function Shake() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._initial_x = 0;
        _this._initial_y = 0;
        _this._strength_x = 0;
        _this._strength_y = 0;
        return _this;
    }
    Shake_1 = Shake;
    /**
     *  创建抖动动画
     * @param {number} duration     动画持续时长
     * @param {number} strength_x   抖动幅度： x方向
     * @param {number} strength_y   抖动幅度： y方向
     * @returns {Shake}
     */
    Shake.create = function (duration, strength_x, strength_y) {
        var act = new Shake_1();
        act.initWithDuration(duration, strength_x, strength_y);
        return act;
    };
    Shake.prototype.initWithDuration = function (duration, strength_x, strength_y) {
        cc.ActionInterval.prototype['initWithDuration'].apply(this, arguments);
        this._strength_x = strength_x;
        this._strength_y = strength_y;
        return true;
    };
    Shake.prototype.fgRangeRand = function (min, max) {
        var rnd = Math.random();
        return rnd * (max - min) + min;
    };
    Shake.prototype.update = function (time) {
        var randx = this.fgRangeRand(-this._strength_x, this._strength_x);
        var randy = this.fgRangeRand(-this._strength_y, this._strength_y);
        this.getTarget().setPosition(randx + this._initial_x, randy + this._initial_y);
    };
    Shake.prototype.startWithTarget = function (target) {
        cc.ActionInterval.prototype['startWithTarget'].apply(this, arguments);
        this._initial_x = target.x;
        this._initial_y = target.y;
    };
    Shake.prototype.stop = function () {
        this.getTarget().setPosition(new cc.Vec2(this._initial_x, this._initial_y));
        cc.ActionInterval.prototype['stop'].apply(this);
    };
    var Shake_1;
    Shake = Shake_1 = __decorate([
        ccclass
    ], Shake);
    return Shake;
}(cc.ActionInterval));
exports.default = Shake;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvU2hha2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBbUMseUJBQWlCO0lBQXBEO1FBQUEscUVBaURDO1FBOUNXLGdCQUFVLEdBQVksQ0FBQyxDQUFDO1FBQ3hCLGdCQUFVLEdBQVksQ0FBQyxDQUFDO1FBQ3hCLGlCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLGlCQUFXLEdBQVcsQ0FBQyxDQUFDOztJQTJDcEMsQ0FBQztjQWpEb0IsS0FBSztJQVF0Qjs7Ozs7O09BTUc7SUFDVyxZQUFNLEdBQXBCLFVBQXFCLFFBQWUsRUFBQyxVQUFpQixFQUFDLFVBQWlCO1FBQ3BFLElBQUksR0FBRyxHQUFTLElBQUksT0FBSyxFQUFFLENBQUM7UUFDNUIsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDdkQsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRU0sZ0NBQWdCLEdBQXZCLFVBQXdCLFFBQWUsRUFBQyxVQUFpQixFQUFDLFVBQWlCO1FBQ3ZFLEVBQUUsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxTQUFTLENBQUMsQ0FBQztRQUN0RSxJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUM5QixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sMkJBQVcsR0FBbEIsVUFBbUIsR0FBVSxFQUFDLEdBQVU7UUFDcEMsSUFBSSxHQUFHLEdBQVUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQy9CLE9BQU8sR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUNuQyxDQUFDO0lBRU0sc0JBQU0sR0FBYixVQUFjLElBQVc7UUFDckIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2pFLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsV0FBVyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEYsQ0FBQztJQUVNLCtCQUFlLEdBQXRCLFVBQXVCLE1BQWM7UUFDakMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVNLG9CQUFJLEdBQVg7UUFDSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQzNFLEVBQUUsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDOztJQWhEZ0IsS0FBSztRQUR6QixPQUFPO09BQ2EsS0FBSyxDQWlEekI7SUFBRCxZQUFDO0NBakRELEFBaURDLENBakRrQyxFQUFFLENBQUMsY0FBYyxHQWlEbkQ7a0JBakRvQixLQUFLIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG4gXG5AY2NjbGFzc1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hha2UgZXh0ZW5kcyBjYy5BY3Rpb25JbnRlcnZhbFxue1xuIFxuICAgIHByaXZhdGUgX2luaXRpYWxfeCA6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBfaW5pdGlhbF95IDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9zdHJlbmd0aF94OiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgX3N0cmVuZ3RoX3k6IG51bWJlciA9IDA7XG4gXG4gICAgLyoqXG4gICAgICogIOWIm+W7uuaKluWKqOWKqOeUu1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAgICAg5Yqo55S75oyB57ut5pe26ZW/XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHN0cmVuZ3RoX3ggICDmipbliqjluYXluqbvvJogeOaWueWQkVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzdHJlbmd0aF95ICAg5oqW5Yqo5bmF5bqm77yaIHnmlrnlkJFcbiAgICAgKiBAcmV0dXJucyB7U2hha2V9XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGUoZHVyYXRpb246bnVtYmVyLHN0cmVuZ3RoX3g6bnVtYmVyLHN0cmVuZ3RoX3k6bnVtYmVyKTogU2hha2Uge1xuICAgICAgICBsZXQgYWN0OlNoYWtlID0gbmV3IFNoYWtlKCk7XG4gICAgICAgIGFjdC5pbml0V2l0aER1cmF0aW9uKGR1cmF0aW9uLCBzdHJlbmd0aF94LCBzdHJlbmd0aF95KTtcbiAgICAgICAgcmV0dXJuIGFjdDtcbiAgICB9XG4gXG4gICAgcHVibGljIGluaXRXaXRoRHVyYXRpb24oZHVyYXRpb246bnVtYmVyLHN0cmVuZ3RoX3g6bnVtYmVyLHN0cmVuZ3RoX3k6bnVtYmVyKSB7XG4gICAgICAgIGNjLkFjdGlvbkludGVydmFsLnByb3RvdHlwZVsnaW5pdFdpdGhEdXJhdGlvbiddLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fc3RyZW5ndGhfeCA9IHN0cmVuZ3RoX3g7XG4gICAgICAgIHRoaXMuX3N0cmVuZ3RoX3kgPSBzdHJlbmd0aF95O1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gXG4gICAgcHVibGljIGZnUmFuZ2VSYW5kKG1pbjpudW1iZXIsbWF4Om51bWJlcikge1xuICAgICAgICBsZXQgcm5kOm51bWJlciA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHJldHVybiBybmQgKiAobWF4IC0gbWluKSArIG1pbjtcbiAgICB9XG4gXG4gICAgcHVibGljIHVwZGF0ZSh0aW1lOm51bWJlcikge1xuICAgICAgICBsZXQgcmFuZHggPSB0aGlzLmZnUmFuZ2VSYW5kKC10aGlzLl9zdHJlbmd0aF94LHRoaXMuX3N0cmVuZ3RoX3gpO1xuICAgICAgICBsZXQgcmFuZHkgPSB0aGlzLmZnUmFuZ2VSYW5kKC10aGlzLl9zdHJlbmd0aF95LHRoaXMuX3N0cmVuZ3RoX3kpO1xuICAgICAgICB0aGlzLmdldFRhcmdldCgpLnNldFBvc2l0aW9uKHJhbmR4ICsgdGhpcy5faW5pdGlhbF94LHJhbmR5ICsgdGhpcy5faW5pdGlhbF95KTtcbiAgICB9XG4gXG4gICAgcHVibGljIHN0YXJ0V2l0aFRhcmdldCh0YXJnZXQ6Y2MuTm9kZSkge1xuICAgICAgICBjYy5BY3Rpb25JbnRlcnZhbC5wcm90b3R5cGVbJ3N0YXJ0V2l0aFRhcmdldCddLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5faW5pdGlhbF94ID0gdGFyZ2V0Lng7XG4gICAgICAgIHRoaXMuX2luaXRpYWxfeSA9IHRhcmdldC55O1xuICAgIH1cbiBcbiAgICBwdWJsaWMgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5nZXRUYXJnZXQoKS5zZXRQb3NpdGlvbihuZXcgY2MuVmVjMih0aGlzLl9pbml0aWFsX3gsdGhpcy5faW5pdGlhbF95KSk7XG4gICAgICAgIGNjLkFjdGlvbkludGVydmFsLnByb3RvdHlwZVsnc3RvcCddLmFwcGx5KHRoaXMpO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UINavigator_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '27e91DCYAREr6jZLIjA5zmw', 'UINavigator_Auto');
// Script/AutoScripts/UINavigator_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UINavigator_Auto = /** @class */ (function (_super) {
    __extends(UINavigator_Auto, _super);
    function UINavigator_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Scroll = null;
        return _this;
    }
    __decorate([
        property(cc.ScrollView)
    ], UINavigator_Auto.prototype, "Scroll", void 0);
    UINavigator_Auto = __decorate([
        ccclass
    ], UINavigator_Auto);
    return UINavigator_Auto;
}(cc.Component));
exports.default = UINavigator_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlOYXZpZ2F0b3JfQXV0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQztJQUE4QyxvQ0FBWTtJQUExRDtRQUFBLHFFQUlDO1FBRkEsWUFBTSxHQUFrQixJQUFJLENBQUM7O0lBRTlCLENBQUM7SUFGQTtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDO29EQUNLO0lBRlQsZ0JBQWdCO1FBRHBDLE9BQU87T0FDYSxnQkFBZ0IsQ0FJcEM7SUFBRCx1QkFBQztDQUpELEFBSUMsQ0FKNkMsRUFBRSxDQUFDLFNBQVMsR0FJekQ7a0JBSm9CLGdCQUFnQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSU5hdmlnYXRvcl9BdXRvIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcblx0QHByb3BlcnR5KGNjLlNjcm9sbFZpZXcpXG5cdFNjcm9sbDogY2MuU2Nyb2xsVmlldyA9IG51bGw7XG4gXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/AutoScripts/UIHome_Auto.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '234c2u0kZdBeKPEjpbkt22t', 'UIHome_Auto');
// Script/AutoScripts/UIHome_Auto.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonPlus_1 = require("./../Common/Components/ButtonPlus");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UIHome_Auto = /** @class */ (function (_super) {
    __extends(UIHome_Auto, _super);
    function UIHome_Auto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Logo = null;
        _this.Start = null;
        _this.About = null;
        _this.Back = null;
        return _this;
    }
    __decorate([
        property(cc.Node)
    ], UIHome_Auto.prototype, "Logo", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIHome_Auto.prototype, "Start", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIHome_Auto.prototype, "About", void 0);
    __decorate([
        property(ButtonPlus_1.default)
    ], UIHome_Auto.prototype, "Back", void 0);
    UIHome_Auto = __decorate([
        ccclass
    ], UIHome_Auto);
    return UIHome_Auto;
}(cc.Component));
exports.default = UIHome_Auto;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQXV0b1NjcmlwdHMvVUlIb21lX0F1dG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTBEO0FBRXBELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQXlDLCtCQUFZO0lBQXJEO1FBQUEscUVBVUM7UUFSQSxVQUFJLEdBQVksSUFBSSxDQUFDO1FBRXJCLFdBQUssR0FBZSxJQUFJLENBQUM7UUFFekIsV0FBSyxHQUFlLElBQUksQ0FBQztRQUV6QixVQUFJLEdBQWUsSUFBSSxDQUFDOztJQUV6QixDQUFDO0lBUkE7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzs2Q0FDRztJQUVyQjtRQURDLFFBQVEsQ0FBQyxvQkFBVSxDQUFDOzhDQUNJO0lBRXpCO1FBREMsUUFBUSxDQUFDLG9CQUFVLENBQUM7OENBQ0k7SUFFekI7UUFEQyxRQUFRLENBQUMsb0JBQVUsQ0FBQzs2Q0FDRztJQVJKLFdBQVc7UUFEL0IsT0FBTztPQUNhLFdBQVcsQ0FVL0I7SUFBRCxrQkFBQztDQVZELEFBVUMsQ0FWd0MsRUFBRSxDQUFDLFNBQVMsR0FVcEQ7a0JBVm9CLFdBQVciLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBCdXR0b25QbHVzIGZyb20gXCIuLy4uL0NvbW1vbi9Db21wb25lbnRzL0J1dHRvblBsdXNcIlxuXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcbkBjY2NsYXNzXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSUhvbWVfQXV0byBleHRlbmRzIGNjLkNvbXBvbmVudCB7XG5cdEBwcm9wZXJ0eShjYy5Ob2RlKVxuXHRMb2dvOiBjYy5Ob2RlID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdFN0YXJ0OiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEFib3V0OiBCdXR0b25QbHVzID0gbnVsbDtcblx0QHByb3BlcnR5KEJ1dHRvblBsdXMpXG5cdEJhY2s6IEJ1dHRvblBsdXMgPSBudWxsO1xuIFxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/DebugWindowUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '84e75b8tBhNjY7KyBAgOsH/', 'DebugWindowUtils');
// Script/Common/Utils/DebugWindowUtils.ts

"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
function hookCtor(func) {
    return function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        var result = func.call.apply(func, __spreadArrays([this], params)) || this;
        func['___ins'] = result;
        return result;
    };
}
var DebugWindowUtil = /** @class */ (function () {
    function DebugWindowUtil() {
    }
    DebugWindowUtil.getModuleName = function (modules) {
        if (typeof modules !== 'string') {
            return modules;
        }
        return modules.split('/').pop().split('.')[0];
    };
    DebugWindowUtil.init = function () {
        var require = typeof __modular !== 'undefined' ? __modular : {};
        if (!require || !require.modules) {
            return;
        }
        var installedModules = require.modules;
        var allExports = {};
        function addExports(k, obj, modName) {
            var name = k;
            if (obj && obj.name) {
                name = obj.name;
            }
            if (allExports[k]) {
                return addExports(k + modName, obj, modName);
            }
            var wraped = obj;
            // if(obj.prototype && Object.keys(obj).length > 1 && !wraped.__origin){
            //     wraped = hookCtor(obj);
            //     wraped.__origin = obj;
            //     Object.setPrototypeOf(wraped, obj);
            // }
            allExports[name] = wraped;
            return wraped;
        }
        for (var k in installedModules) {
            var module = installedModules[k];
            var file = module.file;
            var exports = module.module ? module.module.exports : {};
            var modName = this.getModuleName(file);
            for (var k_1 in exports) {
                if (k_1 === '__esModule') {
                    continue;
                }
                else if (k_1 === 'default') {
                    exports[k_1] = addExports(modName, exports[k_1], modName);
                    if (!exports[modName]) {
                        exports[modName] = exports[k_1];
                    }
                }
                else {
                    exports[k_1] = addExports(k_1, exports[k_1], modName);
                }
            }
            window[modName + "_mod"] = exports;
        }
        for (var k in allExports) {
            if (window[k]) {
                continue;
            }
            window[k] = allExports[k];
        }
    };
    return DebugWindowUtil;
}());
exports.default = DebugWindowUtil;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL0RlYnVnV2luZG93VXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBUyxRQUFRLENBQUMsSUFBYztJQUM1QixPQUFPO1FBQVUsZ0JBQVM7YUFBVCxVQUFTLEVBQVQscUJBQVMsRUFBVCxJQUFTO1lBQVQsMkJBQVM7O1FBQ3RCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLE9BQVQsSUFBSSxrQkFBTSxJQUFJLEdBQUssTUFBTSxNQUFLLElBQUksQ0FBQztRQUNoRCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ3hCLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUMsQ0FBQztBQUNOLENBQUM7QUFDRDtJQUFBO0lBeURBLENBQUM7SUF4RGtCLDZCQUFhLEdBQTVCLFVBQTZCLE9BQWU7UUFDeEMsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7WUFDN0IsT0FBTyxPQUFPLENBQUM7U0FDbEI7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFDYSxvQkFBSSxHQUFsQjtRQUNJLElBQU0sT0FBTyxHQUFHLE9BQU8sU0FBUyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDbEUsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7WUFDOUIsT0FBTztTQUNWO1FBQ0QsSUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3pDLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNwQixTQUFTLFVBQVUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU87WUFDL0IsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO1lBQ2IsSUFBRyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksRUFBRTtnQkFDaEIsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7YUFDbkI7WUFDRCxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDZixPQUFPLFVBQVUsQ0FBQyxDQUFDLEdBQUcsT0FBTyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQzthQUNoRDtZQUNELElBQUksTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUNqQix3RUFBd0U7WUFDeEUsOEJBQThCO1lBQzlCLDZCQUE2QjtZQUM3QiwwQ0FBMEM7WUFDMUMsSUFBSTtZQUNKLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUM7WUFDMUIsT0FBTyxNQUFNLENBQUM7UUFDbEIsQ0FBQztRQUVELEtBQUssSUFBSSxDQUFDLElBQUksZ0JBQWdCLEVBQUU7WUFDNUIsSUFBTSxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsSUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztZQUN6QixJQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQzNELElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekMsS0FBSyxJQUFJLEdBQUMsSUFBSSxPQUFPLEVBQUU7Z0JBQ25CLElBQUksR0FBQyxLQUFLLFlBQVksRUFBRTtvQkFDcEIsU0FBUztpQkFDWjtxQkFBTSxJQUFJLEdBQUMsS0FBSyxTQUFTLEVBQUU7b0JBQ3hCLE9BQU8sQ0FBQyxHQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztvQkFDdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTt3QkFDbkIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFDLENBQUMsQ0FBQztxQkFDakM7aUJBQ0o7cUJBQU07b0JBQ0gsT0FBTyxDQUFDLEdBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxHQUFDLEVBQUUsT0FBTyxDQUFDLEdBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2lCQUNuRDthQUNKO1lBRUQsTUFBTSxDQUFJLE9BQU8sU0FBTSxDQUFDLEdBQUcsT0FBTyxDQUFDO1NBQ3RDO1FBQ0QsS0FBSyxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDdEIsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQUUsU0FBUzthQUFFO1lBQzVCLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0I7SUFDTCxDQUFDO0lBQ0wsc0JBQUM7QUFBRCxDQXpEQSxBQXlEQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZGVjbGFyZSBjb25zdCBfX21vZHVsYXI7XG5cbmZ1bmN0aW9uIGhvb2tDdG9yKGZ1bmM6IEZ1bmN0aW9uKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICguLi5wYXJhbXMpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGZ1bmMuY2FsbCh0aGlzLCAuLi5wYXJhbXMpIHx8IHRoaXM7XG4gICAgICAgIGZ1bmNbJ19fX2lucyddID0gcmVzdWx0O1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG59XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWJ1Z1dpbmRvd1V0aWwge1xuICAgIHByaXZhdGUgc3RhdGljIGdldE1vZHVsZU5hbWUobW9kdWxlczogc3RyaW5nKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbW9kdWxlcyAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBtb2R1bGVzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtb2R1bGVzLnNwbGl0KCcvJykucG9wKCkuc3BsaXQoJy4nKVswXTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBpbml0KCkge1xuICAgICAgICBjb25zdCByZXF1aXJlID0gdHlwZW9mIF9fbW9kdWxhciAhPT0gJ3VuZGVmaW5lZCcgPyBfX21vZHVsYXIgOiB7fTtcbiAgICAgICAgaWYgKCFyZXF1aXJlIHx8ICFyZXF1aXJlLm1vZHVsZXMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbnN0YWxsZWRNb2R1bGVzID0gcmVxdWlyZS5tb2R1bGVzO1xuICAgICAgICBsZXQgYWxsRXhwb3J0cyA9IHt9O1xuICAgICAgICBmdW5jdGlvbiBhZGRFeHBvcnRzKGssIG9iaiwgbW9kTmFtZSkge1xuICAgICAgICAgICAgbGV0IG5hbWUgPSBrO1xuICAgICAgICAgICAgaWYob2JqICYmIG9iai5uYW1lKSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9IG9iai5uYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFsbEV4cG9ydHNba10pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYWRkRXhwb3J0cyhrICsgbW9kTmFtZSwgb2JqLCBtb2ROYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB3cmFwZWQgPSBvYmo7XG4gICAgICAgICAgICAvLyBpZihvYmoucHJvdG90eXBlICYmIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID4gMSAmJiAhd3JhcGVkLl9fb3JpZ2luKXtcbiAgICAgICAgICAgIC8vICAgICB3cmFwZWQgPSBob29rQ3RvcihvYmopO1xuICAgICAgICAgICAgLy8gICAgIHdyYXBlZC5fX29yaWdpbiA9IG9iajtcbiAgICAgICAgICAgIC8vICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2Yod3JhcGVkLCBvYmopO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgYWxsRXhwb3J0c1tuYW1lXSA9IHdyYXBlZDtcbiAgICAgICAgICAgIHJldHVybiB3cmFwZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCBrIGluIGluc3RhbGxlZE1vZHVsZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNba107XG4gICAgICAgICAgICBjb25zdCBmaWxlID0gbW9kdWxlLmZpbGU7XG4gICAgICAgICAgICBjb25zdCBleHBvcnRzID0gbW9kdWxlLm1vZHVsZSA/IG1vZHVsZS5tb2R1bGUuZXhwb3J0cyA6IHt9O1xuICAgICAgICAgICAgY29uc3QgbW9kTmFtZSA9IHRoaXMuZ2V0TW9kdWxlTmFtZShmaWxlKTtcbiAgICAgICAgICAgIGZvciAobGV0IGsgaW4gZXhwb3J0cykge1xuICAgICAgICAgICAgICAgIGlmIChrID09PSAnX19lc01vZHVsZScpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhwb3J0c1trXSA9IGFkZEV4cG9ydHMobW9kTmFtZSwgZXhwb3J0c1trXSwgbW9kTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZXhwb3J0c1ttb2ROYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhwb3J0c1ttb2ROYW1lXSA9IGV4cG9ydHNba107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleHBvcnRzW2tdID0gYWRkRXhwb3J0cyhrLCBleHBvcnRzW2tdLCBtb2ROYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHdpbmRvd1tgJHttb2ROYW1lfV9tb2RgXSA9IGV4cG9ydHM7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgayBpbiBhbGxFeHBvcnRzKSB7XG4gICAgICAgICAgICBpZiAod2luZG93W2tdKSB7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICB3aW5kb3dba10gPSBhbGxFeHBvcnRzW2tdO1xuICAgICAgICB9XG4gICAgfVxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Components/PropSelector.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '95cf9sVxtJHbIz3btfe766G', 'PropSelector');
// Script/Common/Components/PropSelector.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropEmum = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, executeInEditMode = _a.executeInEditMode, menu = _a.menu, property = _a.property;
var PropEmum;
(function (PropEmum) {
    PropEmum[PropEmum["Active"] = 0] = "Active";
    PropEmum[PropEmum["Position"] = 1] = "Position";
    PropEmum[PropEmum["Rotation"] = 2] = "Rotation";
    PropEmum[PropEmum["Scale"] = 3] = "Scale";
    PropEmum[PropEmum["Anchor"] = 4] = "Anchor";
    PropEmum[PropEmum["Size"] = 5] = "Size";
    PropEmum[PropEmum["Color"] = 6] = "Color";
    PropEmum[PropEmum["Opacity"] = 7] = "Opacity";
    PropEmum[PropEmum["Slew"] = 8] = "Slew";
    PropEmum[PropEmum["Label_String"] = 9] = "Label_String";
    PropEmum[PropEmum["Sprite_Texture"] = 10] = "Sprite_Texture";
})(PropEmum = exports.PropEmum || (exports.PropEmum = {}));
cc['PropEmum'] = PropEmum;
var ControllerId = cc.Enum({});
var PropSelector = /** @class */ (function (_super) {
    __extends(PropSelector, _super);
    function PropSelector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ctrlId = 0;
        // 被控制的属性
        _this.props = [];
        return _this;
        // update (dt) {} 
    }
    __decorate([
        property({ type: ControllerId, tooltip: "控制器的名称" })
    ], PropSelector.prototype, "ctrlId", void 0);
    __decorate([
        property({ type: [cc.Enum(PropEmum)], tooltip: "被控制的属性" })
    ], PropSelector.prototype, "props", void 0);
    PropSelector = __decorate([
        ccclass,
        menu('i18n:状态控制/PropSelector'),
        executeInEditMode
    ], PropSelector);
    return PropSelector;
}(cc.Component));
exports.default = PropSelector;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL0NvbXBvbmVudHMvUHJvcFNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTSxJQUFBLEtBQStDLEVBQUUsQ0FBQyxVQUFVLEVBQTNELE9BQU8sYUFBQSxFQUFFLGlCQUFpQix1QkFBQSxFQUFFLElBQUksVUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUVuRSxJQUFZLFFBYVg7QUFiRCxXQUFZLFFBQVE7SUFDaEIsMkNBQU0sQ0FBQTtJQUNOLCtDQUFRLENBQUE7SUFDUiwrQ0FBUSxDQUFBO0lBQ1IseUNBQUssQ0FBQTtJQUNMLDJDQUFNLENBQUE7SUFDTix1Q0FBSSxDQUFBO0lBQ0oseUNBQUssQ0FBQTtJQUNMLDZDQUFPLENBQUE7SUFDUCx1Q0FBSSxDQUFBO0lBRUosdURBQVksQ0FBQTtJQUNaLDREQUFjLENBQUE7QUFDbEIsQ0FBQyxFQWJXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYW5CO0FBRUQsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLFFBQVEsQ0FBQztBQUUxQixJQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBS2pDO0lBQTBDLGdDQUFZO0lBQXREO1FBQUEscUVBU0M7UUFORyxZQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsU0FBUztRQUVULFdBQUssR0FBZSxFQUFFLENBQUM7O1FBRXZCLGtCQUFrQjtJQUN0QixDQUFDO0lBTkc7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUMsQ0FBQztnREFDdkM7SUFHWDtRQURDLFFBQVEsQ0FBQyxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFDLENBQUM7K0NBQ2xDO0lBTk4sWUFBWTtRQUhoQyxPQUFPO1FBQ1AsSUFBSSxDQUFDLHdCQUF3QixDQUFDO1FBQzlCLGlCQUFpQjtPQUNHLFlBQVksQ0FTaEM7SUFBRCxtQkFBQztDQVRELEFBU0MsQ0FUeUMsRUFBRSxDQUFDLFNBQVMsR0FTckQ7a0JBVG9CLFlBQVkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7Y2NjbGFzcywgZXhlY3V0ZUluRWRpdE1vZGUsIG1lbnUsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XG5cbmV4cG9ydCBlbnVtIFByb3BFbXVtIHtcbiAgICBBY3RpdmUsXG4gICAgUG9zaXRpb24sXG4gICAgUm90YXRpb24sXG4gICAgU2NhbGUsXG4gICAgQW5jaG9yLFxuICAgIFNpemUsXG4gICAgQ29sb3IsXG4gICAgT3BhY2l0eSxcbiAgICBTbGV3LFxuXG4gICAgTGFiZWxfU3RyaW5nLFxuICAgIFNwcml0ZV9UZXh0dXJlLFxufVxuXG5jY1snUHJvcEVtdW0nXSA9IFByb3BFbXVtO1xuXG5jb25zdCBDb250cm9sbGVySWQgPSBjYy5FbnVtKHt9KTtcblxuQGNjY2xhc3NcbkBtZW51KCdpMThuOueKtuaAgeaOp+WIti9Qcm9wU2VsZWN0b3InKVxuQGV4ZWN1dGVJbkVkaXRNb2RlXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9wU2VsZWN0b3IgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xuICAgIFxuICAgIEBwcm9wZXJ0eSh7dHlwZTogQ29udHJvbGxlcklkLCB0b29sdGlwOiBcIuaOp+WItuWZqOeahOWQjeensFwifSlcbiAgICBjdHJsSWQgPSAwO1xuICAgIC8vIOiiq+aOp+WItueahOWxnuaAp1xuICAgIEBwcm9wZXJ0eSh7dHlwZTogW2NjLkVudW0oUHJvcEVtdW0pXSwgdG9vbHRpcDogXCLooqvmjqfliLbnmoTlsZ7mgKdcIn0pICAgICAgICAgICAgICAgXG4gICAgcHJvcHM6IFByb3BFbXVtW10gPSBbXTsgICAgXG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fSBcbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/EnumUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c0967gbR3dMcbkSIeGpt59T', 'EnumUtils');
// Script/Common/Utils/EnumUtils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumUtils = void 0;
var EnumUtils = /** @class */ (function () {
    function EnumUtils() {
    }
    EnumUtils.getNamesAndValues = function (e) {
        return this.getNames(e).map(function (_name) { return { name: _name, value: e[_name] }; });
    };
    EnumUtils.getNames = function (e) {
        return this.getObjectValues(e).filter(function (v) { return typeof v === "string"; });
    };
    EnumUtils.getValues = function (e) {
        return this.getObjectValues(e).filter(function (v) { return typeof v === "number"; });
    };
    EnumUtils.getObjectValues = function (e) {
        return Object.keys(e).map(function (k) { return e[k]; });
    };
    return EnumUtils;
}());
exports.EnumUtils = EnumUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL0VudW1VdGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO0lBZ0JBLENBQUM7SUFmVSwyQkFBaUIsR0FBeEIsVUFBeUIsQ0FBTTtRQUMzQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsS0FBSyxJQUFNLE9BQU8sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7SUFFTSxrQkFBUSxHQUFmLFVBQWdCLENBQU07UUFDbEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBckIsQ0FBcUIsQ0FBYSxDQUFDO0lBQ2xGLENBQUM7SUFFTSxtQkFBUyxHQUFoQixVQUFpQixDQUFNO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxPQUFPLENBQUMsS0FBSyxRQUFRLEVBQXJCLENBQXFCLENBQWEsQ0FBQztJQUNsRixDQUFDO0lBRWMseUJBQWUsR0FBOUIsVUFBK0IsQ0FBTTtRQUNqQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFKLENBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFDTCxnQkFBQztBQUFELENBaEJBLEFBZ0JDLElBQUE7QUFoQlksOEJBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRW51bVV0aWxzIHtcbiAgICBzdGF0aWMgZ2V0TmFtZXNBbmRWYWx1ZXMoZTogYW55KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldE5hbWVzKGUpLm1hcChfbmFtZSA9PiB7IHJldHVybiB7IG5hbWU6IF9uYW1lLCB2YWx1ZTogZVtfbmFtZV0gYXMgbnVtYmVyIH07IH0pO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXROYW1lcyhlOiBhbnkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0T2JqZWN0VmFsdWVzKGUpLmZpbHRlcih2ID0+IHR5cGVvZiB2ID09PSBcInN0cmluZ1wiKSBhcyBzdHJpbmdbXTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0VmFsdWVzKGU6IGFueSkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRPYmplY3RWYWx1ZXMoZSkuZmlsdGVyKHYgPT4gdHlwZW9mIHYgPT09IFwibnVtYmVyXCIpIGFzIG51bWJlcltdO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGdldE9iamVjdFZhbHVlcyhlOiBhbnkpOiAobnVtYmVyIHwgc3RyaW5nKVtdIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGUpLm1hcChrID0+IGVba10pO1xuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/LRUCache.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2516dDnewNJ2I/vyZM6Z9rJ', 'LRUCache');
// Script/Common/Utils/LRUCache.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LRUCache = void 0;
var Pool_1 = require("./Pool");
var LRUNode = /** @class */ (function () {
    function LRUNode(value, next) {
        this.value = value;
        this.next = next;
    }
    LRUNode.prototype.use = function (value, next) {
        this.value = value;
        this.next = next;
    };
    LRUNode.prototype.free = function () {
        this.value = '';
        this.next = null;
    };
    return LRUNode;
}());
/**
 * @author honmono
 * @description 为UIManager写的 lru cache控制.
 */
var LRUCache = /** @class */ (function () {
    function LRUCache(maxSize) {
        this.nodePool = new Pool_1.Pool(function () {
            return new LRUNode('', null);
        }, 3);
        this.maxSize = maxSize;
        this.head = new LRUNode('head', null);
        this.size = 0;
    }
    LRUCache.prototype.remove = function (value) {
        var node = this.has(value);
        node && this.removeNode(node);
    };
    LRUCache.prototype.put = function (value) {
        if (this.size <= 0) {
            this.last = this.nodePool.alloc(value, null);
            this.last.prev = this.head;
            this.head.next = this.last;
            this.size = 1;
            return;
        }
        var node = this.has(value);
        if (!node) { // 不存在, 直接加到最前面
            node = this.nodePool.alloc(value, null);
            this.addHead(node);
            return;
        }
        // 存在, 把这个node放在最前面
        if (this.last == node) { // 如果当前node就是last, 那么更换last
            this.last = node.prev;
        }
        this.removeNode(node);
        this.addHead(node);
    };
    LRUCache.prototype.needDelete = function () {
        return this.size > this.maxSize;
    };
    LRUCache.prototype.deleteLastNode = function () {
        var value = this.last.value;
        this.removeNode(this.last);
        this.nodePool.free(this.last);
        this.last = this.last.prev;
        return value;
    };
    LRUCache.prototype.removeNode = function (node) {
        node.prev.next = node.next;
        if (node.next) {
            node.next.prev = node.prev;
        }
        this.size--;
    };
    /** 向头部插入一个node */
    LRUCache.prototype.addHead = function (node) {
        node.next = this.head.next;
        if (node.next) {
            node.next.prev = node;
        }
        this.head.next = node;
        node.prev = this.head;
        this.size++;
    };
    LRUCache.prototype.has = function (value) {
        var next = this.head.next;
        while (next) {
            if (next.value == value) {
                return next;
            }
            next = next.next;
        }
        return null;
    };
    LRUCache.prototype.toString = function () {
        var str = '';
        var next = this.head.next;
        while (next) {
            str += next.value + " ";
            next = next.next;
        }
        return str;
    };
    return LRUCache;
}());
exports.LRUCache = LRUCache;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/GlobalHelper.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '97861Bw45RARLIDvaYH8CIV', 'GlobalHelper');
// Script/Common/Utils/GlobalHelper.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalHelper = /** @class */ (function () {
    function GlobalHelper() {
    }
    GlobalHelper.Register = function (name, inst) {
        GlobalHelper[name] = inst;
    };
    GlobalHelper.Get = function (name) {
        return GlobalHelper._globalMap[name] ? GlobalHelper._globalMap[name] : undefined;
    };
    GlobalHelper._globalMap = {};
    return GlobalHelper;
}());
exports.default = GlobalHelper;
window["GlobalHelper"] = GlobalHelper;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL0dsb2JhbEhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUFRQSxDQUFDO0lBTmlCLHFCQUFRLEdBQXRCLFVBQXVCLElBQVksRUFBRSxJQUFTO1FBQzFDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQUNhLGdCQUFHLEdBQWpCLFVBQXFCLElBQVk7UUFDN0IsT0FBTyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDMUYsQ0FBQztJQU5jLHVCQUFVLEdBQXlCLEVBQUUsQ0FBQztJQU96RCxtQkFBQztDQVJELEFBUUMsSUFBQTtrQkFSb0IsWUFBWTtBQVVqQyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsWUFBWSxDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2xvYmFsSGVscGVyIHtcbiAgICBwcml2YXRlIHN0YXRpYyBfZ2xvYmFsTWFwOiB7IFtrOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIHB1YmxpYyBzdGF0aWMgUmVnaXN0ZXIobmFtZTogc3RyaW5nLCBpbnN0OiBhbnkpIHtcbiAgICAgICAgR2xvYmFsSGVscGVyW25hbWVdID0gaW5zdDtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBHZXQ8VD4obmFtZTogc3RyaW5nKTogVCB7XG4gICAgICAgIHJldHVybiBHbG9iYWxIZWxwZXIuX2dsb2JhbE1hcFtuYW1lXSA/IEdsb2JhbEhlbHBlci5fZ2xvYmFsTWFwW25hbWVdIGFzIFQgOiB1bmRlZmluZWQ7XG4gICAgfVxufVxuXG53aW5kb3dbXCJHbG9iYWxIZWxwZXJcIl0gPSBHbG9iYWxIZWxwZXI7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/Measure.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '88f3djvTDJHMY+UnVZdcrvg', 'Measure');
// Script/Common/Utils/Measure.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.measure = void 0;
var measure = function (target, propertyKey, descriptor) {
    var originalMethod = descriptor.value;
    descriptor.value = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var start = performance.now();
        var result = originalMethod.apply(this, args);
        var finish = performance.now();
        console.log(propertyKey + " Execution time: " + (finish - start).toFixed(2) + " milliseconds");
        return result;
    };
    return descriptor;
};
exports.measure = measure;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL01lYXN1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sSUFBTSxPQUFPLEdBQUcsVUFDckIsTUFBYyxFQUNkLFdBQW1CLEVBQ25CLFVBQThCO0lBRTlCLElBQU0sY0FBYyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFFeEMsVUFBVSxDQUFDLEtBQUssR0FBRztRQUFVLGNBQU87YUFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1lBQVAseUJBQU87O1FBQ2xDLElBQU0sS0FBSyxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQyxJQUFNLE1BQU0sR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFNLE1BQU0sR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBSSxXQUFXLHlCQUFvQixDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGtCQUFlLENBQUMsQ0FBQztRQUMxRixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLENBQUM7SUFFRixPQUFPLFVBQVUsQ0FBQztBQUNwQixDQUFDLENBQUM7QUFoQlcsUUFBQSxPQUFPLFdBZ0JsQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBtZWFzdXJlID0gKFxuICB0YXJnZXQ6IE9iamVjdCxcbiAgcHJvcGVydHlLZXk6IHN0cmluZyxcbiAgZGVzY3JpcHRvcjogUHJvcGVydHlEZXNjcmlwdG9yXG4pID0+IHtcbiAgY29uc3Qgb3JpZ2luYWxNZXRob2QgPSBkZXNjcmlwdG9yLnZhbHVlO1xuXG4gIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgIGNvbnN0IHN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgY29uc3QgcmVzdWx0ID0gb3JpZ2luYWxNZXRob2QuYXBwbHkodGhpcywgYXJncyk7XG4gICAgY29uc3QgZmluaXNoID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgY29uc29sZS5sb2coYCR7cHJvcGVydHlLZXl9IEV4ZWN1dGlvbiB0aW1lOiAkeyhmaW5pc2ggLSBzdGFydCkudG9GaXhlZCgyKX0gbWlsbGlzZWNvbmRzYCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICByZXR1cm4gZGVzY3JpcHRvcjtcbn07Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/DrawingBoard.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '54b2dNYr/FCsJ51TWLTWJoT', 'DrawingBoard');
// Script/Common/Utils/DrawingBoard.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 画板：
 * 可使用任意颜色绘制矩形，三角形，圆，直线，并统计每种颜色的像素个数;
 * 擦除图案时，设置画板的颜色为透明色再进行绘制即可;
 * 使用的坐标系为原点在左上角，X轴向右为正，Y轴向下为正。
 */
var DrawingBoard = /** @class */ (function () {
    /**
     * 可对每个像素点绘制的画板，画板使用的坐标系原点为左下角，X轴向右为正，Y轴向上为正
     * @param width     画板宽度
     * @param height    画板高度
     * @param data      指定画板初始内容，参数为记录颜色分量的一维数组，不传入参数时，画板中全部像素为透明
     */
    function DrawingBoard(width, height, data) {
        this.init(width, height, data);
    }
    Object.defineProperty(DrawingBoard.prototype, "width", {
        /**画板宽度 */
        get: function () { return this._witdh; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DrawingBoard.prototype, "height", {
        /**画板高度 */
        get: function () { return this._height; },
        enumerable: false,
        configurable: true
    });
    /**
     * 对画板进行初始化，会清空已绘制的所有内容
     * @param width     画板宽度
     * @param height    画板高度
     * @param data      指定画板初始内容，参数为记录颜色分量的一维数组，不传入参数时，画板内容为全部透明的矩形
     */
    DrawingBoard.prototype.init = function (width, height, data) {
        this.tempColor = this.tempR = this.tempG = this.tempB = this.tempA = 0;
        this.curColor = 0;
        this._witdh = Math.round(width);
        this._height = Math.round(height);
        this.initPointColor();
        this.initPixelColor();
        this.initLineData();
        if (!!data) {
            this.setData(data);
        }
    };
    DrawingBoard.prototype.initPointColor = function () {
        if (!this.pointColor) {
            this.pointColor = [];
        }
        for (var x = 0; x < this.width; ++x) {
            if (!this.pointColor[x]) {
                this.pointColor[x] = [];
            }
            for (var y = 0; y < this.height; ++y) {
                this.pointColor[x][y] = 0;
            }
        }
        this.colorCount = {};
        this.colorCount[0] = this.width * this.height;
    };
    DrawingBoard.prototype.initPixelColor = function () {
        this.buffer = new ArrayBuffer(this.width * this.height * 4);
        this.pixelColor = new Uint8Array(this.buffer);
        this.pixelColor.fill(0);
    };
    /**重置画板，画板的宽高不变，但会清空已绘制的所有内容，恢复至透明状态 */
    DrawingBoard.prototype.reset = function () {
        this.resetPointColor();
        this.resetPixelColor();
    };
    DrawingBoard.prototype.resetPointColor = function () {
        for (var x = this.width - 1; x >= 0; --x) {
            for (var y = this.height - 1; y >= 0; --y) {
                this.pointColor[x][y] = 0;
            }
        }
        for (var key in this.colorCount) {
            this.colorCount[key] = 0;
        }
    };
    DrawingBoard.prototype.resetPixelColor = function () {
        this.pixelColor.fill(0);
    };
    /**
     * 传入图像的像素数据，直接设置画板的内容，图像尺寸必须与画板一致，若需要重新设置画板大小，请使用 init() 函数
     * @param data 记录各像素颜色分量的一维数组
     */
    DrawingBoard.prototype.setData = function (data) {
        var pixelData = new Uint8Array(data);
        if (pixelData.length != this.width * this.height * 4) {
            console.warn("画板设置数据失败，数据长度与画板大小不一致。");
            // return;
            pixelData = pixelData.subarray(0, this.width * this.height * 4);
        }
        this.setPixelColorByRGBA(pixelData);
        this.setPointColorByRGBA(pixelData);
    };
    /**
     * 记录各像素颜色分量
     * @param data 颜色分量一维数组
     */
    DrawingBoard.prototype.setPixelColorByRGBA = function (data) {
        this.pixelColor.set(data);
    };
    /**
     * 按像素点的坐标记录像素点的颜色值
     * @param data 颜色分量一维数组
     */
    DrawingBoard.prototype.setPointColorByRGBA = function (data) {
        this.colorCount = {};
        for (var y = 0; y < this.height; ++y) {
            var i = y * this.width * 4;
            for (var x = 0; x < this.width; ++x) {
                var color = this.convertToNumber(data[i++], data[i++], data[i++], data[i++]);
                this.pointColor[x][y] = color;
                if (!this.colorCount[color]) {
                    this.colorCount[color] = 1;
                }
                else {
                    this.colorCount[color] += 1;
                }
            }
        }
    };
    /**
     * 获取画板中的数据
     * @param data 用于接收数据的数组
     * @returns {number[]} 返回存储各像素点颜色分量的一维数组
     */
    DrawingBoard.prototype.copyData = function (data) {
        if (undefined === data) {
            data = [];
        }
        for (var i = 0, count = this.pixelColor.length; i < count; ++i) {
            data[i] = this.pixelColor[i];
        }
        return data;
    };
    /**
     * 获取画板中记录每个像素的颜色分量的数据
     * @returns 将直接返回画板内部的数组；注：若使用者需要对该数据进行修改，请使用 copyData 方法获取，以免影响画板的像素个数计数功能
     */
    DrawingBoard.prototype.getData = function () {
        return this.pixelColor;
    };
    /**获取画板内部使用的内存块，若仅需要获取像素数据，不进一步处理，使用 getData 即可 */
    DrawingBoard.prototype.getBuffer = function () {
        return this.buffer;
    };
    /**
     * 获取指定颜色的像素的个数
     * @param r 颜色的r分量
     * @param g 颜色的g分量
     * @param b 颜色的b分量
     * @param a 颜色透明度，默认为255
     */
    DrawingBoard.prototype.getColorCount = function (r, g, b, a) {
        if (a === void 0) { a = 255; }
        var c = this.convertToNumber(r, g, b, a);
        return this.colorCount[c];
    };
    /**
     * 设置画板绘制图案使使用的颜色
     * @param r 包含RGBA分量的颜色对象，或者颜色的r分量
     * @param g 颜色的g分量
     * @param b 颜色的b分量
     * @param a 颜色透明度，默认为255
     */
    DrawingBoard.prototype.setColor = function (r, g, b, a) {
        if (a === void 0) { a = 255; }
        this.curColor = this.convertToNumber(r, g, b, a);
        if (!this.colorCount[this.curColor]) {
            this.colorCount[this.curColor] = 0;
        }
        this.tempColor = this.curColor;
        this.tempR = r;
        this.tempG = g;
        this.tempB = b;
        this.tempA = a;
    };
    /**清空所有已绘制的内容 */
    DrawingBoard.prototype.clear = function () {
        this.reset();
    };
    DrawingBoard.prototype.initLineData = function () {
        this.previousLineEndPos = new Vec2();
        this.previousLineEndPosT = new Vec2();
        this.previousLineEndPosB = new Vec2();
        this.previousLineCircleEnd = true;
        this.previousLineWidth = 1;
    };
    /**
     * 移动画笔到指定的位置，调用 lineTo 函数时将使用该点作为直线的起点
     * @param x     坐标X
     * @param y     坐标Y
     */
    DrawingBoard.prototype.moveTo = function (x, y) {
        x = Math.round(x);
        y = Math.round(y);
        this.previousLineEndPos.set(x, y);
        this.previousLineEndPosT.set(x, y);
        this.previousLineEndPosB.set(x, y);
    };
    /**
     * 设置线宽
     */
    DrawingBoard.prototype.setLineWidth = function (w) {
        this.previousLineWidth = w;
    };
    /**
     * 设置线段端点样式
     * @param b 线段端点是否为圆形
     */
    DrawingBoard.prototype.setLineCircleEnd = function (b) {
        this.previousLineCircleEnd = b;
    };
    /**
     * 绘制直线，使用默认的颜色、线宽和线段端点样式
     * @param x1        起点坐标X
     * @param y1        起点坐标Y
     * @param x2        终点坐标X
     * @param y2        终点坐标Y
     */
    DrawingBoard.prototype.line = function (x1, y1, x2, y2) {
        x1 = Math.round(x1);
        x2 = Math.round(x2);
        y1 = Math.round(y1);
        y2 = Math.round(y2);
        if (x1 == x2 && y1 == y2)
            return;
        var width = this.previousLineWidth;
        var circleEnd = this.previousLineCircleEnd;
        this.previousLineEndPos.set(x2, y2);
        var offsetX = 0;
        var offsetY = 0;
        var rateK = 1;
        if (x1 == x2) {
            offsetX = Math.round(width * 0.5);
        }
        else if (y1 == y2) {
            offsetY = Math.round(width * 0.5);
        }
        else {
            var k = (y2 - y1) / (x2 - x1);
            rateK = Math.sqrt(k * k + 1);
            offsetY = width * 0.5 / rateK;
            offsetX = Math.round(offsetY * k);
            offsetY = Math.round(offsetY);
        }
        this.previousLineEndPosT.set(x2 - offsetX, y2 + offsetY);
        this.previousLineEndPosB.set(x2 + offsetX, y2 - offsetY);
        var p1 = new Vec2(x1, y1);
        var p2 = new Vec2(x2, y2);
        if (x1 > x2) {
            p1.x = x2;
            p1.y = y2;
            p2.x = x1;
            p2.y = y1;
        }
        this._drawLine(p1, p2, width, offsetX, offsetY, rateK);
        if (circleEnd) {
            this._drawCircle(x1, y1, width * 0.5);
            this._drawCircle(x2, y2, width * 0.5);
        }
    };
    /**
     * 绘制到指定坐标的直线，起点为上一次绘制的直线的终点，使用默认的颜色、宽度和线段端点样式
     * @param x     终点坐标X
     * @param y     终点坐标Y
     */
    DrawingBoard.prototype.lineTo = function (x, y) {
        x = Math.round(x);
        y = Math.round(y);
        if (this.previousLineEndPos.x == x && this.previousLineEndPos.y == y)
            return;
        var width = this.previousLineWidth;
        var circleEnd = this.previousLineCircleEnd;
        var x1 = this.previousLineEndPos.x;
        var y1 = this.previousLineEndPos.y;
        var x2 = x;
        var y2 = y;
        if (x1 > x2) {
            x1 = x2;
            y1 = y2;
            x2 = this.previousLineEndPos.x;
            y2 = this.previousLineEndPos.y;
        }
        var offsetX = 0;
        var offsetY = 0;
        var rateK = 1;
        if (x1 == x2) {
            offsetX = Math.round(width * 0.5);
        }
        else if (y1 == y2) {
            offsetY = Math.round(width * 0.5);
        }
        else {
            var k = (y2 - y1) / (x2 - x1);
            rateK = Math.sqrt(k * k + 1);
            offsetY = width * 0.5 / rateK;
            offsetX = Math.round(offsetY * k);
            offsetY = Math.round(offsetY);
        }
        if (!circleEnd) {
            if (this.previousLineEndPos.x != this.previousLineEndPosT.x
                || this.previousLineEndPos.y != this.previousLineEndPosT.y) {
                var p1 = new Vec2(this.previousLineEndPos.x - offsetX, this.previousLineEndPos.y + offsetY);
                var p2 = new Vec2(this.previousLineEndPos.x + offsetX, this.previousLineEndPos.y - offsetY);
                this._drawTriangle([p1, p2, this.previousLineEndPosT]);
                this._drawTriangle([p1, p2, this.previousLineEndPosB]);
            }
        }
        else {
            this._drawCircle(x1, y1, width * 0.5);
            this._drawCircle(x2, y2, width * 0.5);
        }
        this._drawLine(new Vec2(x1, y1), new Vec2(x2, y2), width, offsetX, offsetY, rateK);
        this.previousLineEndPos.set(x, y);
        this.previousLineEndPosT.set(x - offsetX, y + offsetY);
        this.previousLineEndPosB.set(x + offsetX, y - offsetY);
    };
    /**
     * 绘制直线，不包含线段端点样式
     * @param p1        线段起点坐标
     * @param p2        线段终点坐标
     * @param width     线段宽度
     * @param color     线段颜色
     */
    DrawingBoard.prototype._drawLine = function (p1, p2, width, offsetX, offsetY, slopeRate) {
        if (p1.y == p2.y) {
            //水平直线
            var x = p1.x < p2.x ? p1.x : p2.x;
            this._drawRect(new Vec2(x, Math.round(p1.y - width * 0.5)), Math.abs(p1.x - p2.x), width);
        }
        else if (p1.x == p2.x) {
            //垂直直线
            var y = p1.y < p2.y ? p1.y : p2.y;
            this._drawRect(new Vec2(Math.round(p1.x - width * 0.5), y), width, Math.abs(p1.y - p2.y));
        }
        else {
            //倾斜直线
            var inverseK = (p1.x - p2.x) / (p1.y - p2.y);
            var p1t = new Vec2(p1.x - offsetX, p1.y + offsetY);
            var p1b = new Vec2(p1.x + offsetX, p1.y - offsetY);
            var p2t = new Vec2(p2.x - offsetX, p2.y + offsetY);
            var p2b = new Vec2(p2.x + offsetX, p2.y - offsetY);
            var p1c = new Vec2();
            var p2c = new Vec2();
            var height = Math.round(width * slopeRate);
            if (p2.y > p1.y) {
                if (p1b.x < p2t.x) {
                    p1c.x = p1b.x;
                    p1c.y = p1b.y + height;
                    p2c.x = p2t.x;
                    p2c.y = p2t.y - height;
                    this._drawVerticalTriangle(p1c, p1b, p1t);
                    this._drawParallelogram(p1b, p2c, height);
                    this._drawVerticalTriangle(p2t, p2c, p2b);
                }
                else {
                    p1c.x = p1b.x;
                    p1c.y = Math.round(p2t.y - (p1c.x - p2t.x) * inverseK);
                    p2c.x = p2t.x;
                    p2c.y = Math.round(p1b.y + (p1b.x - p2c.x) * inverseK);
                    this._drawVerticalTriangle(p2t, p2c, p1t);
                    this._drawParallelogram(p2c, p1b, p2t.y - p2c.y);
                    this._drawVerticalTriangle(p1c, p1b, p2b);
                }
            }
            else {
                if (p1t.x < p2b.x) {
                    p1c.x = p1t.x;
                    p1c.y = p1t.y - height;
                    p2c.x = p2b.x;
                    p2c.y = p2b.y + height;
                    this._drawVerticalTriangle(p1t, p1c, p1b);
                    this._drawParallelogram(p1c, p2b, height);
                    this._drawVerticalTriangle(p2c, p2b, p2t);
                }
                else {
                    p1c.x = p1t.x;
                    p1c.y = Math.round(p2b.y - (p1c.x - p2b.x) * inverseK);
                    p2c.x = p2b.x;
                    p2c.y = Math.round(p1t.y + (p1t.x - p2c.x) * inverseK);
                    this._drawVerticalTriangle(p2c, p2b, p1b);
                    this._drawParallelogram(p2b, p1c, p1t.y - p1c.y);
                    this._drawVerticalTriangle(p1t, p1c, p2t);
                }
            }
        }
    };
    /**
     * 绘制矩形
     * @param x     矩形左下角的坐标X
     * @param y     矩形左下角的坐标Y
     * @param w     矩形宽度
     * @param h     矩形高度
     */
    DrawingBoard.prototype.rect = function (x, y, w, h) {
        this._drawRect(new Vec2(x, y), w, h);
    };
    /**
     * 绘制矩形
     * @param p         矩形左下顶点的坐标
     * @param w         矩形宽度
     * @param h         矩形高度
     * @param color     矩形填充的颜色
     */
    DrawingBoard.prototype._drawRect = function (p, w, h) {
        var minX = this.clampX(p.x);
        var maxX = this.clampX(p.x + w);
        var minY = this.clampY(p.y);
        var maxY = this.clampY(p.y + h);
        // for (let x = minX; x <= maxX; ++x) {
        //     for (let y = minY; y <= maxY; ++y) {
        //         this._drawPixel(x, y);
        //     }
        // }
        for (var y = minY; y <= maxY; ++y) {
            this._drawRowPixel(minX, maxX, y);
        }
    };
    /**
     * 绘制平行四边形，平行四边形的左右两边与Y轴平行
     * @param p1        左下顶点坐标
     * @param p2        右下顶点坐标
     * @param height    垂直边高度
     * @param color     颜色
     */
    DrawingBoard.prototype._drawParallelogram = function (p1, p2, height) {
        if (p1.x == p2.x)
            return;
        var k = (p2.y - p1.y) / (p2.x - p1.x);
        var minX = this._minX(p1.x);
        var maxX = this._maxX(p2.x);
        for (var x = minX; x <= maxX; ++x) {
            var minY = p1.y + Math.round((x - p1.x) * k);
            var maxY = minY + height;
            minY = this._minY(minY);
            maxY = this._maxY(maxY);
            this._drawColPixel(minY, maxY, x);
            // for (let y = minY; y <= maxY; ++y) {
            //     this._drawPixel(x, y);
            // }
        }
    };
    /**
     * 绘制三角形
     * @param x1    顶点1坐标X
     * @param y1    顶点1坐标Y
     * @param x2    顶点2坐标X
     * @param y2    顶点2坐标Y
     * @param x3    顶点3坐标X
     * @param y3    顶点3坐标Y
     */
    DrawingBoard.prototype.triangle = function (x1, y1, x2, y2, x3, y3) {
        var pList = [];
        pList.push(new Vec2(x1, y1));
        pList.push(new Vec2(x2, y2));
        pList.push(new Vec2(x3, y3));
        this._drawTriangle(pList);
    };
    /**
     * 绘制任意三角形
     * @param p1    顶点坐标
     * @param p2
     * @param p3
     * @param color 填充颜色
     */
    DrawingBoard.prototype._drawTriangle = function (pList) {
        pList.sort(function (a, b) {
            return a.x - b.x;
        });
        var p1 = pList[0];
        var p2 = pList[1];
        var p3 = pList[2];
        if (p1.x == p2.x) {
            if (p1.x == p3.x)
                return;
            if (p1.y < p2.y) {
                p1 = pList[1];
                p2 = pList[0];
            }
            this._drawVerticalTriangle(p1, p2, p3);
            return;
        }
        var k = (p3.y - p1.y) / (p3.x - p1.x);
        var p4 = new Vec2(p2.x, Math.round(p1.y + (p2.x - p1.x) * k));
        if (p4.y == p2.y)
            return;
        if (p4.y < p2.y) {
            this._drawVerticalTriangle(p2, p4, p1);
            this._drawVerticalTriangle(p2, p4, p3);
        }
        else {
            this._drawVerticalTriangle(p4, p2, p1);
            this._drawVerticalTriangle(p4, p2, p3);
        }
    };
    /**
     * 绘制一条边与Y轴平行的三角形
     * @param p1    三角形垂直边的 上 顶点坐标
     * @param p2    三角形垂直边的 下 顶点坐标
     * @param p3    三角形 左侧或右侧 顶点坐标
     * @param color 要绘制的颜色
     */
    DrawingBoard.prototype._drawVerticalTriangle = function (p1, p2, p3) {
        if (p3.x == p1.x)
            return;
        var k1 = (p3.y - p1.y) / (p3.x - p1.x);
        var k2 = (p3.y - p2.y) / (p3.x - p2.x);
        var maxX = p3.x, minX = p1.x;
        if (maxX < minX) {
            maxX = p1.x;
            minX = p3.x;
        }
        minX = this._minX(minX);
        maxX = this._maxX(maxX);
        for (var x = minX; x <= maxX; ++x) {
            var maxY = this.clampY(Math.round(p1.y + (x - p1.x) * k1));
            var minY = this.clampY(Math.round(p2.y + (x - p2.x) * k2));
            this._drawColPixel(minY, maxY, x);
            // for (let y = minY; y <= maxY; ++y) {
            //     this._drawPixel(x, y);
            // }
        }
    };
    /**
    * 绘制一个圆
    * @param x         圆心坐标x
    * @param y         圆心坐标y
    * @param radius    圆的半径
    */
    DrawingBoard.prototype.circle = function (x, y, radius) {
        x = Math.round(x);
        y = Math.round(y);
        this._drawCircle(x, y, radius);
    };
    DrawingBoard.prototype._drawCircle = function (x, y, radius) {
        radius = Math.round(radius);
        if (radius == 0)
            return;
        //三角形的斜边的平方
        var dis = radius * radius;
        // let minX = this._minX(x - radius);
        // let maxX = this._maxX(x + radius);
        // for (let i = minX; i <= maxX; ++i) {
        //     let r = x - i;
        //     r = Math.round(Math.sqrt(dis - r * r));
        //     let minY = this._minY(y - r);
        //     let maxY = this._maxY(y + r);
        //     for (let j = minY; j <= maxY; ++j) {
        //         this._drawPixel(i, j);
        //     }
        // }
        var minY = this.clampY(y - radius);
        var maxY = this.clampY(y + radius);
        for (var j = minY; j <= maxY; ++j) {
            var r = j - y;
            r = Math.round(Math.sqrt(dis - r * r));
            var minX = this.clampX(x - r);
            var maxX = this.clampX(x + r);
            this._drawRowPixel(minX, maxX, j);
        }
    };
    DrawingBoard.prototype._minX = function (x) {
        return x >= 0 ? x : 0;
    };
    DrawingBoard.prototype._maxX = function (x) {
        return x < this.width ? x : this.width - 1;
    };
    DrawingBoard.prototype._minY = function (y) {
        return y >= 0 ? y : 0;
    };
    DrawingBoard.prototype._maxY = function (y) {
        return y < this.height ? y : this.height - 1;
    };
    DrawingBoard.prototype.clampX = function (x) {
        if (x < 0)
            return 0;
        if (x >= this.width)
            return this.width - 1;
        return x;
    };
    DrawingBoard.prototype.clampY = function (y) {
        if (y < 0)
            return 0;
        if (y >= this.height)
            return this.height - 1;
        return y;
    };
    /**绘制一个像素点的颜色 */
    DrawingBoard.prototype._drawPixel = function (x, y) {
        if (this.pointColor[x][y] == this.tempColor)
            return;
        var index = (y * this.width + x) * 4;
        this.pixelColor[index] = this.tempR;
        this.pixelColor[index + 1] = this.tempG;
        this.pixelColor[index + 2] = this.tempB;
        this.pixelColor[index + 3] = this.tempA;
        var c = this.pointColor[x][y];
        this.colorCount[c]--;
        this.colorCount[this.tempColor]++;
        this.pointColor[x][y] = this.tempColor;
    };
    /**
     * 连续绘制一行中的像素点
     * @param startX    起点X坐标
     * @param endX      终点X坐标
     * @param y         Y坐标
     */
    DrawingBoard.prototype._drawRowPixel = function (startX, endX, y) {
        var index = (y * this.width + startX) * 4;
        for (var x = startX; x <= endX; ++x) {
            if (this.pointColor[x][y] != this.tempColor) {
                this.pixelColor[index] = this.tempR;
                this.pixelColor[index + 1] = this.tempG;
                this.pixelColor[index + 2] = this.tempB;
                this.pixelColor[index + 3] = this.tempA;
                var c = this.pointColor[x][y];
                this.colorCount[c]--;
                this.colorCount[this.tempColor]++;
                this.pointColor[x][y] = this.tempColor;
            }
            index += 4;
        }
    };
    /**
     * 连续绘制一列中的像素点
     * @param startY    起点Y坐标
     * @param endY      终点Y坐标
     * @param x         X坐标
     */
    DrawingBoard.prototype._drawColPixel = function (startY, endY, x) {
        var index = (startY * this.width + x) * 4;
        for (var y = startY; y <= endY; ++y) {
            if (this.pointColor[x][y] != this.tempColor) {
                this.pixelColor[index] = this.tempR;
                this.pixelColor[index + 1] = this.tempG;
                this.pixelColor[index + 2] = this.tempB;
                this.pixelColor[index + 3] = this.tempA;
                var c = this.pointColor[x][y];
                this.colorCount[c]--;
                this.colorCount[this.tempColor]++;
                this.pointColor[x][y] = this.tempColor;
            }
            index += this.width * 4;
        }
    };
    /**
     * 将RGBA颜色分量转换为一个数值表示的颜色，颜色分量为0~255之间的值
     * @param r
     * @param g
     * @param b
     * @param a
     */
    DrawingBoard.prototype.convertToNumber = function (r, g, b, a) {
        if (a === void 0) { a = 255; }
        return ((r & 0xfe) << 23) | (g << 16) | (b << 8) | a;
    };
    /**将十六进制的颜色转换为RGBA分量表示的颜色 */
    DrawingBoard.prototype.convertToRGBA = function (color) {
        return {
            r: (color & 0xef000000) >> 23,
            g: (color & 0x00ff0000) >> 16,
            b: (color & 0x0000ff00) >> 8,
            a: (color & 0x000000ff),
        };
    };
    return DrawingBoard;
}());
exports.default = DrawingBoard;
var Vec2 = /** @class */ (function () {
    function Vec2(x, y) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        this.x = x;
        this.y = y;
    }
    Vec2.prototype.set = function (p, y) {
        if (typeof p === "number") {
            this.x = p;
            this.y = y;
        }
        else {
            this.x = p.x;
            this.y = p.y;
        }
    };
    return Vec2;
}());

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/Pool.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '284d8zxqTdJtYjT+CGS5XDE', 'Pool');
// Script/Common/Utils/Pool.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pool = void 0;
var Pool = /** @class */ (function () {
    function Pool(fn, size) {
        this._fn = fn;
        this._idx = size - 1;
        this._frees = new Array(size);
        for (var i = 0; i < size; i++) {
            this._frees[i] = fn();
        }
    }
    Object.defineProperty(Pool.prototype, "freeCount", {
        get: function () {
            return this._frees.length;
        },
        enumerable: false,
        configurable: true
    });
    Pool.prototype.alloc = function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        if (this._idx < 0) {
            this._expand(Math.round(this._frees.length * 1.2) + 1);
        }
        var obj = this._frees[this._idx];
        this._frees.splice(this._idx);
        --this._idx;
        obj.use && obj.use.apply(obj, params);
        return obj;
    };
    Pool.prototype.free = function (obj) {
        ++this._idx;
        obj.free && obj.free();
        this._frees[this._idx] = obj;
    };
    Pool.prototype.clear = function (fn) {
        for (var i = 0; i < this._idx; i++) {
            fn && fn(this._frees[i]);
        }
        this._frees.splice(0);
        this._idx = -1;
    };
    Pool.prototype._expand = function (size) {
        var old = this._frees;
        this._frees = new Array(size);
        var len = size - old.length;
        for (var i = 0; i < len; i++) {
            this._frees[i] = this._fn();
        }
        for (var i = len, j = 0; i < size; ++i, ++j) {
            this._frees[i] = old[j];
        }
        this._idx += len;
    };
    return Pool;
}());
exports.Pool = Pool;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL1Bvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUE7SUFTSSxjQUFZLEVBQVcsRUFBRSxJQUFZO1FBQ2pDLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxLQUFLLENBQUksSUFBSSxDQUFDLENBQUM7UUFFakMsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQVpELHNCQUFXLDJCQUFTO2FBQXBCO1lBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM5QixDQUFDOzs7T0FBQTtJQVlNLG9CQUFLLEdBQVo7UUFBYSxnQkFBYzthQUFkLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7WUFBZCwyQkFBYzs7UUFDdkIsSUFBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRTtZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMxRDtRQUNELElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFWixHQUFHLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLE9BQVAsR0FBRyxFQUFRLE1BQU0sQ0FBQyxDQUFDO1FBQzlCLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVNLG1CQUFJLEdBQVgsVUFBWSxHQUFNO1FBQ2QsRUFBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2IsR0FBRyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2pDLENBQUM7SUFFTSxvQkFBSyxHQUFaLFVBQWEsRUFBb0I7UUFDN0IsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDNUI7UUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFHTyxzQkFBTyxHQUFmLFVBQWdCLElBQVk7UUFDeEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTlCLElBQU0sR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQzlCLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDL0I7UUFFRCxLQUFJLElBQUksQ0FBQyxHQUFDLEdBQUcsRUFBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDM0I7UUFFRCxJQUFJLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQztJQUNyQixDQUFDO0lBQ0wsV0FBQztBQUFELENBN0RBLEFBNkRDLElBQUE7QUE3RFksb0JBQUkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElQb29sIHtcbiAgICB1c2U/KC4uLnBhcmFtczogYW55KTogYW55O1xuICAgIGZyZWU/KCk6IGFueTtcbn1cbmV4cG9ydCBjbGFzcyBQb29sPFQgZXh0ZW5kcyBJUG9vbD4ge1xuICAgIHByaXZhdGUgX2ZuOiAoKSA9PiBUO1xuICAgIHByaXZhdGUgX2lkeDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2ZyZWVzOiBUW107XG5cbiAgICBwdWJsaWMgZ2V0IGZyZWVDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZyZWVzLmxlbmd0aDtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihmbjogKCkgPT4gVCwgc2l6ZTogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX2ZuID0gZm47XG4gICAgICAgIHRoaXMuX2lkeCA9IHNpemUgLSAxO1xuICAgICAgICB0aGlzLl9mcmVlcyA9IG5ldyBBcnJheTxUPihzaXplKTtcblxuICAgICAgICBmb3IobGV0IGk9MDsgaTxzaXplOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2ZyZWVzW2ldID0gZm4oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBhbGxvYyguLi5wYXJhbXM6IGFueSk6IFQge1xuICAgICAgICBpZih0aGlzLl9pZHggPCAwKSB7XG4gICAgICAgICAgICB0aGlzLl9leHBhbmQoTWF0aC5yb3VuZCh0aGlzLl9mcmVlcy5sZW5ndGggKiAxLjIpICsgMSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb2JqID0gdGhpcy5fZnJlZXNbdGhpcy5faWR4XTtcbiAgICAgICAgdGhpcy5fZnJlZXMuc3BsaWNlKHRoaXMuX2lkeCk7XG4gICAgICAgIC0tdGhpcy5faWR4O1xuXG4gICAgICAgIG9iai51c2UgJiYgb2JqLnVzZSguLi5wYXJhbXMpO1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIHB1YmxpYyBmcmVlKG9iajogVCkge1xuICAgICAgICArKyB0aGlzLl9pZHg7XG4gICAgICAgIG9iai5mcmVlICYmIG9iai5mcmVlKCk7XG4gICAgICAgIHRoaXMuX2ZyZWVzW3RoaXMuX2lkeF0gPSBvYmo7XG4gICAgfVxuXG4gICAgcHVibGljIGNsZWFyKGZuOiAob2JqOiBUKSA9PiB2b2lkKSB7XG4gICAgICAgIGZvcihsZXQgaT0wOyBpPHRoaXMuX2lkeDsgaSsrKSB7XG4gICAgICAgICAgICBmbiAmJiBmbih0aGlzLl9mcmVlc1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZnJlZXMuc3BsaWNlKDApO1xuICAgICAgICB0aGlzLl9pZHggPSAtMTtcbiAgICB9XG5cblxuICAgIHByaXZhdGUgX2V4cGFuZChzaXplOiBudW1iZXIpIHtcbiAgICAgICAgY29uc3Qgb2xkID0gdGhpcy5fZnJlZXM7XG4gICAgICAgIHRoaXMuX2ZyZWVzID0gbmV3IEFycmF5KHNpemUpO1xuXG4gICAgICAgIGNvbnN0IGxlbiA9IHNpemUgLSBvbGQubGVuZ3RoO1xuICAgICAgICBmb3IobGV0IGk9MDsgaTxsZW47IGkrKykge1xuICAgICAgICAgICAgdGhpcy5fZnJlZXNbaV0gPSB0aGlzLl9mbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yKGxldCBpPWxlbixqPTA7IGk8c2l6ZTsgKytpLCArK2opIHtcbiAgICAgICAgICAgIHRoaXMuX2ZyZWVzW2ldID0gb2xkW2pdO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5faWR4ICs9IGxlbjtcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Light/LightUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cd1b9xWLxVAN7fJCCK/oCfF', 'LightUtils');
// Script/Common/Light/LightUtils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LightUtils = /** @class */ (function () {
    function LightUtils() {
    }
    /** 获得所有射线与多边形的交点 */
    LightUtils.getIntersections = function (light, polygons) {
        var rayStart = light;
        var rayEnds = this.getRayEnds(polygons); // 
        var intersects = [];
        for (var _i = 0, rayEnds_1 = rayEnds; _i < rayEnds_1.length; _i++) {
            var rayEnd = rayEnds_1[_i];
            // 这里需要对rayend 进行一次分散, 因为在与多边形交点判断时, 需要判断光线在交点周围的情况
            var l = this.getNormal(rayEnd.sub(rayStart));
            for (var i = -1; i <= 1; i++) {
                var tmpRayEnd = rayEnd.add(l.mul(i * 0.001));
                var intersect = this.getIntersection(polygons, rayStart, tmpRayEnd);
                if (!intersect)
                    continue;
                // 计算角度 用来对交点进行排序
                intersect.angle = Math.atan2(tmpRayEnd.y - rayStart.y, tmpRayEnd.x - rayStart.x);
                intersects.push(intersect);
            }
        }
        intersects = intersects.sort(function (a, b) {
            return a.angle - b.angle; // 升序
        });
        return intersects;
    };
    /** 求垂直向量 */
    LightUtils.getNormal = function (line) {
        var l = line.normalize();
        var tmp = l.x;
        l.x = l.y;
        l.y = -tmp;
        return l;
    };
    /** 获得射线 */
    LightUtils.getRayEnds = function (polygons) {
        var rayEnds = [];
        for (var i = 0; i < polygons.length; i++) {
            var seg = polygons[i];
            for (var j = 0; j < seg.length; j++) {
                rayEnds.push(seg[j]);
            }
        }
        return rayEnds;
    };
    /** 获得射线和多边形们最近交点, 有很大的优化空间, 比如建立一个按角度划分的四叉树, 减少遍历次数 */
    LightUtils.getIntersection = function (polygons, rayStart, rayEnd) {
        var closestIntersect = null; // 交点
        for (var i = 0; i < polygons.length; i++) {
            var seg = polygons[i];
            for (var j = 0; j < seg.length; j++) {
                var intersect = this._doGetIntersection(rayStart, rayEnd, seg[j], j === seg.length - 1 ? seg[0] : seg[j + 1]);
                if (!intersect)
                    continue;
                if (!closestIntersect || intersect.len < closestIntersect.len) {
                    closestIntersect = intersect;
                }
            }
        }
        return closestIntersect;
    };
    /** 通过角度剔除交点, 角度是逆时针方向 */
    LightUtils.getIntersectionByAngle = function (startAngle, angleRange, light, polygons) {
        var endAngle = startAngle + angleRange;
        startAngle *= 0.017453;
        endAngle *= 0.017453;
        // 本质就是以light为原点搭建坐标系
        var rayEnd1 = cc.v2(Math.cos(startAngle), Math.sin(startAngle)).add(light);
        var rayEnd2 = cc.v2(Math.cos(endAngle), Math.sin(endAngle)).add(light);
        // 算交点
        var intersect1 = this.getIntersection(polygons, light, rayEnd1);
        intersect1.angle = startAngle;
        var intersect2 = this.getIntersection(polygons, light, rayEnd2);
        intersect2.angle = endAngle;
        // 获得所有交点
        var intersects = this.getIntersections(light, polygons);
        // 剔除角度外的交点, 这里可以优化, 因为intersects是有序的, 可以使用二分法查找
        // 二分法, 已优化
        var start = this.binarySearchIntersects(intersects, startAngle, true);
        var end = this.binarySearchIntersects(intersects, endAngle, false);
        intersects = intersects.slice(start, end + 1);
        intersects.unshift({ x: light.x, y: light.y, len: 0 }, intersect1);
        intersects.push(intersect2);
        return intersects;
    };
    LightUtils.binarySearchIntersects = function (arr, angle, findFlag) {
        if (findFlag === void 0) { findFlag = false; }
        var start = 0, end = arr.length - 1;
        while (end - start > 1) {
            var idx = Math.floor((start + end) / 2);
            if (angle < arr[idx].angle) {
                end = idx;
            }
            else if (angle > arr[idx].angle) {
                start = idx;
            }
            else {
                return idx;
            }
        }
        // 没有找到对应的值
        return findFlag ? end : start;
    };
    /** 寻找射线和线段的交点 */
    LightUtils._doGetIntersection = function (ray1, ray2, seg1, seg2) {
        var r_px = ray1.x;
        var r_py = ray1.y;
        var r_dx = ray2.x - ray1.x;
        var r_dy = ray2.y - ray1.y;
        var s_px = seg1.x;
        var s_py = seg1.y;
        var s_dx = seg2.x - seg1.x;
        var s_dy = seg2.y - seg1.y;
        // 射线长度
        var r_mag = r_dx * r_dx + r_dy * r_dy;
        // 线段长度
        var s_mag = s_dx * s_dx + s_dy * s_dy;
        // 两向量方向相同, return
        if (r_dx / r_mag == s_dx / s_mag && r_dy / r_mag == s_dy / s_mag)
            return null;
        var T2 = (r_dx * (s_py - r_py) + r_dy * (r_px - s_px)) / (s_dx * r_dy - s_dy * r_dx);
        var T1 = (s_px + s_dx * T2 - r_px) / r_dx;
        // Must be within parametic whatevers for RAY/SEGMENT
        if (T1 < 0)
            return null;
        if (T2 < 0 || T2 > 1)
            return null;
        // Return the POINT OF INTERSECTION
        return {
            x: r_px + r_dx * T1,
            y: r_py + r_dy * T1,
            len: T1
        };
    };
    return LightUtils;
}());
exports.default = LightUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/PolygonUtil.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '97fd0nhC4FP37VI4oHddHl0', 'PolygonUtil');
// Script/Common/Utils/PolygonUtil.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolygonUtil = void 0;
var PolygonUtil = /** @class */ (function () {
    function PolygonUtil() {
    }
    /**
     *
     * @param l0
     * @param l1
     * @param polygon 逆时针
     * @param useDichotomy
     */
    PolygonUtil.splitPolygonByLine = function (l0, l1, polygon, useDichotomy) {
        if (useDichotomy === void 0) { useDichotomy = false; }
        var result = [];
        for (var i = polygon.length - 1; i >= 0; i--) {
            var p0 = polygon[i], p1 = i == 0 ? polygon[polygon.length - 1] : polygon[i - 1];
            var _a = this.lineCrossPoint(p0, p1, l0, l1), n = _a[0], p = _a[1];
            if (n == -1)
                continue;
            polygon.splice(i, -1, p);
            result.push(i + 1);
        }
        return result;
    };
    //求两条线段的交点
    //返回值：[n,p] n:0相交，1在共有点，-1不相交  p:交点
    PolygonUtil.lineCrossPoint = function (p1, p2, q1, q2) {
        var a = p1, b = p2, c = q1, d = q2;
        var s1, s2, s3, s4;
        var d1, d2, d3, d4;
        var p = new cc.Vec2(0, 0);
        d1 = this.dblcmp(s1 = this.ab_cross_ac(a, b, c), 0);
        d2 = this.dblcmp(s2 = this.ab_cross_ac(a, b, d), 0);
        d3 = this.dblcmp(s3 = this.ab_cross_ac(c, d, a), 0);
        d4 = this.dblcmp(s4 = this.ab_cross_ac(c, d, b), 0);
        //如果规范相交则求交点
        if ((d1 ^ d2) == -2 && (d3 ^ d4) == -2) {
            p.x = (c.x * s2 - d.x * s1) / (s2 - s1);
            p.y = (c.y * s2 - d.y * s1) / (s2 - s1);
            return [0, p];
        }
        //如果不规范相交
        if (d1 == 0 && this.point_on_line(c, a, b) <= 0) {
            p = c;
            return [1, p];
        }
        if (d2 == 0 && this.point_on_line(d, a, b) <= 0) {
            p = d;
            return [1, p];
        }
        if (d3 == 0 && this.point_on_line(a, c, d) <= 0) {
            p = a;
            return [1, p];
        }
        if (d4 == 0 && this.point_on_line(b, c, d) <= 0) {
            p = b;
            return [1, p];
        }
        //如果不相交
        return [-1, null];
    };
    //两条线段是否跨立
    //即非平行
    PolygonUtil.isLineSegmentCross = function (P1, P2, Q1, Q2) {
        if (((Q1.x - P1.x) * (Q1.y - Q2.y) - (Q1.y - P1.y) * (Q1.x - Q2.x)) * ((Q1.x - P2.x) * (Q1.y - Q2.y) - (Q1.y - P2.y) * (Q1.x - Q2.x)) < 0 ||
            ((P1.x - Q1.x) * (P1.y - P2.y) - (P1.y - Q1.y) * (P1.x - P2.x)) * ((P1.x - Q2.x) * (P1.y - P2.y) - (P1.y - Q2.y) * (P1.x - P2.x)) < 0) {
            return true;
        }
        return false;
    };
    //求a点是不是在线段上，>0不在，=0与端点重合，<0在。
    PolygonUtil.point_on_line = function (a, p1, p2) {
        return this.dblcmp(this.dot(p1.x - a.x, p1.y - a.y, p2.x - a.x, p2.y - a.y), 0);
    };
    //点发出的右射线和线段的关系
    // 返回值: -1:不相交, 0:相交, 1:点在线段上
    PolygonUtil.rayPointToLine = function (point, linePA, linePB) {
        // 定义最小和最大的X Y轴值  
        var minX = Math.min(linePA.x, linePB.x);
        var maxX = Math.max(linePA.x, linePB.x);
        var minY = Math.min(linePA.y, linePB.y);
        var maxY = Math.max(linePA.y, linePB.y);
        // 射线与边无交点的其他情况  
        if (point.y < minY || point.y > maxY || point.x > maxX) {
            return -1;
        }
        // 剩下的情况, 计算射线与边所在的直线的交点的横坐标  
        var x0 = linePA.x + ((linePB.x - linePA.x) / (linePB.y - linePA.y)) * (point.y - linePA.y);
        if (x0 > point.x) {
            return 0;
        }
        if (x0 == point.x) {
            return 1;
        }
        return -1;
    };
    //点和多边形的关系
    //返回值: -1:在多边形外部, 0:在多边形内部, 1:在多边形边线内, 2:跟多边形某个顶点重合
    PolygonUtil.relationPointToPolygon = function (point, polygon) {
        var count = 0;
        for (var i = 0; i < polygon.length; ++i) {
            if (polygon[i].equals(point)) {
                return 2;
            }
            var pa = polygon[i];
            var pb = polygon[0];
            if (i < polygon.length - 1) {
                pb = polygon[i + 1];
            }
            var re = this.rayPointToLine(point, pa, pb);
            if (re == 1) {
                return 1;
            }
            if (re == 0) {
                count++;
            }
        }
        if (count % 2 == 0) {
            return -1;
        }
        return 0;
    };
    //线段对多边形进行切割
    //返回多边形数组
    //如果没有被切割，返回空数组
    PolygonUtil.lineCutPolygon = function (pa, pb, polygon) {
        var ret = [];
        var points = [];
        var pointIndex = [];
        //将所有的点以及交点组成一个点序列
        for (var i = 0; i < polygon.length; ++i) {
            points.push(polygon[i]);
            var a = polygon[i];
            var b = polygon[0];
            if (i < polygon.length - 1)
                b = polygon[i + 1];
            var c = this.lineCrossPoint(pa, pb, a, b);
            if (c[0] == 0) {
                pointIndex.push(points.length);
                points.push(c[1]);
            }
            else if (c[0] > 0) {
                if (c[1].equals(a)) {
                    pointIndex.push(points.length - 1);
                }
                else {
                    pointIndex.push(points.length);
                }
            }
        }
        if (pointIndex.length > 1) {
            //准备从第一个交点开始拆，先弄清楚第一个交点是由外穿内，还是内穿外
            var cp0 = points[pointIndex[0]];
            var cp1 = points[pointIndex[1]];
            var r = this.relationPointToPolygon(new cc.Vec2((cp0.x + cp1.x) / 2, (cp0.y + cp1.y) / 2), polygon);
            var inPolygon = r >= 0;
            // if(pointIndex.length > 2 && cc.pDistance(cp0,cp1) > cc.pDistance(cp0,points[pointIndex[pointIndex.length-1]])) {
            if (pointIndex.length > 2 && cp0.sub(cp1).mag() > cp0.sub(points[pointIndex[pointIndex.length - 1]]).mag()) {
                cp1 = points[pointIndex[pointIndex.length - 1]];
                r = this.relationPointToPolygon(new cc.Vec2((cp0.x + cp1.x) / 2, (cp0.y + cp1.y) / 2), polygon);
                inPolygon = r < 0;
            }
            var firstInPolygon = inPolygon; //起始点是从外面穿到里面
            var index = 0;
            var startIndex = pointIndex[index];
            var oldPoints = [];
            var newPoints = [];
            var count = 0;
            oldPoints.push(points[startIndex]);
            if (inPolygon) {
                newPoints.push(points[startIndex]);
            }
            index++;
            count++;
            startIndex++;
            while (count < points.length) {
                if (startIndex == points.length)
                    startIndex = 0;
                var p = points[startIndex];
                if (index >= 0 && startIndex == pointIndex[index]) {
                    //又是一个交点
                    index++;
                    if (index >= pointIndex.length)
                        index = 0;
                    if (inPolygon) {
                        //原来是在多边形内部
                        //产生了新的多边形
                        newPoints.push(p);
                        ret.push(newPoints);
                        newPoints = [];
                    }
                    else {
                        //开始新的多边形
                        newPoints = [];
                        newPoints.push(p);
                    }
                    oldPoints.push(p);
                    inPolygon = !inPolygon;
                }
                else {
                    //普通的点
                    if (inPolygon) {
                        newPoints.push(p);
                    }
                    else {
                        oldPoints.push(p);
                    }
                }
                startIndex++;
                count++;
            }
            if (inPolygon) {
                if (!firstInPolygon && newPoints.length > 1) {
                    //如果起始点是从里面穿出去，到这里跟起始点形成闭包
                    newPoints.push(points[pointIndex[0]]);
                    ret.push(newPoints);
                }
                else {
                    //结束了，但是现在的状态是穿在多边形内部
                    //把newPoints里面的回复到主多边形中
                    for (var i = 0; i < newPoints.length; ++i) {
                        oldPoints.push(newPoints[i]);
                    }
                }
            }
            ret.push(oldPoints);
        }
        return ret;
    };
    PolygonUtil.ab_cross_ac = function (a, b, c) {
        return this.cross(b.x - a.x, b.y - a.y, c.x - a.x, c.y - a.y);
    };
    PolygonUtil.dot = function (x1, y1, x2, y2) {
        return x1 * x2 + y1 * y2;
    };
    PolygonUtil.cross = function (x1, y1, x2, y2) {
        return x1 * y2 - x2 * y1;
    };
    PolygonUtil.dblcmp = function (a, b) {
        if (Math.abs(a - b) <= 0.000001)
            return 0;
        if (a > b)
            return 1;
        else
            return -1;
    };
    return PolygonUtil;
}());
exports.PolygonUtil = PolygonUtil;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/MatchUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ce2a5iLaMdGPJK3POfEqDgZ', 'MatchUtils');
// Script/Common/Utils/MatchUtils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MathUtils = void 0;
/**
 * 数学计算工具类
 */
var MathUtils = /** @class */ (function () {
    function MathUtils() {
    }
    MathUtils.clamp = function (a, b, x) {
        if (a > b) {
            var t = a;
            a = b;
            b = t;
        }
        if (x < a)
            return a;
        if (x > b)
            return b;
        return x;
    };
    /**
     * 弧度制转换为角度值
     * @param radian 弧度制
     * @returns {number}
     */
    MathUtils.getAngle = function (radian) {
        return 180 * radian / Math.PI;
    };
    /**
     * 角度值转换为弧度制
     * @param angle
     */
    MathUtils.getRadian = function (angle) {
        return angle / 180 * Math.PI;
    };
    /**
     * 获取两点间弧度
     * @param p1X
     * @param p1Y
     * @param p2X
     * @param p2Y
     * @returns {number}
     */
    MathUtils.getRadian2 = function (p1X, p1Y, p2X, p2Y) {
        var xdis = p2X - p1X;
        var ydis = p2Y - p1Y;
        return Math.atan2(ydis, xdis);
    };
    /**
     * 获取两点间距离
     * @param p1X
     * @param p1Y
     * @param p2X
     * @param p2Y
     * @returns {number}
     */
    MathUtils.getDistance = function (p1X, p1Y, p2X, p2Y) {
        var disX = p2X - p1X;
        var disY = p2Y - p1Y;
        var disQ = disX * disX + disY * disY;
        return Math.sqrt(disQ);
    };
    MathUtils.toFixedStr = function (value, fixCount) {
        return value.toFixed(fixCount).replace(/\.?0*$/, '');
    };
    MathUtils.toPercentStr = function (value, fixCount) {
        return this.toFixedStr(value * 100, fixCount) + "%";
    };
    MathUtils.toFixedWan = function (value) {
        var wanFix = 100000;
        var wanFloat = wanFix / 10;
        var v = Math.floor(value / wanFloat) * wanFloat;
        return value > wanFix ? MathUtils.toFixedStr(v / wanFix * 10, 1) + "\u4E07" : value.toString();
    };
    //value = ceil(e*(a*(level^d) + b*(level) + c))
    MathUtils.getFinalValueBasedOnParams = function (level, paramList, needCeil) {
        if (paramList.length < 5) {
            return 0;
        }
        var ret = paramList[4] * (paramList[0] * Math.pow(level, paramList[3]) + paramList[1] * level + paramList[2]);
        if (needCeil) {
            ret = Math.ceil(ret);
        }
        return ret;
    };
    /**
    * 获取一个区间的随机数
    * @param $from 最小值
    * @param $end 最大值
    * @returns {number}
    */
    MathUtils.limit = function ($from, $end) {
        $from = Math.min($from, $end);
        $end = Math.max($from, $end);
        var range = $end - $from;
        return $from + Math.random() * range;
    };
    /**
     * 获取一个区间的随机数(帧数)
     * @param $from 最小值
     * @param $end 最大值
     * @returns {number}
     */
    MathUtils.limitInteger = function ($from, $end) {
        return Math.round(MathUtils.limit($from, $end));
    };
    /**
     * 在一个数组中随机获取一个元素
     * @param arr 数组
     * @returns {any} 随机出来的结果
     */
    MathUtils.randomArray = function (arr) {
        var index = Math.floor(Math.random() * arr.length);
        return arr[index];
    };
    return MathUtils;
}());
exports.MathUtils = MathUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/PriorityQueue.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f2318nn5GJChLoRevUhhLkg', 'PriorityQueue');
// Script/Common/Utils/PriorityQueue.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriorityElement = void 0;
/**
 * @author denglang
 * 优先队列
 */
var PriorityElement = /** @class */ (function () {
    function PriorityElement(data, priority) {
        this.data = data;
        this.priority = priority;
    }
    return PriorityElement;
}());
exports.PriorityElement = PriorityElement;
var PriorityQueue = /** @class */ (function () {
    function PriorityQueue() {
        this.queue = new Array(32);
        this._size = 0;
    }
    Object.defineProperty(PriorityQueue.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: false,
        configurable: true
    });
    /** 是否有这个元素 */
    PriorityQueue.prototype.hasElement = function (t) {
        for (var _i = 0, _a = this.queue; _i < _a.length; _i++) {
            var e = _a[_i];
            if (e.data === t) {
                return true;
            }
        }
        return false;
    };
    /** 入队 */
    PriorityQueue.prototype.enqueue = function (e, priority) {
        if (priority === void 0) { priority = 0; }
        if (this._size > this.queue.length) {
            this._expand();
        }
        this.queue[this._size++] = new PriorityElement(e, priority);
        this.upAdjust();
    };
    /** 出队 */
    PriorityQueue.prototype.dequeue = function () {
        if (this._size <= 0)
            return null;
        var head = this.queue[0];
        this.queue[0] = this.queue[--this._size];
        this.downAdjust();
        return head.data;
    };
    PriorityQueue.prototype.clear = function () {
        this.queue = [];
        this._size = 0;
    };
    /** 上调, 入队时判断入队元素优先级 */
    PriorityQueue.prototype.upAdjust = function () {
        var childIndex = this._size - 1;
        var parentIndex = Math.floor(childIndex / 2);
        var tmp = this.queue[childIndex];
        while (childIndex > 0 && tmp.priority > this.queue[parentIndex].priority) {
            this.queue[childIndex] = this.queue[parentIndex];
            childIndex = parentIndex;
            parentIndex = Math.floor(parentIndex / 2);
        }
        this.queue[childIndex] = tmp;
    };
    /** 出队 */
    PriorityQueue.prototype.downAdjust = function () {
        var parentIndex = 0;
        var tmp = this.queue[parentIndex];
        var childIndex = 1;
        while (childIndex < this._size) {
            if (childIndex + 1 < this._size && this.queue[childIndex + 1].priority > this.queue[childIndex].priority) {
                childIndex++;
            }
            if (tmp.priority >= this.queue[childIndex].priority) {
                break;
            }
            this.queue[parentIndex] = this.queue[childIndex];
            parentIndex = childIndex;
            childIndex = 2 * childIndex + 1;
        }
        this.queue[parentIndex] = tmp;
    };
    /** 扩列 */
    PriorityQueue.prototype._expand = function () {
        var newSize = Math.round(this.queue.length * 1.2) + 1;
        var oldQueue = this.queue;
        this.queue = new Array(newSize);
        for (var i = 0; i < oldQueue.length; i++) {
            this.queue[i] = oldQueue[i];
        }
    };
    PriorityQueue.prototype.toString = function () {
        var s = '';
        for (var i = 0; i < this._size; i++) {
            var data = this.queue[i].data;
            if (data.toString) {
                s += data.toString();
            }
            else {
                s += typeof data === "object" ? JSON.stringify(data) : data;
            }
        }
        return s;
    };
    return PriorityQueue;
}());
exports.default = PriorityQueue;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/TaskMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a001c6UsFtNA5aXLrNhEDJy', 'TaskMgr');
// Script/Common/Utils/TaskMgr.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Command = exports.CommandType = void 0;
var PriorityQueue_1 = require("./PriorityQueue");
/**
 * author: denglang
 * desc: 一个命令队列，
 */
var CommandType;
(function (CommandType) {
    // 自定义命令类型
})(CommandType = exports.CommandType || (exports.CommandType = {}));
var Command = /** @class */ (function () {
    function Command() {
    }
    return Command;
}());
exports.Command = Command;
/** 命令队列 */
var TaskMgr = /** @class */ (function () {
    function TaskMgr() {
        this._cmdMap = cc.js.createMap();
        this._debugHistory = [];
        this._debug = false;
    }
    Object.defineProperty(TaskMgr, "inst", {
        get: function () {
            if (!this._instance) {
                this._instance = new TaskMgr();
            }
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    TaskMgr.prototype.setDebug = function (debug) {
        if (debug === void 0) { debug = true; }
        this._debug = debug;
    };
    /**
     * @param command 命令
     * @param pIdx 优先级 数值越大优先级越高  默认是0
     */
    TaskMgr.prototype.pushCommand = function (key, command, pIdx) {
        if (pIdx === void 0) { pIdx = 0; }
        if (this._debug) {
            this._debugHistory.push(command);
        }
        var cmdQueue = this._cmdMap[key];
        if (!cmdQueue) {
            cmdQueue = this._cmdMap[key] = new PriorityQueue_1.default();
        }
        cmdQueue.enqueue(command, pIdx);
    };
    /** 获得一个命令 */
    TaskMgr.prototype.popCommand = function (key) {
        var cmdQueue = this._cmdMap[key];
        if (!cmdQueue)
            return null;
        return cmdQueue.dequeue();
    };
    /** 是否有这个命令 */
    TaskMgr.prototype.hasCommand = function (ele, key) {
        if (key) {
            var cmdQueue = this._cmdMap[key];
            return cmdQueue.hasElement(ele);
        }
        for (var key_1 in this._cmdMap) {
            if (this._cmdMap[key_1].hasElement(ele))
                return true;
        }
        return false;
    };
    TaskMgr._instance = null;
    return TaskMgr;
}());
exports.default = TaskMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL1Rhc2tNZ3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQTRDO0FBRTVDOzs7R0FHRztBQUNILElBQVksV0FFWDtBQUZELFdBQVksV0FBVztJQUNuQixVQUFVO0FBQ2QsQ0FBQyxFQUZXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBRXRCO0FBQ0Q7SUFBQTtJQUdBLENBQUM7SUFBRCxjQUFDO0FBQUQsQ0FIQSxBQUdDLElBQUE7QUFIWSwwQkFBTztBQUtwQixXQUFXO0FBQ1g7SUFBQTtRQVVZLFlBQU8sR0FBMkMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwRSxrQkFBYSxHQUFtQixFQUFFLENBQUM7UUFFbkMsV0FBTSxHQUFHLEtBQUssQ0FBQztJQXNDM0IsQ0FBQztJQWhERyxzQkFBa0IsZUFBSTthQUF0QjtZQUNJLElBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNoQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7YUFDbEM7WUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUFNTSwwQkFBUSxHQUFmLFVBQWdCLEtBQVk7UUFBWixzQkFBQSxFQUFBLFlBQVk7UUFDeEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLDZCQUFXLEdBQWxCLFVBQW1CLEdBQVcsRUFBRSxPQUFnQixFQUFFLElBQWdCO1FBQWhCLHFCQUFBLEVBQUEsUUFBZ0I7UUFDOUQsSUFBRyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1osSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDcEM7UUFDRCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLElBQUcsQ0FBQyxRQUFRLEVBQUU7WUFDVixRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLHVCQUFhLEVBQVcsQ0FBQztTQUMvRDtRQUNELFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxhQUFhO0lBQ04sNEJBQVUsR0FBakIsVUFBa0IsR0FBVztRQUN6QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLElBQUcsQ0FBQyxRQUFRO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDMUIsT0FBTyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELGNBQWM7SUFDUCw0QkFBVSxHQUFqQixVQUFrQixHQUFZLEVBQUUsR0FBWTtRQUN4QyxJQUFHLEdBQUcsRUFBRTtZQUNKLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDakMsT0FBTyxRQUFRLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsS0FBSSxJQUFJLEtBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ3pCLElBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDO2dCQUFFLE9BQU8sSUFBSSxDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQWhEYyxpQkFBUyxHQUFZLElBQUksQ0FBQztJQWlEN0MsY0FBQztDQW5ERCxBQW1EQyxJQUFBO2tCQW5Eb0IsT0FBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcmlvcml0eVF1ZXVlIGZyb20gXCIuL1ByaW9yaXR5UXVldWVcIjtcblxuLyoqXG4gKiBhdXRob3I6IGRlbmdsYW5nXG4gKiBkZXNjOiDkuIDkuKrlkb3ku6TpmJ/liJfvvIwgXG4gKi9cbmV4cG9ydCBlbnVtIENvbW1hbmRUeXBlIHtcbiAgICAvLyDoh6rlrprkuYnlkb3ku6Tnsbvlnotcbn1cbmV4cG9ydCBjbGFzcyBDb21tYW5kIHtcbiAgICB0eXBlOiBDb21tYW5kVHlwZTtcbiAgICBkYXRhOiBhbnk7XG59XG5cbi8qKiDlkb3ku6TpmJ/liJcgKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhc2tNZ3Ige1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBUYXNrTWdyID0gbnVsbDtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBpbnN0KCkge1xuICAgICAgICBpZighdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IFRhc2tNZ3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfY21kTWFwOiB7W2tleTpzdHJpbmddOiBQcmlvcml0eVF1ZXVlPENvbW1hbmQ+fSA9IGNjLmpzLmNyZWF0ZU1hcCgpOyBcbiAgICBwcml2YXRlIF9kZWJ1Z0hpc3Rvcnk6IEFycmF5PENvbW1hbmQ+ID0gW107XG5cbiAgICBwcml2YXRlIF9kZWJ1ZyA9IGZhbHNlO1xuICAgIHB1YmxpYyBzZXREZWJ1ZyhkZWJ1ZyA9IHRydWUpIHtcbiAgICAgICAgdGhpcy5fZGVidWcgPSBkZWJ1ZztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29tbWFuZCDlkb3ku6RcbiAgICAgKiBAcGFyYW0gcElkeCDkvJjlhYjnuqcg5pWw5YC86LaK5aSn5LyY5YWI57qn6LaK6auYICDpu5jorqTmmK8wXG4gICAgICovXG4gICAgcHVibGljIHB1c2hDb21tYW5kKGtleTogc3RyaW5nLCBjb21tYW5kOiBDb21tYW5kLCBwSWR4OiBudW1iZXIgPSAwKSB7XG4gICAgICAgIGlmKHRoaXMuX2RlYnVnKSB7XG4gICAgICAgICAgICB0aGlzLl9kZWJ1Z0hpc3RvcnkucHVzaChjb21tYW5kKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY21kUXVldWUgPSB0aGlzLl9jbWRNYXBba2V5XTtcbiAgICAgICAgaWYoIWNtZFF1ZXVlKSB7XG4gICAgICAgICAgICBjbWRRdWV1ZSA9IHRoaXMuX2NtZE1hcFtrZXldID0gbmV3IFByaW9yaXR5UXVldWU8Q29tbWFuZD4oKTtcbiAgICAgICAgfVxuICAgICAgICBjbWRRdWV1ZS5lbnF1ZXVlKGNvbW1hbmQsIHBJZHgpO1xuICAgIH1cblxuICAgIC8qKiDojrflvpfkuIDkuKrlkb3ku6QgKi9cbiAgICBwdWJsaWMgcG9wQ29tbWFuZChrZXk6IHN0cmluZykge1xuICAgICAgICBsZXQgY21kUXVldWUgPSB0aGlzLl9jbWRNYXBba2V5XTtcbiAgICAgICAgaWYoIWNtZFF1ZXVlKSByZXR1cm4gbnVsbDtcbiAgICAgICAgcmV0dXJuIGNtZFF1ZXVlLmRlcXVldWUoKTtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5pyJ6L+Z5Liq5ZG95LukICovXG4gICAgcHVibGljIGhhc0NvbW1hbmQoZWxlOiBDb21tYW5kLCBrZXk/OiBzdHJpbmcpIHtcbiAgICAgICAgaWYoa2V5KSB7XG4gICAgICAgICAgICBsZXQgY21kUXVldWUgPSB0aGlzLl9jbWRNYXBba2V5XTtcbiAgICAgICAgICAgIHJldHVybiBjbWRRdWV1ZS5oYXNFbGVtZW50KGVsZSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yKGxldCBrZXkgaW4gdGhpcy5fY21kTWFwKSB7XG4gICAgICAgICAgICBpZih0aGlzLl9jbWRNYXBba2V5XS5oYXNFbGVtZW50KGVsZSkpIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/Queue.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '146d9Q6AJVLm5Z5V9zs9sHL', 'Queue');
// Script/Common/Utils/Queue.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Queue = /** @class */ (function () {
    function Queue() {
        this.count = 0;
        this.lowestCount = 0;
        this.items = {};
    }
    Queue.prototype.enqueue = function (element) {
        this.items[this.count] = element;
        this.count++;
    };
    Queue.prototype.dequeue = function () {
        if (this.isEmpty()) {
            return undefined;
        }
        var result = this.items[this.lowestCount];
        delete this.items[this.lowestCount];
        this.lowestCount++;
        return result;
    };
    Queue.prototype.peek = function () {
        if (this.isEmpty()) {
            return undefined;
        }
        return this.items[this.lowestCount];
    };
    Queue.prototype.isEmpty = function () {
        return this.size() === 0;
    };
    Queue.prototype.clear = function () {
        this.items = {};
        this.count = 0;
        this.lowestCount = 0;
    };
    Queue.prototype.size = function () {
        return this.count - this.lowestCount;
    };
    Queue.prototype.toString = function () {
        if (this.isEmpty()) {
            return '';
        }
        var objString = "" + this.items[this.lowestCount];
        for (var i = this.lowestCount + 1; i < this.count; i++) {
            objString = objString + "," + this.items[i];
        }
        return objString;
    };
    return Queue;
}());
exports.default = Queue;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL1F1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFLSTtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVELHVCQUFPLEdBQVAsVUFBUSxPQUFVO1FBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQztRQUNqQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQsdUJBQU8sR0FBUDtRQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ2xCLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO1FBQ0QsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDNUMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELG9CQUFJLEdBQUo7UUFDRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNsQixPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELHVCQUFPLEdBQVA7UUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELHFCQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxvQkFBSSxHQUFKO1FBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDdkMsQ0FBQztJQUVELHdCQUFRLEdBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNsQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBQ0QsSUFBSSxTQUFTLEdBQUcsS0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUcsQ0FBQztRQUNsRCxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3RELFNBQVMsR0FBTSxTQUFTLFNBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUcsQ0FBQztTQUM3QztRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFDSCxZQUFDO0FBQUQsQ0F6REYsQUF5REcsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1ZXVlPFQ+IHtcbiAgICBwcml2YXRlIGNvdW50OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBsb3dlc3RDb3VudDogbnVtYmVyO1xuICAgIHByaXZhdGUgaXRlbXM6IGFueTtcbiAgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgIHRoaXMubG93ZXN0Q291bnQgPSAwO1xuICAgICAgdGhpcy5pdGVtcyA9IHt9O1xuICAgIH1cbiAgXG4gICAgZW5xdWV1ZShlbGVtZW50OiBUKSB7XG4gICAgICB0aGlzLml0ZW1zW3RoaXMuY291bnRdID0gZWxlbWVudDtcbiAgICAgIHRoaXMuY291bnQrKztcbiAgICB9XG4gIFxuICAgIGRlcXVldWUoKSB7XG4gICAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuaXRlbXNbdGhpcy5sb3dlc3RDb3VudF07XG4gICAgICBkZWxldGUgdGhpcy5pdGVtc1t0aGlzLmxvd2VzdENvdW50XTtcbiAgICAgIHRoaXMubG93ZXN0Q291bnQrKztcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICBcbiAgICBwZWVrKCkge1xuICAgICAgaWYgKHRoaXMuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5pdGVtc1t0aGlzLmxvd2VzdENvdW50XTtcbiAgICB9XG4gIFxuICAgIGlzRW1wdHkoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zaXplKCkgPT09IDA7XG4gICAgfVxuICBcbiAgICBjbGVhcigpIHtcbiAgICAgIHRoaXMuaXRlbXMgPSB7fTtcbiAgICAgIHRoaXMuY291bnQgPSAwO1xuICAgICAgdGhpcy5sb3dlc3RDb3VudCA9IDA7XG4gICAgfVxuICBcbiAgICBzaXplKCkge1xuICAgICAgcmV0dXJuIHRoaXMuY291bnQgLSB0aGlzLmxvd2VzdENvdW50O1xuICAgIH1cbiAgXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgICAgfVxuICAgICAgbGV0IG9ialN0cmluZyA9IGAke3RoaXMuaXRlbXNbdGhpcy5sb3dlc3RDb3VudF19YDtcbiAgICAgIGZvciAobGV0IGkgPSB0aGlzLmxvd2VzdENvdW50ICsgMTsgaSA8IHRoaXMuY291bnQ7IGkrKykge1xuICAgICAgICBvYmpTdHJpbmcgPSBgJHtvYmpTdHJpbmd9LCR7dGhpcy5pdGVtc1tpXX1gO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG9ialN0cmluZztcbiAgICB9XG4gIH0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/Dungeon.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '363928pIAdEs76ndgV1E6km', 'Dungeon');
// Script/Common/Utils/Dungeon.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dungeon = exports.GridType = void 0;
var MatchUtils_1 = require("./MatchUtils");
var GridType;
(function (GridType) {
    GridType[GridType["None"] = 0] = "None";
    GridType[GridType["Floor"] = 1] = "Floor";
    GridType[GridType["Wall"] = 2] = "Wall";
    GridType[GridType["OpenDoor"] = 3] = "OpenDoor";
    GridType[GridType["CloseDoor"] = 4] = "CloseDoor";
})(GridType = exports.GridType || (exports.GridType = {}));
var DirType;
(function (DirType) {
    DirType[DirType["None"] = 0] = "None";
    DirType[DirType["Left"] = 1] = "Left";
    DirType[DirType["Right"] = 2] = "Right";
    DirType[DirType["Up"] = 3] = "Up";
    DirType[DirType["Down"] = 4] = "Down";
    DirType[DirType["All"] = 5] = "All";
})(DirType || (DirType = {}));
var ALL_DIR_TYPES = [DirType.Left, DirType.Right, DirType.Up, DirType.Down];
var Dungeon = /** @class */ (function () {
    function Dungeon(width, height) {
        this.numRoomTries = 50; // 尝试生成房间的数量
        this.extraConnectorChance = 20; // 房间和走廊连接机会
        this.roomExtraSize = 0;
        this.windingPercent = 50;
        this.width = 51; // 地图的宽
        this.height = 51; // 地图的高
        this.rooms = []; // 房间
        this.map = []; // 原点是左下角
        this.regions = []; // 区间
        this.currentRegion = 0;
        this.width = width;
        this.height = height;
        for (var i = 0; i < width * height; i++) {
            this.map[i] = GridType.None;
            this.regions[i] = 0;
        }
    }
    Dungeon.prototype.generate = function () {
        this.initMap();
        this.addRooms();
        this.fillMaze();
        this.connectRegions();
        this.removeDeadEnds();
        return this.map;
    };
    Dungeon.prototype.initMap = function () {
        for (var i = 0; i < this.width * this.height; i++) {
            this.map[i] = GridType.Wall;
            this.regions[i] = 0;
        }
    };
    Dungeon.prototype.addRooms = function () {
        for (var i = 0; i < this.numRoomTries; i++) {
            var size = MatchUtils_1.MathUtils.limitInteger(1, 3 + this.roomExtraSize) * 2 + 1; // 是一个奇数
            var rectangularity = MatchUtils_1.MathUtils.limitInteger(0, 1 + Math.floor(size / 2)) * 2; // 控制矩形宽高比
            var w = size, h = size;
            if (0 === MatchUtils_1.MathUtils.limitInteger(0, 1))
                w += rectangularity;
            else
                h += rectangularity;
            var x = MatchUtils_1.MathUtils.limitInteger(0, Math.floor((this.width - w) / 2)) * 2 + 1;
            var y = MatchUtils_1.MathUtils.limitInteger(0, Math.floor((this.height - h) / 2)) * 2 + 1;
            var room = new cc.Rect(x, y, w, h); // 生成一个房间矩形
            // 检查矩形是否符合规则 -> 即是否有重叠
            var overlaps = false;
            for (var _i = 0, _a = this.rooms; _i < _a.length; _i++) {
                var r = _a[_i];
                if (room.intersects(r)) {
                    overlaps = true;
                    break;
                }
            }
            if (overlaps) { // 有重叠, 放弃该房间
                continue;
            }
            this.currentRegion++;
            this._initRoomGrid(room);
            this.rooms.push(room);
        }
    };
    Dungeon.prototype._initRoomGrid = function (room) {
        var tmpVec2 = cc.v2(0, 0);
        for (var i = room.x; i < room.width + room.x; i++) {
            for (var j = room.y; j < room.height + room.y; j++) {
                tmpVec2.x = i;
                tmpVec2.y = j;
                this.carveGrid(tmpVec2, GridType.Floor);
            }
        }
    };
    /** 填充迷宫 */
    Dungeon.prototype.fillMaze = function () {
        for (var y = 1; y < this.height; y += 2) {
            for (var x = 1; x < this.width; x += 2) {
                var grid = cc.v2(x, y);
                if (this.getGridType(grid) !== GridType.Wall)
                    continue;
                this._growMaze(grid);
            }
        }
    };
    Dungeon.prototype._growMaze = function (start) {
        var cells = [];
        var lastDir = DirType.None;
        this.currentRegion++;
        this.carveGrid(start, GridType.Floor);
        cells.push(start);
        while (cells !== null && cells.length !== 0) {
            var cell = cells[cells.length - 1];
            var unmadeCells = [];
            for (var _i = 0, ALL_DIR_TYPES_1 = ALL_DIR_TYPES; _i < ALL_DIR_TYPES_1.length; _i++) {
                var dir_1 = ALL_DIR_TYPES_1[_i];
                if (this.canCarve(cell, dir_1))
                    unmadeCells.push(dir_1);
            }
            if (unmadeCells.length <= 0) {
                cells.pop();
                lastDir = DirType.None;
                continue;
            }
            // 当前grid有可以扩展的方向
            var dir = DirType.None;
            if (unmadeCells.indexOf(lastDir) !== -1 && MatchUtils_1.MathUtils.limitInteger(0, 100) > this.windingPercent) {
                dir = lastDir;
            }
            else {
                dir = MatchUtils_1.MathUtils.randomArray(unmadeCells);
            }
            this.carveGrid(cell.add(this.getDirGridOffset(dir)), GridType.Floor);
            this.carveGrid(cell.add(this.getDirGridOffset(dir).mul(2)), GridType.Floor);
            cells.push(cell.add(this.getDirGridOffset(dir).mul(2)));
            lastDir = dir;
        }
    };
    Dungeon.prototype.connectRegions = function () {
        var _this = this;
        var connectorRegions = {};
        var tmpVec2 = cc.v2(0, 0);
        for (var i = 1; i < this.width - 1; i++) {
            for (var j = 1; j < this.height - 1; j++) {
                tmpVec2.x = i;
                tmpVec2.y = j;
                if (this.getGridType(tmpVec2) !== GridType.Wall)
                    continue;
                var regions = [];
                for (var _i = 0, ALL_DIR_TYPES_2 = ALL_DIR_TYPES; _i < ALL_DIR_TYPES_2.length; _i++) {
                    var dir = ALL_DIR_TYPES_2[_i];
                    var grid = tmpVec2.add(this.getDirGridOffset(dir));
                    var region = this.regions[grid.y * this.width + grid.x];
                    if (region !== 0 && regions.indexOf(region) == -1)
                        regions.push(region);
                }
                if (regions.length < 2)
                    continue;
                connectorRegions[j * this.width + i] = regions;
            }
        }
        var connectors = [];
        var keys = Object.keys(connectorRegions);
        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
            var key = keys_1[_a];
            connectors.push(this.getGridByIdx(parseInt(key)));
        }
        var merged = {};
        var openRegions = new Set();
        for (var i = 0; i <= this.currentRegion; i++) {
            merged[i] = i;
            openRegions.add(i);
        }
        var count = 0;
        var _loop_1 = function () {
            count++;
            var connector = MatchUtils_1.MathUtils.randomArray(connectors);
            this_1.addJunction(connector);
            var regions = connectorRegions[connector.y * this_1.width + connector.x].map(function (v) { return merged[v]; });
            var dest = regions[0];
            regions.shift();
            var sources = regions;
            for (var i = 0; i <= this_1.currentRegion; i++) {
                if (sources.indexOf(merged[i]) !== -1) {
                    merged[i] = dest;
                }
            }
            for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {
                var s = sources_1[_i];
                if (openRegions.has(s))
                    openRegions.delete(s);
            }
            connectors.filter(function (v) { return !_this.isRemove(merged, connectorRegions, connector, v); });
        };
        var this_1 = this;
        while (openRegions.size > 1 && count < 50) {
            _loop_1();
        }
    };
    Dungeon.prototype.addJunction = function (grid) {
        if (MatchUtils_1.MathUtils.limitInteger(0, 4)) {
            this.setGridType(grid, MatchUtils_1.MathUtils.limitInteger(0, 3) ? GridType.OpenDoor : GridType.Floor);
        }
        else {
            this.setGridType(grid, GridType.CloseDoor);
        }
    };
    Dungeon.prototype.isRemove = function (merged, connectRegions, connector, grid) {
        if (connector.sub(grid).len() < 2)
            return true;
        var regions = connectRegions[grid.y * this.width + grid.x].map(function (v) { return merged[v]; });
        var set = new Set(regions);
        if (set.size > 1)
            return false;
        // if(MathUtils.limitInteger(0, this.extraConnectorChance)) this.addJunction(grid);
        return true;
    };
    Dungeon.prototype.removeDeadEnds = function () {
        var done = false;
        var tmpVec2 = cc.v2(0, 0);
        var count = 0;
        while (!done && count < 500) {
            count++;
            done = true;
            for (var i = 1; i < this.width - 1; i++) {
                for (var j = 1; j < this.height - 1; j++) {
                    tmpVec2.x = i;
                    tmpVec2.y = j;
                    if (this.getGridType(tmpVec2) === GridType.Wall)
                        continue;
                    var exists = 0;
                    for (var _i = 0, ALL_DIR_TYPES_3 = ALL_DIR_TYPES; _i < ALL_DIR_TYPES_3.length; _i++) {
                        var dir = ALL_DIR_TYPES_3[_i];
                        var grid = tmpVec2.add(this.getDirGridOffset(dir));
                        if (this.map[grid.y * this.width + grid.x] !== GridType.Wall)
                            exists++;
                    }
                    if (exists !== 1)
                        continue;
                    done = false;
                    this.regions[j * this.height + i] = 0;
                    this.map[j * this.height + i] = GridType.Wall;
                }
            }
        }
    };
    Dungeon.prototype.instanceMap = function () {
    };
    Dungeon.prototype.getGridByIdx = function (idx) {
        var y = Math.floor(idx / this.width);
        var x = idx - y * this.width;
        return cc.v2(x, y);
    };
    /** 雕刻一个格子 */
    Dungeon.prototype.carveGrid = function (grid, type) {
        if (!this.checkGrid(grid))
            return;
        this.setGridType(grid, type);
        this.regions[grid.y * this.width + grid.x] = this.currentRegion;
    };
    Dungeon.prototype.setGridType = function (grid, type) {
        this.map[grid.y * this.width + grid.x] = type;
    };
    Dungeon.prototype.checkGrid = function (grid) {
        if (grid.x <= 0 || grid.x >= this.width - 1 || grid.y <= 0 || grid.y >= this.height - 1) {
            console.log(" set grid type error: ", grid);
            return false;
        }
        return true;
    };
    Dungeon.prototype.getGridType = function (grid) {
        return this.map[grid.y * this.width + grid.x];
    };
    Dungeon.prototype.canCarve = function (grid, dir) {
        var dirGrid = this.getDirGridOffset(dir);
        var nextGrid = grid.add(dirGrid.mul(3));
        if (nextGrid.x < 0 || nextGrid.x >= this.width || nextGrid.y < 0 || nextGrid.y >= this.height) {
            return false;
        }
        nextGrid = grid.add(dirGrid.mul(2));
        return this.getGridType(nextGrid) === GridType.Wall;
    };
    Dungeon.prototype.getDirGridOffset = function (dir) {
        var dirGrid = cc.v2(0, 0);
        switch (dir) {
            case DirType.Left:
                dirGrid.x = -1;
                break;
            case DirType.Right:
                dirGrid.x = 1;
                break;
            case DirType.Up:
                dirGrid.y = 1;
                break;
            case DirType.Down:
                dirGrid.y = -1;
                break;
        }
        return dirGrid;
    };
    return Dungeon;
}());
exports.Dungeon = Dungeon;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Logic/Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '30ba5eNytVM3pckqs/AGbqm', 'Game');
// Script/Logic/Game.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Game = void 0;
var ConfigMgr_1 = require("./Manager/ConfigMgr");
var PlayerMgr_1 = require("./Manager/PlayerMgr");
/**
 * 掌管逻辑层
 */
var Game = /** @class */ (function () {
    function Game() {
        this.inited = false;
        this.configMgr = null;
        this.playerMgr = null;
    }
    Game.prototype.init = function (uiRoot) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // 初始化Manager, 例如new ConfigMgr();
                        this.configMgr = new ConfigMgr_1.default(this);
                        this.playerMgr = new PlayerMgr_1.default(this);
                        // 初始化平台sdk
                        // todo...
                        // 加载配置
                        return [4 /*yield*/, this.configMgr.loadConfigs()];
                    case 1:
                        // 初始化平台sdk
                        // todo...
                        // 加载配置
                        _a.sent();
                        // 
                        this.inited = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    Game.prototype.onGameShow = function () {
    };
    Game.prototype.onGameHide = function () {
    };
    /**
     * 逻辑层的时间更新控制
     * @param dt
     */
    Game.prototype.update = function (dt) {
        if (!this.inited)
            return;
        // 例如Task.update(dt); 更新任务进度
    };
    return Game;
}());
exports.Game = Game;
var GameMgr = new Game();
exports.default = GameMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTG9naWMvR2FtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpREFBNEM7QUFDNUMsaURBQTRDO0FBRTVDOztHQUVHO0FBQ0g7SUFBQTtRQUVXLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixjQUFTLEdBQWMsSUFBSSxDQUFDO1FBQzVCLGNBQVMsR0FBYyxJQUFJLENBQUM7SUE2QnZDLENBQUM7SUE1QmdCLG1CQUFJLEdBQWpCLFVBQWtCLE1BQWU7Ozs7O3dCQUM3QixpQ0FBaUM7d0JBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxtQkFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNyQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksbUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDckMsV0FBVzt3QkFDWCxVQUFVO3dCQUNWLE9BQU87d0JBQ1AscUJBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBQTs7d0JBSGxDLFdBQVc7d0JBQ1gsVUFBVTt3QkFDVixPQUFPO3dCQUNQLFNBQWtDLENBQUM7d0JBRW5DLEdBQUc7d0JBQ0gsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7Ozs7O0tBQ3RCO0lBRUQseUJBQVUsR0FBVjtJQUVBLENBQUM7SUFDRCx5QkFBVSxHQUFWO0lBRUEsQ0FBQztJQUVEOzs7T0FHRztJQUNJLHFCQUFNLEdBQWIsVUFBYyxFQUFVO1FBQ3BCLElBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUFFLE9BQVE7UUFDekIsNEJBQTRCO0lBQ2hDLENBQUM7SUFDTCxXQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsSUFBQTtBQWpDWSxvQkFBSTtBQWtDakIsSUFBSSxPQUFPLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUN6QixrQkFBZSxPQUFPLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uZmlnTWdyIGZyb20gXCIuL01hbmFnZXIvQ29uZmlnTWdyXCI7XG5pbXBvcnQgUGxheWVyTWdyIGZyb20gXCIuL01hbmFnZXIvUGxheWVyTWdyXCI7XG5cbi8qKlxuICog5o6M566h6YC76L6R5bGCXG4gKi9cbmV4cG9ydCBjbGFzcyBHYW1lIHtcblxuICAgIHB1YmxpYyBpbml0ZWQgPSBmYWxzZTtcbiAgICBwdWJsaWMgY29uZmlnTWdyOiBDb25maWdNZ3IgPSBudWxsO1xuICAgIHB1YmxpYyBwbGF5ZXJNZ3I6IFBsYXllck1nciA9IG51bGw7XG4gICAgcHVibGljIGFzeW5jIGluaXQodWlSb290OiBjYy5Ob2RlKSB7XG4gICAgICAgIC8vIOWIneWni+WMlk1hbmFnZXIsIOS+i+Wmgm5ldyBDb25maWdNZ3IoKTtcbiAgICAgICAgdGhpcy5jb25maWdNZ3IgPSBuZXcgQ29uZmlnTWdyKHRoaXMpO1xuICAgICAgICB0aGlzLnBsYXllck1nciA9IG5ldyBQbGF5ZXJNZ3IodGhpcyk7XG4gICAgICAgIC8vIOWIneWni+WMluW5s+WPsHNka1xuICAgICAgICAvLyB0b2RvLi4uXG4gICAgICAgIC8vIOWKoOi9vemFjee9rlxuICAgICAgICBhd2FpdCB0aGlzLmNvbmZpZ01nci5sb2FkQ29uZmlncygpO1xuXG4gICAgICAgIC8vIFxuICAgICAgICB0aGlzLmluaXRlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgb25HYW1lU2hvdygpIHtcblxuICAgIH1cbiAgICBvbkdhbWVIaWRlKCkge1xuICAgICAgICBcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDpgLvovpHlsYLnmoTml7bpl7Tmm7TmlrDmjqfliLZcbiAgICAgKiBAcGFyYW0gZHQgXG4gICAgICovXG4gICAgcHVibGljIHVwZGF0ZShkdDogbnVtYmVyKSB7XG4gICAgICAgIGlmKCF0aGlzLmluaXRlZCkgcmV0dXJuIDtcbiAgICAgICAgLy8g5L6L5aaCVGFzay51cGRhdGUoZHQpOyDmm7TmlrDku7vliqHov5vluqZcbiAgICB9XG59XG5sZXQgR2FtZU1nciA9IG5ldyBHYW1lKCk7XG5leHBvcnQgZGVmYXVsdCBHYW1lTWdyOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/BigNumUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c4b72NccXhGKofOUM3hVrvP', 'BigNumUtils');
// Script/Common/Utils/BigNumUtils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RountType = void 0;
var RountType;
(function (RountType) {
    RountType[RountType["Round"] = 0] = "Round";
    RountType[RountType["Floor"] = 1] = "Floor";
    RountType[RountType["Ceil"] = 2] = "Ceil";
})(RountType = exports.RountType || (exports.RountType = {}));
var BigNumUtils = /** @class */ (function () {
    function BigNumUtils() {
    }
    BigNumUtils.BNPlus = function () {
        var args = [];
        for (var _a = 0; _a < arguments.length; _a++) {
            args[_a] = arguments[_a];
        }
        var value = [0, 0];
        for (var _i = 0; _i < args.length; _i++) {
            var arg = args[_i];
            var base, zeroes;
            var num = +arg;
            if (num === 0 || (num && num !== Infinity)) {
                zeroes = arg < 10 ? 0 : Math.floor(Math.log10(+arg) + 1e-6);
                base = arg < 10 ? arg : arg / Math.pow(10, zeroes);
            }
            else {
                if (arg) {
                    arg = arg.split("e");
                    base = +arg[0] || 0;
                    zeroes = +arg[1] || 0;
                }
                else {
                    base = 0;
                    zeroes = 0;
                }
            }
            if (zeroes > value[1]) {
                value[0] /= Math.pow(10, zeroes - value[1]);
                value[0] += base;
                value[1] = zeroes;
            }
            else {
                value[0] += base / Math.pow(10, value[1] - zeroes);
            }
        }
        var sign = value[0] >= 0 ? 1 : -1;
        var rbase = Math.abs(value[0]);
        while (rbase < 1 && value[1] > 0) {
            rbase *= 10;
            value[1] -= 1;
        }
        while (rbase > 10) {
            rbase /= 10;
            value[1] += 1;
        }
        rbase *= sign;
        return rbase + "e" + value[1];
    };
    BigNumUtils.BNMinus = function () {
        var args = [];
        for (var _a = 0; _a < arguments.length; _a++) {
            args[_a] = arguments[_a];
        }
        var value = [0, 0];
        for (var _i = 0; _i < args.length; _i++) {
            var arg = args[_i];
            var idx = _i;
            var base, zeroes;
            var num = +arg;
            if (num === 0 || (num && num !== Infinity)) {
                zeroes = arg < 10 ? 0 : Math.floor(Math.log10(+arg) + 1e-6);
                base = arg < 10 ? arg : arg / Math.pow(10, zeroes);
            }
            else {
                arg = arg.split("e");
                base = +arg[0];
                zeroes = +arg[1];
            }
            if (!idx) {
                value[0] = base;
                value[1] = zeroes;
            }
            else {
                if (value[1] < zeroes) {
                    value[0] = value[0] / Math.pow(10, zeroes - value[1]) - base;
                    value[1] = zeroes;
                }
                else {
                    value[0] -= base / Math.pow(10, value[1] - zeroes);
                }
            }
        }
        // if(value[0] <= 1e-10){
        //   return 0;
        // }
        var sign = value[0] >= 0 ? 1 : -1;
        var rbase = Math.abs(value[0]);
        while (rbase < 1 && value[1] > 0) {
            rbase *= 10;
            value[1] -= 1;
        }
        while (rbase > 10) {
            rbase /= 10;
            value[1] += 1;
        }
        rbase *= sign;
        return rbase + "e" + value[1];
    };
    BigNumUtils.BNTimes = function () {
        var args = [];
        for (var _a = 0; _a < arguments.length; _a++) {
            args[_a] = arguments[_a];
        }
        var value = [0, 0];
        args.forEach(function (arg, idx) {
            var base, zeroes;
            var num = +arg;
            if (num === 0 || (num && num !== Infinity)) {
                zeroes = arg < 10 ? 0 : Math.floor(Math.log10(+arg) + 1e-6);
                base = arg < 10 ? arg : arg / Math.pow(10, zeroes);
            }
            else {
                if (arg) {
                    arg = arg.split("e");
                    base = +arg[0] || 0;
                    zeroes = +arg[1] || 0;
                }
                else {
                    base = 1;
                    zeroes = 0;
                }
            }
            if (!idx) {
                value[0] = base;
                value[1] = zeroes;
            }
            else {
                value[0] *= base;
                value[1] += zeroes;
                if (value[0] > 1e300) {
                    value[0] /= 1e300;
                    value[1] += 300;
                }
            }
        });
        var sign = value[0] >= 0 ? 1 : -1;
        var base = Math.abs(value[0]);
        while (base < 1 && value[1] > 0) {
            base *= 10;
            value[1] -= 1;
        }
        while (base > 10) {
            base /= 10;
            value[1] += 1;
        }
        return base * sign + "e" + value[1];
    };
    BigNumUtils.BNDevide = function (value0, value1) {
        if (+value1 === 0) {
            return 0;
        }
        var value = [0, 0];
        var sign = 1;
        [value0, value1].forEach(function (arg, idx) {
            var base, zeroes;
            var realNum = +arg;
            var num = Math.abs(realNum);
            if (num === 0 || (num && num !== Infinity)) {
                zeroes = num < 10 ? 0 : Math.floor(Math.log10(num) + 1e-6);
                base = num < 10 ? num : num / Math.pow(10, zeroes);
            }
            else {
                arg = arg.split("e");
                realNum = +arg[0];
                base = Math.abs(realNum);
                zeroes = +arg[1];
            }
            sign *= realNum >= 0 ? 1 : -1;
            if (idx === 0) {
                value[0] = base;
                value[1] = zeroes;
            }
            else {
                value[0] /= base;
                value[1] -= zeroes;
            }
        });
        var base = Math.abs(value[0]);
        while (base < 1 && value[1] > 0) {
            base *= 10;
            value[1] -= 1;
        }
        while (base > 10) {
            base /= 10;
            value[1] += 1;
        }
        base *= sign;
        if (value[1] < 100) {
            return base * Math.pow(10, value[1]);
        }
        return this.BNTimes(base, this.BNPow(10, value[1]));
    };
    BigNumUtils.BNCompare = function (value0, value1) {
        var bases = [0, 0];
        var zeroes = [0, 0];
        [value0, value1].forEach(function (arg, idx) {
            var num = +arg;
            if (num === 0 || (num && num !== Infinity)) {
                zeroes[idx] = arg < 10 ? 0 : Math.floor(Math.log10(+arg) + 1e-6);
                bases[idx] = arg < 10 ? arg : arg / Math.pow(10, zeroes[idx]);
            }
            else {
                arg = arg.split("e");
                bases[idx] = +arg[0];
                zeroes[idx] = +arg[1];
            }
        });
        return bases[0] * bases[1] < 0 ? (bases[0] > 0 ? 1 : -1) : zeroes[1] > zeroes[0] ? -1 : zeroes[1] < zeroes[0] ? 1 : bases[1] > bases[0] ? -1 : bases[1] < bases[0] ? 1 : 0;
    };
    BigNumUtils.BNPow = function (di, zhi) {
        if (!di) {
            return "0";
        }
        if (!zhi) {
            return "1";
        }
        var max = Math.floor(Math.log(1e300) / Math.log(di));
        max = Math.max(max, 1);
        var val = 1;
        if (max >= zhi) {
            val = Math.pow(di, zhi);
        }
        else {
            var times = Math.floor(zhi / max);
            var arr = [];
            var mid = Math.pow(di, max);
            for (var i = 0; i < times; i++) {
                arr.push(mid);
            }
            arr.push(Math.pow(di, zhi - max * times));
            val = this.BNTimes.apply(this, arr);
        }
        return val;
    };
    BigNumUtils.BNMax = function (value0, value1) {
        return this.BNCompare(value0, value1) > 0 ? value0 : value1;
    };
    BigNumUtils.BNMin = function (value0, value1) {
        return this.BNCompare(value0, value1) > 0 ? value1 : value0;
    };
    BigNumUtils.BNLog = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            var sign = num >= 0 ? 1 : -1;
            num = Math.abs(num);
            return sign * Math.log10(num);
        }
        else {
            return +value.split("e")[1];
        }
    };
    BigNumUtils.BNSqrt = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return Math.sqrt(num);
        }
        var arr = value.split("e");
        var a = +arr[0];
        var b = +arr[1];
        return Math.sqrt(a) + "e" + b / 2;
    };
    BigNumUtils.BNSqrtEx = function (value, zhi) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return Math.pow(num, 1 / zhi);
        }
        var arr = value.split("e");
        var a = +arr[0];
        var b = +arr[1];
        return Math.pow(a, 1 / zhi) + "e" + b / zhi;
    };
    BigNumUtils.BNFloor = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return Math.floor(num);
        }
        return value;
    };
    BigNumUtils.BNCeil = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return Math.ceil(num);
        }
        return value;
    };
    BigNumUtils.BNRound = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return Math.round(num);
        }
        return value;
    };
    BigNumUtils.BN2Number = function (value) {
        var num = +value;
        if (num === 0 || (num && num !== Infinity)) {
            return num;
        }
        else {
            var arr = value.split("e");
            return +arr[0] * Math.pow(10, arr[1]);
        }
    };
    BigNumUtils.getOwnString = function (n) {
        return this.getNumberString(n, undefined, undefined, RountType.Floor);
    };
    BigNumUtils.getCostString = function (n) {
        return this.getNumberString(n, undefined, undefined, RountType.Ceil);
    };
    BigNumUtils.getNumberString = function (n, fixed, bigFixed, roundType) {
        if (fixed === void 0) { fixed = 0; }
        if (roundType === void 0) { roundType = RountType.Round; }
        var _base;
        var tailIdx;
        var num = +n;
        if (num === 0 || (num && num !== Infinity)) {
            if (n < 1000) {
                return this.roundNum(n, roundType, fixed);
            }
            var base = "" + Math.round(n);
            var digit = 0;
            if (~base.indexOf("e")) {
                //fix bug Math.log10(9.999999999999996e+38)=39
                var dishu = +base.split("e")[0];
                var zhishu = +base.split("e")[1];
                zhishu += Math.floor(Math.log10(dishu));
                digit = zhishu;
            }
            else {
                digit = Math.floor(Math.log10(n));
            }
            if (~base.indexOf("e")) {
                _base = +base.split("e")[0] * Math.pow(10, digit % 3);
            }
            else {
                _base = +base.slice(0, digit % 3 + 4) / 1000;
            }
            tailIdx = digit / 3 >> 0;
        }
        else {
            n = n.split("e");
            if (+n[1] < 3) {
                var v = n[0] * Math.pow(10, n[1]);
                return this.roundNum(v, roundType, fixed);
            }
            _base = n[0] * Math.pow(10, n[1] % 3);
            while (_base > 1000) {
                _base /= 1000;
                n[1] = +n[1] + 3;
            }
            tailIdx = n[1] / 3 >> 0;
        }
        var tail;
        if (tailIdx < 4) {
            tail = ["", "K", "M", "B"][tailIdx];
        }
        else {
            var first = (tailIdx - 4) / 26 >> 0;
            var grade = first / 26 >> 0;
            var second = (tailIdx - 4) % 26;
            var a = "abcdefghijklmnopqrstuvwxyz";
            var b = a.toUpperCase();
            tail = (grade < 2 ? a : b)[first % 26] + (grade % 2 ? b : a)[second];
        }
        if (bigFixed === undefined) {
            bigFixed = _base < 10 ? 2 : _base < 100 ? 1 : 0;
        }
        var baseStr = this.roundNum(_base, roundType, bigFixed);
        return baseStr + tail;
    };
    BigNumUtils.roundNum = function (n, type, fixed) {
        var func;
        if (type === RountType.Round) {
            func = Math.round;
        }
        else if (type === RountType.Ceil) {
            func = Math.ceil;
        }
        else {
            func = Math.floor;
        }
        var val;
        if (fixed === 0) {
            val = func(n);
        }
        else {
            var b = Math.pow(10, fixed);
            val = func(b * n) / b;
        }
        return val.toFixed(fixed);
    };
    BigNumUtils.getFixNumber = function (num, fixed) {
        if (fixed === void 0) { fixed = 1; }
        var b = Math.pow(10, fixed);
        return Math.floor(num * b) / b;
    };
    BigNumUtils.getPercentString = function (num, fixed) {
        if (fixed === void 0) { fixed = 1; }
        if (typeof num === 'string') {
            return this.getNumberString(this.BNTimes(num, 100), fixed) + '%';
        }
        else {
            return this.getNumberString(num * 100, fixed) + '%';
        }
    };
    return BigNumUtils;
}());
exports.default = BigNumUtils;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Logic/Manager/PlayerMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bea7406655LzLidqx+dJrtq', 'PlayerMgr');
// Script/Logic/Manager/PlayerMgr.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BaseMgr_1 = require("./BaseMgr");
var PlayerMgr = /** @class */ (function (_super) {
    __extends(PlayerMgr, _super);
    function PlayerMgr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PlayerMgr.prototype.onConfigChange = function () {
    };
    return PlayerMgr;
}(BaseMgr_1.BaseMgr));
exports.default = PlayerMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTG9naWMvTWFuYWdlci9QbGF5ZXJNZ3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEscUNBQW9DO0FBRXBDO0lBQXVDLDZCQUFPO0lBQTlDOztJQUtBLENBQUM7SUFIVSxrQ0FBYyxHQUFyQjtJQUVBLENBQUM7SUFDTCxnQkFBQztBQUFELENBTEEsQUFLQyxDQUxzQyxpQkFBTyxHQUs3QyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VNZ3IgfSBmcm9tIFwiLi9CYXNlTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllck1nciBleHRlbmRzIEJhc2VNZ3Ige1xuXG4gICAgcHVibGljIG9uQ29uZmlnQ2hhbmdlKCkge1xuICAgICAgICBcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/CocosHelper.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7d011DLhkxFPakrCRw6PZqk', 'CocosHelper');
// Script/UIFrame/CocosHelper.ts

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadProgress = void 0;
var LoadProgress = /** @class */ (function () {
    function LoadProgress() {
    }
    return LoadProgress;
}());
exports.LoadProgress = LoadProgress;
/** 一些cocos api 的封装, promise函数统一加上sync后缀 */
var CocosHelper = /** @class */ (function () {
    function CocosHelper() {
    }
    CocosHelper.callInNextTick = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        setTimeout(function () {
                            resolve(true);
                        }, 0);
                    })];
            });
        });
    };
    /**
     *
     * @param target
     * @param repeat -1，表示永久执行
     * @param tweens
     */
    CocosHelper.runRepeatTweenSync = function (target, repeat) {
        var tweens = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            tweens[_i - 2] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var selfTween = cc.tween(target);
                        for (var _i = 0, tweens_1 = tweens; _i < tweens_1.length; _i++) {
                            var tmpTween = tweens_1[_i];
                            selfTween = selfTween.then(tmpTween);
                        }
                        if (repeat < 0) {
                            cc.tween(target).repeatForever(selfTween).start();
                        }
                        else {
                            cc.tween(target).repeat(repeat, selfTween).call(function () {
                                resolve(true);
                            }).start();
                        }
                    })];
            });
        });
    };
    /** 同步的tween */
    CocosHelper.runTweenSync = function (target) {
        var tweens = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            tweens[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var selfTween = cc.tween(target);
                        for (var _i = 0, tweens_2 = tweens; _i < tweens_2.length; _i++) {
                            var tmpTween = tweens_2[_i];
                            selfTween = selfTween.then(tmpTween);
                        }
                        selfTween.call(function () {
                            resolve();
                        }).start();
                    })];
            });
        });
    };
    /** 停止tween */
    CocosHelper.prototype.stopTween = function (target) {
        cc.Tween.stopAllByTarget(target);
    };
    CocosHelper.prototype.stopTweenByTag = function (tag) {
        cc.Tween.stopAllByTag(tag);
    };
    /** 同步的动作, 在2.4.x action已经被废弃了, 不建议使用 */
    CocosHelper.runActionSync = function (node) {
        var actions = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            actions[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!actions || actions.length <= 0)
                    return [2 /*return*/];
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        actions.push(cc.callFunc(function () {
                            resolve(true);
                        }));
                        node.runAction(cc.sequence(actions));
                    })];
            });
        });
    };
    /** 同步的动画 */
    CocosHelper.runAnimSync = function (node, animName) {
        return __awaiter(this, void 0, void 0, function () {
            var anim, clip, clips, i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        anim = node.getComponent(cc.Animation);
                        if (!anim)
                            return [2 /*return*/];
                        clip = null;
                        if (!animName)
                            clip = anim.defaultClip;
                        else {
                            clips = anim.getClips();
                            if (typeof (animName) === "number") {
                                clip = clips[animName];
                            }
                            else if (typeof (animName) === "string") {
                                for (i = 0; i < clips.length; i++) {
                                    if (clips[i].name === animName) {
                                        clip = clips[i];
                                        break;
                                    }
                                }
                            }
                        }
                        if (!clip)
                            return [2 /*return*/];
                        return [4 /*yield*/, CocosHelper.sleepSync(clip.duration)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 加载资源异常时抛出错误 */
    CocosHelper.loadResThrowErrorSync = function (url, type, onProgress) {
        return null;
    };
    CocosHelper.loadRes = function (url, type, callback) {
        var _this = this;
        if (this._loadingMap[url]) {
            this._loadingMap[url].push(callback);
            return;
        }
        this._loadingMap[url] = [callback];
        this.loadResSync(url, type).then(function (data) {
            var arr = _this._loadingMap[url];
            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                var func = arr_1[_i];
                func(data);
            }
            _this._loadingMap[url] = null;
            delete _this._loadingMap[url];
        });
    };
    /** 加载资源 */
    CocosHelper.loadResSync = function (url, type, onProgress) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (!onProgress)
                onProgress = _this._onProgress;
            cc.resources.load(url, type, onProgress, function (err, asset) {
                if (err) {
                    cc.error(url + " [\u8D44\u6E90\u52A0\u8F7D] \u9519\u8BEF " + err);
                    resolve(null);
                }
                else {
                    resolve(asset);
                }
            });
        });
    };
    /**
     * 加载进度
     * cb方法 其实目的是可以将loader方法的progress
     */
    CocosHelper._onProgress = function (completedCount, totalCount, item) {
        CocosHelper.loadProgress.completedCount = completedCount;
        CocosHelper.loadProgress.totalCount = totalCount;
        CocosHelper.loadProgress.item = item;
        CocosHelper.loadProgress.cb && CocosHelper.loadProgress.cb(completedCount, totalCount, item);
    };
    /**
     * 寻找子节点
     */
    CocosHelper.findChildInNode = function (nodeName, rootNode) {
        if (rootNode.name == nodeName) {
            return rootNode;
        }
        for (var i = 0; i < rootNode.childrenCount; i++) {
            var node = this.findChildInNode(nodeName, rootNode.children[i]);
            if (node) {
                return node;
            }
        }
        return null;
    };
    /** 获得Component的类名 */
    CocosHelper.getComponentName = function (com) {
        var arr = com.name.match(/<.*>$/);
        if (arr && arr.length > 0) {
            return arr[0].slice(1, -1);
        }
        return com.name;
    };
    /** 加载bundle */
    CocosHelper.loadBundleSync = function (url, options) {
        return new Promise(function (resolve, reject) {
            cc.assetManager.loadBundle(url, options, function (err, bundle) {
                if (!err) {
                    cc.error("\u52A0\u8F7Dbundle\u5931\u8D25, url: " + url + ", err:" + err);
                    resolve(null);
                }
                else {
                    resolve(bundle);
                }
            });
        });
    };
    /** 路径是相对分包文件夹路径的相对路径 */
    CocosHelper.loadAssetFromBundleSync = function (bundleName, url) {
        var bundle = cc.assetManager.getBundle(bundleName);
        if (!bundle) {
            cc.error("\u52A0\u8F7Dbundle\u4E2D\u7684\u8D44\u6E90\u5931\u8D25, \u672A\u627E\u5230bundle, bundleUrl:" + bundleName);
            return null;
        }
        return new Promise(function (resolve, reject) {
            bundle.load(url, function (err, asset) {
                if (err) {
                    cc.error("\u52A0\u8F7Dbundle\u4E2D\u7684\u8D44\u6E90\u5931\u8D25, \u672A\u627E\u5230asset, url:" + url + ", err:" + err);
                    resolve(null);
                }
                else {
                    resolve(asset);
                }
            });
        });
    };
    /** 通过路径加载资源, 如果这个资源在bundle内, 会先加载bundle, 在解开bundle获得对应的资源 */
    CocosHelper.loadAssetSync = function (url) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            cc.resources.load(url, function (err, assets) {
                if (!err) {
                    cc.error("\u52A0\u8F7Dasset\u5931\u8D25, url:" + url + ", err: " + err);
                    resolve(null);
                }
                else {
                    _this.addRef(assets);
                    resolve(assets);
                }
            });
        });
    };
    /** 释放资源 */
    CocosHelper.releaseAsset = function (assets) {
        this.decRes(assets);
    };
    /** 增加引用计数 */
    CocosHelper.addRef = function (assets) {
        if (assets instanceof Array) {
            for (var _i = 0, assets_1 = assets; _i < assets_1.length; _i++) {
                var a = assets_1[_i];
                a.addRef();
            }
        }
        else {
            assets.addRef();
        }
    };
    /** 减少引用计数, 当引用计数减少到0时,会自动销毁 */
    CocosHelper.decRes = function (assets) {
        if (assets instanceof Array) {
            for (var _i = 0, assets_2 = assets; _i < assets_2.length; _i++) {
                var a = assets_2[_i];
                a.decRef();
            }
        }
        else {
            assets.decRef();
        }
    };
    /** 截图 */
    CocosHelper.captureScreen = function (camera, prop) {
        var newTexture = new cc.RenderTexture();
        var oldTexture = camera.targetTexture;
        var rect = cc.rect(0, 0, cc.visibleRect.width, cc.visibleRect.height);
        if (prop) {
            if (prop instanceof cc.Node) {
                rect = prop.getBoundingBoxToWorld();
            }
            else {
                rect = prop;
            }
        }
        newTexture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.game._renderContext.STENCIL_INDEX8);
        camera.targetTexture = newTexture;
        camera.render();
        camera.targetTexture = oldTexture;
        var buffer = new ArrayBuffer(rect.width * rect.height * 4);
        var data = new Uint8Array(buffer);
        newTexture.readPixels(data, rect.x, rect.y, rect.width, rect.height);
        return data;
    };
    /** 加载进度 */
    CocosHelper.loadProgress = new LoadProgress();
    /** 等待时间, 秒为单位 */
    CocosHelper.sleepSync = function (dur) {
        return new Promise(function (resolve, reject) {
            cc.Canvas.instance.scheduleOnce(function () {
                resolve(true);
            }, dur);
        });
    };
    CocosHelper._loadingMap = {};
    return CocosHelper;
}());
exports.default = CocosHelper;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/PropBind.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2f9f8Tv5WdH8a3E1C7Bm4Ro', 'PropBind');
// Script/Common/Utils/PropBind.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** binder  通过重写 prop的get, set方法, 达到监听变量修改的要求 */
var PropBind = /** @class */ (function () {
    function PropBind() {
    }
    PropBind.prototype.bind = function (name, callback) {
        // to do
        // ...
    };
    return PropBind;
}());
exports.default = PropBind;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL1Byb3BCaW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQWdEO0FBQ2hEO0lBQUE7SUFLQSxDQUFDO0lBSkcsdUJBQUksR0FBSixVQUFLLElBQVksRUFBRSxRQUFrQjtRQUNqQyxRQUFRO1FBQ1IsTUFBTTtJQUNWLENBQUM7SUFDTCxlQUFDO0FBQUQsQ0FMQSxBQUtDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiogYmluZGVyICDpgJrov4fph43lhpkgcHJvcOeahGdldCwgc2V05pa55rOVLCDovr7liLDnm5HlkKzlj5jph4/kv67mlLnnmoTopoHmsYIgKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb3BCaW5kIHtcbiAgICBiaW5kKG5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XG4gICAgICAgIC8vIHRvIGRvXG4gICAgICAgIC8vIC4uLlxuICAgIH1cbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/PriorityStack.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9ed15uYIzxGna5Bj3+zkuo8', 'PriorityStack');
// Script/Common/Utils/PriorityStack.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PriorityQueue_1 = require("./PriorityQueue");
/** 带优先级的栈 */
var PriorityStack = /** @class */ (function () {
    function PriorityStack() {
        this.stack = new Array();
        this._size = 0;
    }
    Object.defineProperty(PriorityStack.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: false,
        configurable: true
    });
    PriorityStack.prototype.clear = function () {
        this.stack.length = 0;
        this._size = 0;
        return true;
    };
    PriorityStack.prototype.getTopEPriority = function () {
        if (this.stack.length <= 0)
            return -1;
        return this.stack[this.stack.length - 1].priority;
    };
    PriorityStack.prototype.getTopElement = function () {
        if (this.stack.length <= 0)
            return null;
        return this.stack[this.stack.length - 1].data;
    };
    PriorityStack.prototype.getElements = function () {
        var elements = [];
        for (var _i = 0, _a = this.stack; _i < _a.length; _i++) {
            var e = _a[_i];
            elements.push(e.data);
        }
        return elements;
    };
    PriorityStack.prototype.push = function (e, priority) {
        if (priority === void 0) { priority = 0; }
        this.stack.push(new PriorityQueue_1.PriorityElement(e, priority));
        this._size++;
        this._adjust();
    };
    PriorityStack.prototype.pop = function () {
        if (this.stack.length <= 0)
            return null;
        this._size--;
        return this.stack.pop().data;
    };
    PriorityStack.prototype._adjust = function () {
        for (var i = this.stack.length - 1; i > 0; i--) {
            if (this.stack[i] < this.stack[i - 1]) {
                this._swap(i, i - 1);
            }
        }
    };
    PriorityStack.prototype._swap = function (a, b) {
        var tmp = this.stack[a];
        this.stack[a] = this.stack[b];
        this.stack[b] = tmp;
    };
    /** 是否有这个元素 */
    PriorityStack.prototype.hasElement = function (t) {
        for (var _i = 0, _a = this.stack; _i < _a.length; _i++) {
            var e = _a[_i];
            if (e.data === t) {
                return true;
            }
        }
        return false;
    };
    PriorityStack.prototype.remove = function (t) {
        for (var i = this.stack.length - 1; i >= 0; i--) {
            if (this.stack[i].data === t) {
                this.stack.splice(i, 1);
                this._size--;
                return true;
            }
        }
        return false;
    };
    return PriorityStack;
}());
exports.default = PriorityStack;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29tbW9uL1V0aWxzL1ByaW9yaXR5U3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpREFBa0Q7QUFFbEQsYUFBYTtBQUNiO0lBQUE7UUFDWSxVQUFLLEdBQThCLElBQUksS0FBSyxFQUFzQixDQUFDO1FBQ25FLFVBQUssR0FBRyxDQUFDLENBQUM7SUE0RXRCLENBQUM7SUEzRUcsc0JBQVcsK0JBQUk7YUFBZjtZQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQUVNLDZCQUFLLEdBQVo7UUFDSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sdUNBQWUsR0FBdEI7UUFDSSxJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUM7WUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7SUFDcEQsQ0FBQztJQUVNLHFDQUFhLEdBQXBCO1FBQ0ksSUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDdkMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNoRCxDQUFDO0lBRU0sbUNBQVcsR0FBbEI7UUFDSSxJQUFJLFFBQVEsR0FBUSxFQUFFLENBQUM7UUFDdkIsS0FBZSxVQUFVLEVBQVYsS0FBQSxJQUFJLENBQUMsS0FBSyxFQUFWLGNBQVUsRUFBVixJQUFVLEVBQUU7WUFBdkIsSUFBTSxDQUFDLFNBQUE7WUFDUCxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN6QjtRQUNELE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7SUFFTSw0QkFBSSxHQUFYLFVBQVksQ0FBSSxFQUFFLFFBQW9CO1FBQXBCLHlCQUFBLEVBQUEsWUFBb0I7UUFDbEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSwrQkFBZSxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxLQUFLLEVBQUcsQ0FBQztRQUNkLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRU0sMkJBQUcsR0FBVjtRQUNJLElBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxLQUFLLEVBQUcsQ0FBQztRQUNkLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7SUFDakMsQ0FBQztJQUVPLCtCQUFPLEdBQWY7UUFDSSxLQUFJLElBQUksQ0FBQyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLElBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3RCO1NBQ0o7SUFDTCxDQUFDO0lBRU8sNkJBQUssR0FBYixVQUFjLENBQVMsRUFBRSxDQUFTO1FBQzlCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ3hCLENBQUM7SUFHRCxjQUFjO0lBQ1Asa0NBQVUsR0FBakIsVUFBa0IsQ0FBSTtRQUNsQixLQUFlLFVBQVUsRUFBVixLQUFBLElBQUksQ0FBQyxLQUFLLEVBQVYsY0FBVSxFQUFWLElBQVUsRUFBRTtZQUF2QixJQUFNLENBQUMsU0FBQTtZQUNQLElBQUcsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7Z0JBQ2IsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVNLDhCQUFNLEdBQWIsVUFBYyxDQUFJO1FBQ2QsS0FBSSxJQUFJLENBQUMsR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRTtnQkFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixJQUFJLENBQUMsS0FBSyxFQUFHLENBQUM7Z0JBQ2QsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0E5RUEsQUE4RUMsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaW9yaXR5RWxlbWVudCB9IGZyb20gXCIuL1ByaW9yaXR5UXVldWVcIjtcblxuLyoqIOW4puS8mOWFiOe6p+eahOagiCAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJpb3JpdHlTdGFjazxUPiB7XG4gICAgcHJpdmF0ZSBzdGFjazogQXJyYXk8UHJpb3JpdHlFbGVtZW50PFQ+PiA9IG5ldyBBcnJheTxQcmlvcml0eUVsZW1lbnQ8VD4+KCk7XG4gICAgcHJpdmF0ZSBfc2l6ZSA9IDA7XG4gICAgcHVibGljIGdldCBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuc3RhY2subGVuZ3RoID0gMDtcbiAgICAgICAgdGhpcy5fc2l6ZSA9IDA7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUb3BFUHJpb3JpdHkoKSB7XG4gICAgICAgIGlmKHRoaXMuc3RhY2subGVuZ3RoIDw9IDApIHJldHVybiAtMTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGgtMV0ucHJpb3JpdHk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFRvcEVsZW1lbnQoKSB7XG4gICAgICAgIGlmKHRoaXMuc3RhY2subGVuZ3RoIDw9IDApIHJldHVybiBudWxsO1xuICAgICAgICByZXR1cm4gdGhpcy5zdGFja1t0aGlzLnN0YWNrLmxlbmd0aC0xXS5kYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRFbGVtZW50cygpIHtcbiAgICAgICAgbGV0IGVsZW1lbnRzOiBUW10gPSBbXTtcbiAgICAgICAgZm9yKGNvbnN0IGUgb2YgdGhpcy5zdGFjaykge1xuICAgICAgICAgICAgZWxlbWVudHMucHVzaChlLmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbGVtZW50cztcbiAgICB9XG5cbiAgICBwdWJsaWMgcHVzaChlOiBULCBwcmlvcml0eTogbnVtYmVyID0gMCkge1xuICAgICAgICB0aGlzLnN0YWNrLnB1c2gobmV3IFByaW9yaXR5RWxlbWVudChlLCBwcmlvcml0eSkpO1xuICAgICAgICB0aGlzLl9zaXplICsrO1xuICAgICAgICB0aGlzLl9hZGp1c3QoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcG9wKCkge1xuICAgICAgICBpZih0aGlzLnN0YWNrLmxlbmd0aCA8PSAwKSByZXR1cm4gbnVsbDtcbiAgICAgICAgdGhpcy5fc2l6ZSAtLTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhY2sucG9wKCkuZGF0YTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9hZGp1c3QoKSB7XG4gICAgICAgIGZvcihsZXQgaT10aGlzLnN0YWNrLmxlbmd0aC0xOyBpPjA7IGktLSkge1xuICAgICAgICAgICAgaWYodGhpcy5zdGFja1tpXSA8IHRoaXMuc3RhY2tbaS0xXSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3N3YXAoaSwgaS0xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX3N3YXAoYTogbnVtYmVyLCBiOiBudW1iZXIpIHtcbiAgICAgICAgbGV0IHRtcCA9IHRoaXMuc3RhY2tbYV07XG4gICAgICAgIHRoaXMuc3RhY2tbYV0gPSB0aGlzLnN0YWNrW2JdO1xuICAgICAgICB0aGlzLnN0YWNrW2JdID0gdG1wO1xuICAgIH1cblxuXG4gICAgLyoqIOaYr+WQpuaciei/meS4quWFg+e0oCAqL1xuICAgIHB1YmxpYyBoYXNFbGVtZW50KHQ6IFQpIHtcbiAgICAgICAgZm9yKGNvbnN0IGUgb2YgdGhpcy5zdGFjaykge1xuICAgICAgICAgICAgaWYoZS5kYXRhID09PSB0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmUodDogVCkge1xuICAgICAgICBmb3IobGV0IGk9dGhpcy5zdGFjay5sZW5ndGgtMTsgaT49MDsgaS0tKSB7XG4gICAgICAgICAgICBpZih0aGlzLnN0YWNrW2ldLmRhdGEgPT09IHQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YWNrLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zaXplIC0tO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UIFrame/EventCenter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '15cf5C/OS9IyY5TeN5ujTW/', 'EventCenter');
// Script/UIFrame/EventCenter.ts

"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventCenter = exports.EventInfo = void 0;
var Pool_1 = require("../Common/Utils/Pool");
var EventInfo = /** @class */ (function () {
    function EventInfo() {
    }
    EventInfo.prototype.free = function () {
        this.callback = null;
        this.target = null;
        this.once = false;
    };
    EventInfo.prototype.init = function (callback, target, once) {
        this.callback = callback;
        this.target = target;
        this.once = once;
    };
    return EventInfo;
}());
exports.EventInfo = EventInfo;
var RemoveCommand = /** @class */ (function () {
    function RemoveCommand(eventName, callback, targetId) {
        this.eventName = eventName;
        this.callback = callback;
        this.targetId = targetId;
    }
    return RemoveCommand;
}());
var idSeed = 1; // 这里有一个小缺陷就是idSeed有最大值,Number.MAX_VALUE
var EventCenter = /** @class */ (function () {
    function EventCenter() {
    }
    EventCenter.on = function (eventName, callback, target, once) {
        if (target === void 0) { target = undefined; }
        if (once === void 0) { once = false; }
        target = target || this;
        var targetId = target['uuid'] || target['id'];
        if (targetId === undefined) {
            target['uuid'] = targetId = '' + idSeed++;
        }
        this.onById(eventName, targetId, target, callback, once);
    };
    EventCenter.once = function (eventName, callback, target) {
        if (target === void 0) { target = undefined; }
        this.on(eventName, callback, target, true);
    };
    EventCenter.onById = function (eventName, targetId, target, cb, once) {
        var collection = this._listeners[eventName];
        if (!collection) {
            collection = this._listeners[eventName] = {};
        }
        var events = collection[targetId];
        if (!events) {
            events = collection[targetId] = [];
        }
        var eventInfo = this._eventPool.alloc();
        eventInfo.init(cb, target, once);
        events.push(eventInfo);
    };
    EventCenter.off = function (eventName, callback, target) {
        if (target === void 0) { target = undefined; }
        target = target || this;
        var targetId = target['uuid'] || target['id'];
        if (!targetId)
            return;
        this.offById(eventName, callback, targetId);
    };
    EventCenter.targetOff = function (target) {
        target = target || this;
        var targetId = target['uuid'] || target['id'];
        if (!targetId)
            return;
        for (var event in this._listeners) {
            var collection = this._listeners[event];
            if (collection[targetId] !== undefined) {
                delete collection[targetId];
            }
        }
    };
    EventCenter.offById = function (eventName, callback, targetId) {
        if (this._dispatching > 0) {
            var cmd = new RemoveCommand(eventName, callback, targetId);
            this._removeCommands.push(cmd);
        }
        else {
            this.doOff(eventName, callback, targetId);
        }
    };
    EventCenter.doOff = function (eventName, callback, targetId) {
        var collection = this._listeners[eventName];
        if (!collection)
            return;
        var events = collection[targetId];
        if (!events)
            return;
        for (var i = events.length - 1; i >= 0; i--) {
            if (events[i].callback === callback) {
                events.splice(i, 1);
            }
        }
        if (events.length === 0) {
            collection[targetId] = null;
            delete collection[targetId];
        }
    };
    EventCenter.doRemoveCommands = function () {
        if (this._dispatching !== 0) {
            return;
        }
        for (var _i = 0, _a = this._removeCommands; _i < _a.length; _i++) {
            var cmd = _a[_i];
            this.doOff(cmd.eventName, cmd.callback, cmd.targetId);
        }
        this._removeCommands.length = 0;
    };
    EventCenter.emit = function (eventName) {
        var _a;
        var param = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            param[_i - 1] = arguments[_i];
        }
        var collection = this._listeners[eventName];
        if (!collection)
            return false;
        this._dispatching++;
        for (var targetId in collection) {
            for (var _b = 0, _c = collection[targetId]; _b < _c.length; _b++) {
                var eventInfo = _c[_b];
                (_a = eventInfo.callback).call.apply(_a, __spreadArrays([eventInfo.target], param));
                if (eventInfo.once) {
                    var cmd = new RemoveCommand(eventName, eventInfo.callback, targetId);
                    this._removeCommands.push(cmd);
                }
            }
        }
        this._dispatching--;
        this.doRemoveCommands();
    };
    EventCenter._listeners = cc.js.createMap();
    EventCenter._dispatching = 0;
    EventCenter._removeCommands = [];
    EventCenter._eventPool = new Pool_1.Pool(function () {
        return new EventInfo();
    }, 10);
    return EventCenter;
}());
exports.EventCenter = EventCenter;
// EventCenter.on("Event1", eventCb);
// function eventCb(param) {
//     console.log(param);
// }
// EventCenter.once('EventOnce', eventOnceCb);
// function eventOnceCb(param) {
//     console.log(param);
// }
// EventCenter.emit('Event1', '123');
// EventCenter.emit('EventOnce', '121233');
// EventCenter.off('Event1', eventCb);
// EventCenter.emit('Event1', '123');
// EventCenter.emit('EventOnce', '123');

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVUlGcmFtZS9FdmVudENlbnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQW1EO0FBRW5EO0lBQUE7SUFnQkEsQ0FBQztJQVhHLHdCQUFJLEdBQUo7UUFDSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsd0JBQUksR0FBSixVQUFLLFFBQWtCLEVBQUUsTUFBYyxFQUFFLElBQWE7UUFDbEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUNMLGdCQUFDO0FBQUQsQ0FoQkEsQUFnQkMsSUFBQTtBQWhCWSw4QkFBUztBQWtCdEI7SUFLSSx1QkFBWSxTQUFpQixFQUFFLFFBQWtCLEVBQUUsUUFBZ0I7UUFDL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0FWQSxBQVVDLElBQUE7QUFFRCxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBUyx3Q0FBd0M7QUFDaEU7SUFBQTtJQXNHQSxDQUFDO0lBNUZpQixjQUFFLEdBQWhCLFVBQWlCLFNBQWlCLEVBQUUsUUFBa0IsRUFBRSxNQUF1QixFQUFFLElBQVk7UUFBckMsdUJBQUEsRUFBQSxrQkFBdUI7UUFBRSxxQkFBQSxFQUFBLFlBQVk7UUFDekYsTUFBTSxHQUFHLE1BQU0sSUFBSSxJQUFJLENBQUM7UUFDeEIsSUFBSSxRQUFRLEdBQVcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0RCxJQUFHLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDdkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLFFBQVEsR0FBRyxFQUFFLEdBQUcsTUFBTSxFQUFFLENBQUM7U0FDN0M7UUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBQ2EsZ0JBQUksR0FBbEIsVUFBbUIsU0FBaUIsRUFBRSxRQUFrQixFQUFFLE1BQXVCO1FBQXZCLHVCQUFBLEVBQUEsa0JBQXVCO1FBQzdFLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUNjLGtCQUFNLEdBQXJCLFVBQXNCLFNBQWlCLEVBQUUsUUFBZ0IsRUFBRSxNQUFXLEVBQUUsRUFBWSxFQUFFLElBQWE7UUFDL0YsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM1QyxJQUFHLENBQUMsVUFBVSxFQUFFO1lBQ1osVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ2hEO1FBQ0QsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xDLElBQUcsQ0FBQyxNQUFNLEVBQUU7WUFDUixNQUFNLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUN0QztRQUNELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDeEMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVhLGVBQUcsR0FBakIsVUFBa0IsU0FBaUIsRUFBRSxRQUFrQixFQUFFLE1BQXVCO1FBQXZCLHVCQUFBLEVBQUEsa0JBQXVCO1FBQzVFLE1BQU0sR0FBRyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ3hCLElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBRyxDQUFDLFFBQVE7WUFBRSxPQUFRO1FBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBQ2EscUJBQVMsR0FBdkIsVUFBd0IsTUFBVztRQUMvQixNQUFNLEdBQUcsTUFBTSxJQUFJLElBQUksQ0FBQztRQUN4QixJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlDLElBQUcsQ0FBQyxRQUFRO1lBQUUsT0FBUTtRQUN0QixLQUFJLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDOUIsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN4QyxJQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxTQUFTLEVBQUU7Z0JBQ25DLE9BQU8sVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQy9CO1NBQ0o7SUFDTCxDQUFDO0lBQ2MsbUJBQU8sR0FBdEIsVUFBdUIsU0FBaUIsRUFBRSxRQUFrQixFQUFFLFFBQWdCO1FBQzFFLElBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLEVBQUU7WUFDdEIsSUFBSSxHQUFHLEdBQUcsSUFBSSxhQUFhLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUMzRCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNsQzthQUFLO1lBQ0YsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQzdDO0lBQ0wsQ0FBQztJQUNjLGlCQUFLLEdBQXBCLFVBQXFCLFNBQWlCLEVBQUUsUUFBa0IsRUFBRSxRQUFnQjtRQUN4RSxJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLElBQUcsQ0FBQyxVQUFVO1lBQUUsT0FBUTtRQUN4QixJQUFJLE1BQU0sR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEMsSUFBRyxDQUFDLE1BQU07WUFBRSxPQUFRO1FBQ3BCLEtBQUksSUFBSSxDQUFDLEdBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNsQyxJQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssUUFBUSxFQUFFO2dCQUNoQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUN2QjtTQUNKO1FBQ0QsSUFBRyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNwQixVQUFVLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQzVCLE9BQU8sVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQy9CO0lBQ0wsQ0FBQztJQUVjLDRCQUFnQixHQUEvQjtRQUNJLElBQUcsSUFBSSxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUU7WUFDeEIsT0FBTztTQUNWO1FBQ0QsS0FBZSxVQUFvQixFQUFwQixLQUFBLElBQUksQ0FBQyxlQUFlLEVBQXBCLGNBQW9CLEVBQXBCLElBQW9CLEVBQUU7WUFBakMsSUFBSSxHQUFHLFNBQUE7WUFDUCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekQ7UUFDRCxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVhLGdCQUFJLEdBQWxCLFVBQW1CLFNBQWlCOztRQUFFLGVBQWU7YUFBZixVQUFlLEVBQWYscUJBQWUsRUFBZixJQUFlO1lBQWYsOEJBQWU7O1FBQ2pELElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUMsSUFBRyxDQUFDLFVBQVU7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUM3QixJQUFJLENBQUMsWUFBWSxFQUFHLENBQUM7UUFDckIsS0FBSSxJQUFJLFFBQVEsSUFBSSxVQUFVLEVBQUU7WUFDNUIsS0FBcUIsVUFBb0IsRUFBcEIsS0FBQSxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQXBCLGNBQW9CLEVBQXBCLElBQW9CLEVBQUU7Z0JBQXZDLElBQUksU0FBUyxTQUFBO2dCQUNiLENBQUEsS0FBQSxTQUFTLENBQUMsUUFBUSxDQUFBLENBQUMsSUFBSSwyQkFBQyxTQUFTLENBQUMsTUFBTSxHQUFLLEtBQUssR0FBRTtnQkFDcEQsSUFBRyxTQUFTLENBQUMsSUFBSSxFQUFFO29CQUNmLElBQUksR0FBRyxHQUFHLElBQUksYUFBYSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO29CQUNyRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDbEM7YUFDSjtTQUNKO1FBQ0QsSUFBSSxDQUFDLFlBQVksRUFBRyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFuR2Msc0JBQVUsR0FBNEQsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN4Rix3QkFBWSxHQUFZLENBQUMsQ0FBQztJQUMxQiwyQkFBZSxHQUFxQixFQUFFLENBQUM7SUFFdkMsc0JBQVUsR0FBb0IsSUFBSSxXQUFJLENBQVk7UUFDN0QsT0FBTyxJQUFJLFNBQVMsRUFBRSxDQUFDO0lBQzNCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQThGWCxrQkFBQztDQXRHRCxBQXNHQyxJQUFBO0FBdEdZLGtDQUFXO0FBeUd4QixxQ0FBcUM7QUFFckMsNEJBQTRCO0FBQzVCLDBCQUEwQjtBQUMxQixJQUFJO0FBRUosOENBQThDO0FBRTlDLGdDQUFnQztBQUNoQywwQkFBMEI7QUFDMUIsSUFBSTtBQUVKLHFDQUFxQztBQUNyQywyQ0FBMkM7QUFFM0Msc0NBQXNDO0FBRXRDLHFDQUFxQztBQUNyQyx3Q0FBd0MiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb29sLCBJUG9vbCB9IGZyb20gXCIuLi9Db21tb24vVXRpbHMvUG9vbFwiO1xuXG5leHBvcnQgY2xhc3MgRXZlbnRJbmZvIGltcGxlbWVudHMgSVBvb2wge1xuICAgIGNhbGxiYWNrOiBGdW5jdGlvbjtcbiAgICB0YXJnZXQ6IGFueTtcbiAgICBvbmNlOiBib29sZWFuO1xuXG4gICAgZnJlZSgpIHtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IG51bGw7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgdGhpcy5vbmNlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaW5pdChjYWxsYmFjazogRnVuY3Rpb24sIHRhcmdldDogT2JqZWN0LCBvbmNlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gICAgICAgIHRoaXMub25jZSA9IG9uY2U7XG4gICAgfVxufVxuXG5jbGFzcyBSZW1vdmVDb21tYW5kIHtcbiAgICBwdWJsaWMgZXZlbnROYW1lOnN0cmluZztcbiAgICBwdWJsaWMgdGFyZ2V0SWQ6c3RyaW5nO1xuICAgIHB1YmxpYyBjYWxsYmFjazogRnVuY3Rpb247XG5cbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCB0YXJnZXRJZDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZXZlbnROYW1lID0gZXZlbnROYW1lO1xuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMudGFyZ2V0SWQgPSB0YXJnZXRJZDtcbiAgICB9XG59XG5cbmxldCBpZFNlZWQgPSAxOyAgICAgICAgIC8vIOi/memHjOacieS4gOS4quWwj+e8uumZt+WwseaYr2lkU2VlZOacieacgOWkp+WAvCxOdW1iZXIuTUFYX1ZBTFVFXG5leHBvcnQgY2xhc3MgRXZlbnRDZW50ZXIge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2xpc3RlbmVyczoge1tldmVudE5hbWU6IHN0cmluZ106IHtbaWQ6IHN0cmluZ106IEFycmF5PEV2ZW50SW5mbz59fSA9IGNjLmpzLmNyZWF0ZU1hcCgpO1xuICAgIHByaXZhdGUgc3RhdGljIF9kaXNwYXRjaGluZyA6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBzdGF0aWMgX3JlbW92ZUNvbW1hbmRzIDogUmVtb3ZlQ29tbWFuZFtdID0gW107XG5cbiAgICBwcml2YXRlIHN0YXRpYyBfZXZlbnRQb29sOiBQb29sPEV2ZW50SW5mbz4gPSBuZXcgUG9vbDxFdmVudEluZm8+KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBFdmVudEluZm8oKTtcbiAgICB9LCAxMCk7XG5cbiAgICBwdWJsaWMgc3RhdGljIG9uKGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24sIHRhcmdldDogYW55ID0gdW5kZWZpbmVkLCBvbmNlID0gZmFsc2UpIHtcbiAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0IHx8IHRoaXM7XG4gICAgICAgIGxldCB0YXJnZXRJZDogc3RyaW5nID0gdGFyZ2V0Wyd1dWlkJ10gfHwgdGFyZ2V0WydpZCddO1xuICAgICAgICBpZih0YXJnZXRJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0YXJnZXRbJ3V1aWQnXSA9IHRhcmdldElkID0gJycgKyBpZFNlZWQrKztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uQnlJZChldmVudE5hbWUsIHRhcmdldElkLCB0YXJnZXQsIGNhbGxiYWNrLCBvbmNlKTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBvbmNlKGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24sIHRhcmdldDogYW55ID0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMub24oZXZlbnROYW1lLCBjYWxsYmFjaywgdGFyZ2V0LCB0cnVlKTtcbiAgICB9XG4gICAgcHJpdmF0ZSBzdGF0aWMgb25CeUlkKGV2ZW50TmFtZTogc3RyaW5nLCB0YXJnZXRJZDogc3RyaW5nLCB0YXJnZXQ6IGFueSwgY2I6IEZ1bmN0aW9uLCBvbmNlOiBib29sZWFuKSB7XG4gICAgICAgIGxldCBjb2xsZWN0aW9uID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV07XG4gICAgICAgIGlmKCFjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgICBjb2xsZWN0aW9uID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV0gPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZXZlbnRzID0gY29sbGVjdGlvblt0YXJnZXRJZF07XG4gICAgICAgIGlmKCFldmVudHMpIHtcbiAgICAgICAgICAgIGV2ZW50cyA9IGNvbGxlY3Rpb25bdGFyZ2V0SWRdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGV2ZW50SW5mbyA9IHRoaXMuX2V2ZW50UG9vbC5hbGxvYygpO1xuICAgICAgICBldmVudEluZm8uaW5pdChjYiwgdGFyZ2V0LCBvbmNlKTtcbiAgICAgICAgZXZlbnRzLnB1c2goZXZlbnRJbmZvKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG9mZihldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCB0YXJnZXQ6IGFueSA9IHVuZGVmaW5lZCkge1xuICAgICAgICB0YXJnZXQgPSB0YXJnZXQgfHwgdGhpcztcbiAgICAgICAgbGV0IHRhcmdldElkID0gdGFyZ2V0Wyd1dWlkJ10gfHwgdGFyZ2V0WydpZCddO1xuICAgICAgICBpZighdGFyZ2V0SWQpIHJldHVybiA7XG4gICAgICAgIHRoaXMub2ZmQnlJZChldmVudE5hbWUsIGNhbGxiYWNrLCB0YXJnZXRJZCk7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgdGFyZ2V0T2ZmKHRhcmdldDogYW55KSB7XG4gICAgICAgIHRhcmdldCA9IHRhcmdldCB8fCB0aGlzO1xuICAgICAgICBsZXQgdGFyZ2V0SWQgPSB0YXJnZXRbJ3V1aWQnXSB8fCB0YXJnZXRbJ2lkJ107XG4gICAgICAgIGlmKCF0YXJnZXRJZCkgcmV0dXJuIDtcbiAgICAgICAgZm9yKGxldCBldmVudCBpbiB0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50XTtcbiAgICAgICAgICAgIGlmKGNvbGxlY3Rpb25bdGFyZ2V0SWRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgY29sbGVjdGlvblt0YXJnZXRJZF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJpdmF0ZSBzdGF0aWMgb2ZmQnlJZChldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCB0YXJnZXRJZDogc3RyaW5nKSB7XG4gICAgICAgIGlmKHRoaXMuX2Rpc3BhdGNoaW5nID4gMCkge1xuICAgICAgICAgICAgbGV0IGNtZCA9IG5ldyBSZW1vdmVDb21tYW5kKGV2ZW50TmFtZSwgY2FsbGJhY2ssIHRhcmdldElkKTtcbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZUNvbW1hbmRzLnB1c2goY21kKTtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgdGhpcy5kb09mZihldmVudE5hbWUsIGNhbGxiYWNrLCB0YXJnZXRJZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJpdmF0ZSBzdGF0aWMgZG9PZmYoZXZlbnROYW1lOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiwgdGFyZ2V0SWQ6IHN0cmluZykge1xuICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHRoaXMuX2xpc3RlbmVyc1tldmVudE5hbWVdO1xuICAgICAgICBpZighY29sbGVjdGlvbikgcmV0dXJuIDtcbiAgICAgICAgbGV0IGV2ZW50cyA9IGNvbGxlY3Rpb25bdGFyZ2V0SWRdO1xuICAgICAgICBpZighZXZlbnRzKSByZXR1cm4gO1xuICAgICAgICBmb3IobGV0IGk9ZXZlbnRzLmxlbmd0aC0xOyBpPj0wOyBpLS0pIHtcbiAgICAgICAgICAgIGlmKGV2ZW50c1tpXS5jYWxsYmFjayA9PT0gY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBldmVudHMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKGV2ZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbGxlY3Rpb25bdGFyZ2V0SWRdID0gbnVsbDtcbiAgICAgICAgICAgIGRlbGV0ZSBjb2xsZWN0aW9uW3RhcmdldElkXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGRvUmVtb3ZlQ29tbWFuZHMoKSB7XG4gICAgICAgIGlmKHRoaXMuX2Rpc3BhdGNoaW5nICE9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZm9yKGxldCBjbWQgb2YgdGhpcy5fcmVtb3ZlQ29tbWFuZHMpIHtcbiAgICAgICAgICAgIHRoaXMuZG9PZmYoY21kLmV2ZW50TmFtZSwgY21kLmNhbGxiYWNrLCBjbWQudGFyZ2V0SWQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3JlbW92ZUNvbW1hbmRzLmxlbmd0aCA9IDA7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgZW1pdChldmVudE5hbWU6IHN0cmluZywgLi4ucGFyYW06IGFueVtdKSB7XG4gICAgICAgIGxldCBjb2xsZWN0aW9uID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50TmFtZV07XG4gICAgICAgIGlmKCFjb2xsZWN0aW9uKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoaW5nICsrO1xuICAgICAgICBmb3IobGV0IHRhcmdldElkIGluIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgICAgIGZvcihsZXQgZXZlbnRJbmZvIG9mIGNvbGxlY3Rpb25bdGFyZ2V0SWRdKSB7XG4gICAgICAgICAgICAgICAgZXZlbnRJbmZvLmNhbGxiYWNrLmNhbGwoZXZlbnRJbmZvLnRhcmdldCwgLi4ucGFyYW0pO1xuICAgICAgICAgICAgICAgIGlmKGV2ZW50SW5mby5vbmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjbWQgPSBuZXcgUmVtb3ZlQ29tbWFuZChldmVudE5hbWUsIGV2ZW50SW5mby5jYWxsYmFjaywgdGFyZ2V0SWQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yZW1vdmVDb21tYW5kcy5wdXNoKGNtZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Rpc3BhdGNoaW5nIC0tO1xuICAgICAgICB0aGlzLmRvUmVtb3ZlQ29tbWFuZHMoKTtcbiAgICB9XG59XG5cblxuLy8gRXZlbnRDZW50ZXIub24oXCJFdmVudDFcIiwgZXZlbnRDYik7XG5cbi8vIGZ1bmN0aW9uIGV2ZW50Q2IocGFyYW0pIHtcbi8vICAgICBjb25zb2xlLmxvZyhwYXJhbSk7XG4vLyB9XG5cbi8vIEV2ZW50Q2VudGVyLm9uY2UoJ0V2ZW50T25jZScsIGV2ZW50T25jZUNiKTtcblxuLy8gZnVuY3Rpb24gZXZlbnRPbmNlQ2IocGFyYW0pIHtcbi8vICAgICBjb25zb2xlLmxvZyhwYXJhbSk7XG4vLyB9XG5cbi8vIEV2ZW50Q2VudGVyLmVtaXQoJ0V2ZW50MScsICcxMjMnKTtcbi8vIEV2ZW50Q2VudGVyLmVtaXQoJ0V2ZW50T25jZScsICcxMjEyMzMnKTtcblxuLy8gRXZlbnRDZW50ZXIub2ZmKCdFdmVudDEnLCBldmVudENiKTtcblxuLy8gRXZlbnRDZW50ZXIuZW1pdCgnRXZlbnQxJywgJzEyMycpO1xuLy8gRXZlbnRDZW50ZXIuZW1pdCgnRXZlbnRPbmNlJywgJzEyMycpOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Common/Utils/BroadCast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '082ecq87BtC3qGrtG+cRJqY', 'BroadCast');
// Script/Common/Utils/BroadCast.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListenerBinding = exports.Broadcast = void 0;
var Broadcast = /** @class */ (function () {
    function Broadcast() {
        this.bindings = [];
    }
    Broadcast.prototype.on = function (listener, target) {
        var binding = new ListenerBinding(listener, target, false, this);
        this.bindings.push(binding);
        return binding;
    };
    Broadcast.prototype.once = function (listener, target) {
        var binding = new ListenerBinding(listener, target, true, this);
        this.bindings.push(binding);
        return binding;
    };
    Broadcast.prototype.dispatch = function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        var flag = false;
        for (var _a = 0, _b = this.bindings; _a < _b.length; _a++) {
            var item = _b[_a];
            if (!item.hasDestroyed) {
                item.execute.apply(item, params);
            }
            else {
                flag = true;
            }
        }
        if (flag) {
            for (var i = 0; i < this.bindings.length; i++) {
                if (this.bindings[i].hasDestroyed) {
                    this.bindings.splice(i, 1);
                    i--;
                }
            }
        }
    };
    Broadcast.prototype.get = function (listener, target) {
        for (var _i = 0, _a = this.bindings; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.listener == listener && item.target == target && !item.hasDestroyed)
                return item;
        }
        return null;
    };
    Broadcast.prototype.has = function (listener, target) {
        for (var _i = 0, _a = this.bindings; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.listener == listener && item.target == target && !item.hasDestroyed)
                return true;
        }
        return false;
    };
    Broadcast.prototype.remove = function (listener, target) {
        for (var _i = 0, _a = this.bindings; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.listener == listener && item.target == target && !item.hasDestroyed) {
                return item.destroy();
            }
        }
    };
    Broadcast.prototype.removeAll = function () {
        while (this.bindings.length) {
            this.bindings.pop().destroy();
        }
    };
    return Broadcast;
}());
exports.Broadcast = Broadcast;
var ListenerBinding = /** @class */ (function () {
    function ListenerBinding(listener, target, once, boradcast) {
        var _this = this;
        this.destroySelf = function () {
            _this.destroy();
        };
        this.listener = listener;
        this.target = target;
        this.once = once;
        this.broadcast = boradcast;
        this.hasDestroyed = false;
    }
    ListenerBinding.prototype.execute = function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        if (!this.hasDestroyed) {
            var result = this.listener.apply(this.target, params);
            if (this.once) {
                this.destroy();
            }
            return result;
        }
        return null;
    };
    ListenerBinding.prototype.destroy = function () {
        this.listener = null;
        this.target = null;
        this.once = null;
        this.broadcast = null;
        this.hasDestroyed = true;
    };
    return ListenerBinding;
}());
exports.ListenerBinding = ListenerBinding;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Logic/Manager/BaseMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5e629wf1WBDNaVfkPO8PSYi', 'BaseMgr');
// Script/Logic/Manager/BaseMgr.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseMgr = void 0;
var BaseMgr = /** @class */ (function () {
    function BaseMgr(game) {
        this.game = null;
        this.game = game;
    }
    return BaseMgr;
}());
exports.BaseMgr = BaseMgr;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTG9naWMvTWFuYWdlci9CYXNlTWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0lBRUksaUJBQVksSUFBVTtRQUR0QixTQUFJLEdBQVMsSUFBSSxDQUFDO1FBRWQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQUxBLEFBS0MsSUFBQTtBQUxZLDBCQUFPIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2FtZSB9IGZyb20gXCIuLi9HYW1lXCJcbmV4cG9ydCBjbGFzcyBCYXNlTWdyIHtcbiAgICBnYW1lOiBHYW1lID0gbnVsbDtcbiAgICBjb25zdHJ1Y3RvcihnYW1lOiBHYW1lKSB7XG4gICAgICAgIHRoaXMuZ2FtZSA9IGdhbWU7XG4gICAgfVxufSJdfQ==
//------QC-SOURCE-SPLIT------
